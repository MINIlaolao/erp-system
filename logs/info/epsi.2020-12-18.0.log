09:25:56.710 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.6.Final
09:25:56.712 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication using Java 14.0.1 on developer01deiMac.local with PID 7947 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
09:25:56.713 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
09:25:56.761 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
09:25:56.761 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
09:25:58.121 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
09:25:58.128 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
09:25:58.129 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
09:25:58.129 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.39]
09:25:58.194 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
09:25:58.194 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1432 ms
09:25:58.834 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
09:25:59.364 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
09:25:59.401 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
09:25:59.481 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/v2/api-docs', GET] with []
09:25:59.481 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources', GET] with []
09:25:59.481 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources/**', GET] with []
09:25:59.481 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/ui', GET] with []
09:25:59.482 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/security', GET] with []
09:25:59.482 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-ui.html/**', GET] with []
09:25:59.482 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/webjars/**', GET] with []
09:25:59.501 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b9cf6de, org.springframework.security.web.context.SecurityContextPersistenceFilter@12396bb6, org.springframework.security.web.header.HeaderWriterFilter@4d6c00b6, org.springframework.web.filter.CorsFilter@7560da0a, net.kintex.epsi.user.filter.JwtAuthenticationFilter@74bd5df5, org.springframework.security.web.authentication.logout.LogoutFilter@14fb98d1, net.kintex.epsi.user.filter.AuthenticationFilter@41cbc6b8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6b94031a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5842aaff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6b2c73a6, org.springframework.security.web.access.ExceptionTranslationFilter@322d4af0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4811394]
09:25:59.581 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
09:25:59.619 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
09:25:59.678 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
09:25:59.678 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
09:25:59.678 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
09:25:59.678 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
09:25:59.802 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
09:25:59.814 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
09:25:59.815 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
09:25:59.823 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
09:25:59.845 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
09:26:00.055 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
09:26:00.060 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
09:26:00.061 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
09:26:00.093 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
09:26:00.094 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
09:26:00.129 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
09:26:00.157 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
09:26:00.159 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: deleteOneUsingPOST_1
09:26:00.189 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: getAllWonBidUsingGET_1
09:26:00.225 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.865 seconds (JVM running for 4.959)
09:26:00.581 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
09:26:00.581 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
09:26:00.583 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
09:26:00.607 [RMI TCP Connection(2)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
09:26:01.023 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Jakarta Mail version 1.6.5
09:26:01.038 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
09:26:01.039 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Tables of loaded providers
09:26:01.039 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
09:26:01.039 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
09:26:01.040 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
09:27:43.650 [http-nio-34571-exec-1] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 102688
09:27:43.951 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
09:27:44.108 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
09:27:44.140 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
09:27:44.290 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
09:27:44.290 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
09:27:44.302 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
09:27:45.520 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
09:27:45.521 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
09:27:45.532 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
09:27:45.648 [http-nio-34571-exec-2] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
09:27:45.649 [http-nio-34571-exec-2] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
09:27:45.662 [http-nio-34571-exec-2] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
09:27:45.690 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
09:27:45.690 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
09:27:46.098 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
09:27:46.098 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
09:27:46.110 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
09:27:46.113 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
09:27:46.113 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
09:27:46.124 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
09:27:46.125 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
09:27:46.125 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
09:27:46.136 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
09:27:46.252 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
09:27:46.254 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
09:27:46.266 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
09:27:46.267 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
09:27:46.268 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
09:27:46.287 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
09:27:46.312 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
09:27:46.312 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
09:27:46.313 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
09:27:46.313 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
09:27:46.318 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
09:27:46.318 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
09:27:46.322 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
09:27:46.323 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
09:27:46.325 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
09:27:46.328 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
09:27:46.328 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
09:27:46.329 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
09:27:46.335 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
09:27:46.346 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
09:27:46.347 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
09:27:46.347 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
09:27:46.366 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
09:27:46.366 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
09:38:29.760 [http-nio-34571-exec-6] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 643354
09:38:29.771 [http-nio-34571-exec-6] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 643405
09:38:29.777 [http-nio-34571-exec-6] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 643430
09:38:29.860 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
09:38:29.862 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
09:38:29.870 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
09:38:29.945 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
09:38:29.946 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
09:38:29.954 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
09:38:29.964 [http-nio-34571-exec-6] DEBUG n.k.e.p.dao.BidDao.selectCreatedAt - ==>  Preparing: SELECT * FROM epsi_bid WHERE created_at >= ? ORDER BY created_at DESC limit 1
09:38:29.965 [http-nio-34571-exec-6] DEBUG n.k.e.p.dao.BidDao.selectCreatedAt - ==> Parameters: 2020-12-18(String)
09:38:29.972 [http-nio-34571-exec-6] DEBUG n.k.e.p.dao.BidDao.selectCreatedAt - <==      Total: 0
09:38:29.984 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getNewBidNumber' parameter -1
09:38:29.985 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:00:44.555 [http-nio-34571-exec-7] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 1334571
10:00:44.696 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
10:00:44.696 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
10:00:44.707 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
10:00:44.781 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
10:00:44.782 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
10:00:44.792 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
10:00:44.804 [http-nio-34571-exec-7] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
10:00:44.805 [http-nio-34571-exec-7] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
10:00:44.816 [http-nio-34571-exec-7] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
10:00:44.835 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
10:00:44.835 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:00:44.890 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
10:00:44.890 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
10:00:44.901 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
10:00:44.988 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
10:00:44.988 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
10:00:44.998 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
10:00:44.999 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
10:00:44.999 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
10:00:45.012 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
10:00:45.031 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
10:00:45.031 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:00:45.196 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
10:00:45.196 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
10:00:45.207 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
10:00:45.207 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
10:00:45.208 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
10:00:45.218 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
10:00:45.296 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
10:00:45.296 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
10:00:45.308 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
10:00:45.309 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
10:00:45.309 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
10:00:45.321 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
10:00:45.331 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
10:00:45.331 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
10:00:45.340 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
10:00:45.340 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:00:45.346 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
10:00:45.347 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
10:00:45.347 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
10:00:45.356 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
10:00:45.374 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
10:00:45.374 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:00:47.144 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
10:00:47.145 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
10:00:47.155 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
10:00:47.251 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_bid` AS eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid AS ewb ON ewb.bid_id = eb.bid_id
10:00:47.254 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 
10:00:47.263 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
10:00:47.263 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==>  Preparing: SELECT eb.`bid_id` AS `id`, eb.`bid_date` AS `bidDate`, ev.`vendor_name` AS vendor, ewb.`won_number` AS wonNumber, ewb.`won_date` AS wonDate, ewb.`amount` AS amount FROM `epsi_bid` as eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid as ewb on ewb.bid_id = eb.bid_id order by eb.created_at desc LIMIT ?
10:00:47.264 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==> Parameters: 20(Integer)
10:00:47.275 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - <==      Total: 9
10:00:47.293 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyBid' parameter -1
10:00:47.293 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:00:49.577 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
10:00:49.578 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
10:00:49.587 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
10:00:49.671 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
10:00:49.675 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201217001(String)
10:00:49.685 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
10:00:49.704 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
10:00:49.704 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:00:50.018 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
10:00:50.019 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
10:00:50.028 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
10:00:50.122 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
10:00:50.123 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201217001(String)
10:00:50.132 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
10:00:50.133 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
10:00:50.134 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201217001(String), 20(Integer)
10:00:50.144 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
10:00:50.144 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
10:00:50.145 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201217001(String)
10:00:50.154 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
10:00:50.173 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
10:00:50.173 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:00:53.511 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
10:00:53.511 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
10:00:53.521 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
10:00:53.606 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==>  Preparing: SELECT LPAD(COUNT(*) + 1,4,0) FROM epsi_won_bid LEFT JOIN epsi_bid eb on epsi_won_bid.bid_id = eb.bid_id WHERE vendor_id = ? AND YEAR(epsi_won_bid.created_at) BETWEEN ? AND ? + 1
10:00:53.607 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==> Parameters: 2(String), 2020(String), 2020(String)
10:00:53.616 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - <==      Total: 1
10:00:53.617 [http-nio-34571-exec-4] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==>  Preparing: SELECT vendor_code FROM epsi_vendor WHERE vendor_id = ?
10:00:53.618 [http-nio-34571-exec-4] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==> Parameters: 2(String)
10:00:53.626 [http-nio-34571-exec-4] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - <==      Total: 1
10:00:53.645 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getWonBidNumber' parameter -1
10:00:53.645 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:19:06.773 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
10:19:06.779 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
10:19:06.783 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
10:20:10.450 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.6.Final
10:20:10.449 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication using Java 14.0.1 on developer01deiMac.local with PID 9003 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
10:20:10.453 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
10:20:10.493 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
10:20:10.493 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
10:20:11.793 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
10:20:11.799 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
10:20:11.800 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
10:20:11.800 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.39]
10:20:11.858 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
10:20:11.858 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1364 ms
10:20:12.429 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
10:20:12.998 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
10:20:13.036 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
10:20:13.111 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/v2/api-docs', GET] with []
10:20:13.111 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources', GET] with []
10:20:13.112 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources/**', GET] with []
10:20:13.112 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/ui', GET] with []
10:20:13.112 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/security', GET] with []
10:20:13.112 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-ui.html/**', GET] with []
10:20:13.112 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/webjars/**', GET] with []
10:20:13.128 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5c43adb4, org.springframework.security.web.context.SecurityContextPersistenceFilter@24ba1f84, org.springframework.security.web.header.HeaderWriterFilter@1bb14668, org.springframework.web.filter.CorsFilter@63fc8e5c, net.kintex.epsi.user.filter.JwtAuthenticationFilter@385a48d6, org.springframework.security.web.authentication.logout.LogoutFilter@24feb554, net.kintex.epsi.user.filter.AuthenticationFilter@39553544, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7ac92648, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ec1b1ee, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@98a760d, org.springframework.security.web.access.ExceptionTranslationFilter@1bd606f7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@44d1c193]
10:20:13.208 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
10:20:13.232 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
10:20:13.289 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
10:20:13.290 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
10:20:13.290 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
10:20:13.290 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
10:20:13.421 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
10:20:13.434 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
10:20:13.435 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
10:20:13.443 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
10:20:13.466 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
10:20:13.711 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
10:20:13.718 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
10:20:13.719 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
10:20:13.757 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
10:20:13.757 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
10:20:13.805 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
10:20:13.836 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
10:20:13.837 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: deleteOneUsingPOST_1
10:20:13.868 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: getAllWonBidUsingGET_1
10:20:13.905 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.77 seconds (JVM running for 4.291)
10:20:14.137 [RMI TCP Connection(6)-192.168.0.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
10:20:14.137 [RMI TCP Connection(6)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
10:20:14.138 [RMI TCP Connection(6)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
10:20:14.170 [RMI TCP Connection(5)-192.168.0.101] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:20:14.494 [RMI TCP Connection(5)-192.168.0.101] INFO  javax.mail - Jakarta Mail version 1.6.5
10:20:14.504 [RMI TCP Connection(5)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
10:20:14.504 [RMI TCP Connection(5)-192.168.0.101] INFO  javax.mail - Tables of loaded providers
10:20:14.505 [RMI TCP Connection(5)-192.168.0.101] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:20:14.505 [RMI TCP Connection(5)-192.168.0.101] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:20:14.505 [RMI TCP Connection(5)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
10:21:53.923 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
10:21:53.927 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
10:21:53.930 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
10:21:56.718 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.6.Final
10:21:56.718 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication using Java 14.0.1 on developer01deiMac.local with PID 9025 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
10:21:56.720 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
10:21:56.755 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
10:21:56.755 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
10:21:57.959 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
10:21:57.965 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
10:21:57.966 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
10:21:57.966 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.39]
10:21:58.024 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
10:21:58.024 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1268 ms
10:21:58.593 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
10:21:59.104 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
10:21:59.138 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
10:21:59.204 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/v2/api-docs', GET] with []
10:21:59.205 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources', GET] with []
10:21:59.205 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources/**', GET] with []
10:21:59.205 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/ui', GET] with []
10:21:59.205 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/security', GET] with []
10:21:59.205 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-ui.html/**', GET] with []
10:21:59.205 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/webjars/**', GET] with []
10:21:59.221 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@58ea40c4, org.springframework.security.web.context.SecurityContextPersistenceFilter@c3d73c5, org.springframework.security.web.header.HeaderWriterFilter@8382176, org.springframework.web.filter.CorsFilter@4ece2e01, net.kintex.epsi.user.filter.JwtAuthenticationFilter@390d843, org.springframework.security.web.authentication.logout.LogoutFilter@65eb1e10, net.kintex.epsi.user.filter.AuthenticationFilter@3b7d8584, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ec1b1ee, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d6c00b6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4b19b55b, org.springframework.security.web.access.ExceptionTranslationFilter@11777715, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7ef51c9b]
10:21:59.301 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
10:21:59.326 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
10:21:59.378 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
10:21:59.378 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
10:21:59.379 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
10:21:59.379 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
10:21:59.493 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
10:21:59.504 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
10:21:59.505 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
10:21:59.513 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
10:21:59.532 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
10:21:59.742 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
10:21:59.748 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
10:21:59.749 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
10:21:59.780 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
10:21:59.781 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
10:21:59.814 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
10:21:59.840 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
10:21:59.841 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: deleteOneUsingPOST_1
10:21:59.872 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: getAllWonBidUsingGET_1
10:21:59.907 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.497 seconds (JVM running for 4.021)
10:22:00.394 [RMI TCP Connection(4)-192.168.0.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
10:22:00.394 [RMI TCP Connection(4)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
10:22:00.395 [RMI TCP Connection(4)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
10:22:00.424 [RMI TCP Connection(3)-192.168.0.101] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:22:00.800 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - Jakarta Mail version 1.6.5
10:22:00.814 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
10:22:00.814 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - Tables of loaded providers
10:22:00.814 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:22:00.814 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:22:00.815 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
10:36:55.509 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
10:36:55.514 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
10:36:55.519 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
10:39:15.335 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication using Java 14.0.1 on developer01deiMac.local with PID 9535 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
10:39:15.337 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.6.Final
10:39:15.338 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
10:39:15.382 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
10:39:15.383 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
10:39:16.771 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
10:39:16.778 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
10:39:16.779 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
10:39:16.779 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.39]
10:39:16.850 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
10:39:16.850 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1466 ms
10:39:17.447 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
10:39:17.952 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
10:39:17.988 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
10:39:18.057 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/v2/api-docs', GET] with []
10:39:18.057 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources', GET] with []
10:39:18.057 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources/**', GET] with []
10:39:18.057 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/ui', GET] with []
10:39:18.057 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/security', GET] with []
10:39:18.057 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-ui.html/**', GET] with []
10:39:18.057 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/webjars/**', GET] with []
10:39:18.074 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4c00e962, org.springframework.security.web.context.SecurityContextPersistenceFilter@2cf96d04, org.springframework.security.web.header.HeaderWriterFilter@2b9be32e, org.springframework.web.filter.CorsFilter@34de23a5, net.kintex.epsi.user.filter.JwtAuthenticationFilter@624a341a, org.springframework.security.web.authentication.logout.LogoutFilter@21fffbbc, net.kintex.epsi.user.filter.AuthenticationFilter@4182f6a1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4811394, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4f7d7ef, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7873bc0, org.springframework.security.web.access.ExceptionTranslationFilter@58b883f6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2f58a3fd]
10:39:18.148 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
10:39:18.184 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
10:39:18.237 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
10:39:18.238 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
10:39:18.238 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
10:39:18.238 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
10:39:18.357 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
10:39:18.370 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
10:39:18.371 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
10:39:18.379 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
10:39:18.401 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
10:39:18.634 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
10:39:18.639 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
10:39:18.640 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
10:39:18.670 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
10:39:18.671 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
10:39:18.707 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
10:39:18.734 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
10:39:18.735 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: deleteOneUsingPOST_1
10:39:18.765 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: getAllWonBidUsingGET_1
10:39:18.801 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.781 seconds (JVM running for 4.314)
10:39:19.034 [RMI TCP Connection(5)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
10:39:19.035 [RMI TCP Connection(5)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
10:39:19.037 [RMI TCP Connection(5)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
10:39:19.074 [RMI TCP Connection(6)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:39:19.436 [RMI TCP Connection(6)-127.0.0.1] INFO  javax.mail - Jakarta Mail version 1.6.5
10:39:19.446 [RMI TCP Connection(6)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
10:39:19.447 [RMI TCP Connection(6)-127.0.0.1] INFO  javax.mail - Tables of loaded providers
10:39:19.447 [RMI TCP Connection(6)-127.0.0.1] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:39:19.447 [RMI TCP Connection(6)-127.0.0.1] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:39:19.447 [RMI TCP Connection(6)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
10:49:08.645 [http-nio-34571-exec-1] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 589253
10:49:08.739 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
10:49:08.891 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
10:49:08.916 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
10:49:09.017 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
10:49:09.018 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
10:49:09.025 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
10:49:09.065 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
10:49:09.070 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201217001(String)
10:49:09.080 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
10:49:09.100 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
10:49:09.100 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:49:09.139 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
10:49:09.139 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
10:49:09.147 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
10:49:09.222 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
10:49:09.223 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
10:49:09.230 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
10:49:09.238 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
10:49:09.239 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201217001(String)
10:49:09.247 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
10:49:09.260 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
10:49:09.260 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:49:09.528 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
10:49:09.529 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
10:49:09.537 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
10:49:09.691 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
10:49:09.693 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201217001(String)
10:49:09.700 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
10:49:09.701 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
10:49:09.704 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201217001(String), 20(Integer)
10:49:09.712 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
10:49:09.713 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
10:49:09.714 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201217001(String)
10:49:09.721 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
10:49:09.740 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
10:49:09.740 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:04:04.962 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
11:04:04.966 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
11:04:04.968 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
11:11:29.893 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.6.Final
11:11:29.893 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication using Java 14.0.1 on developer01deiMac.local with PID 1400 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
11:11:29.896 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
11:11:29.942 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
11:11:29.942 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
11:11:31.390 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
11:11:31.398 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
11:11:31.399 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
11:11:31.399 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.39]
11:11:31.477 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
11:11:31.478 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1535 ms
11:11:32.137 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
11:11:32.724 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
11:11:32.761 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
11:11:32.838 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/v2/api-docs', GET] with []
11:11:32.838 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources', GET] with []
11:11:32.838 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources/**', GET] with []
11:11:32.838 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/ui', GET] with []
11:11:32.838 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/security', GET] with []
11:11:32.838 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-ui.html/**', GET] with []
11:11:32.838 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/webjars/**', GET] with []
11:11:32.856 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1a4bb712, org.springframework.security.web.context.SecurityContextPersistenceFilter@705e9741, org.springframework.security.web.header.HeaderWriterFilter@feca518, org.springframework.web.filter.CorsFilter@56202ab8, net.kintex.epsi.user.filter.JwtAuthenticationFilter@426e5f17, org.springframework.security.web.authentication.logout.LogoutFilter@3b87d218, net.kintex.epsi.user.filter.AuthenticationFilter@6f2ec45c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@32c8e2f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@347d18ef, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6686518c, org.springframework.security.web.access.ExceptionTranslationFilter@619dada4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@75a2ce51]
11:11:32.940 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
11:11:32.981 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
11:11:33.043 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
11:11:33.043 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
11:11:33.044 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
11:11:33.044 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
11:11:33.182 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
11:11:33.194 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
11:11:33.195 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
11:11:33.203 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
11:11:33.224 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
11:11:33.441 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
11:11:33.448 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
11:11:33.449 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
11:11:33.481 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
11:11:33.482 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
11:11:33.520 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
11:11:33.549 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
11:11:33.550 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: deleteOneUsingPOST_1
11:11:33.580 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: getAllWonBidUsingGET_1
11:11:33.615 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 4.087 seconds (JVM running for 4.666)
11:11:33.674 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
11:11:33.675 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
11:11:33.676 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
11:11:33.697 [RMI TCP Connection(3)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
11:11:34.066 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Jakarta Mail version 1.6.5
11:11:34.079 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
11:11:34.079 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Tables of loaded providers
11:11:34.080 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
11:11:34.080 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
11:11:34.080 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
13:45:41.299 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
13:45:41.464 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
13:45:41.494 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
13:45:41.602 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
13:45:41.603 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
13:45:41.613 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
13:45:41.644 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==>  Preparing: SELECT LPAD(COUNT(*) + 1,4,0) FROM epsi_won_bid LEFT JOIN epsi_bid eb on epsi_won_bid.bid_id = eb.bid_id WHERE vendor_id = ? AND YEAR(epsi_won_bid.created_at) BETWEEN ? AND ? + 1
13:45:41.647 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==> Parameters: 2(String), 2020(String), 2020(String)
13:45:41.658 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - <==      Total: 1
13:45:41.659 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==>  Preparing: SELECT vendor_code FROM epsi_vendor WHERE vendor_id = ?
13:45:41.660 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==> Parameters: 2(String)
13:45:41.669 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - <==      Total: 1
13:45:41.691 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getWonBidNumber' parameter -1
13:45:41.691 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:45:56.200 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
13:45:56.201 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
13:45:56.211 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
13:45:56.285 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
13:45:56.286 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
13:45:56.297 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
13:45:56.309 [http-nio-34571-exec-6] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
13:45:56.311 [http-nio-34571-exec-6] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
13:45:56.321 [http-nio-34571-exec-6] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
13:45:56.341 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
13:45:56.341 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:45:56.728 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
13:45:56.728 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
13:45:56.739 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
13:45:56.739 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
13:45:56.739 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
13:45:56.750 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
13:45:56.750 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
13:45:56.750 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
13:45:56.761 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
13:45:56.887 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
13:45:56.887 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
13:45:56.888 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
13:45:56.888 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
13:45:56.895 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
13:45:56.897 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
13:45:56.899 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
13:45:56.899 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
13:45:56.900 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
13:45:56.900 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
13:45:56.910 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
13:45:56.918 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
13:45:56.926 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
13:45:56.926 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:45:56.929 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
13:45:56.930 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
13:45:56.937 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
13:45:56.937 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:45:56.939 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
13:45:56.940 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
13:45:56.940 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
13:45:56.953 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
13:45:56.967 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
13:45:56.967 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:45:57.059 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
13:45:57.060 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
13:45:57.070 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
13:45:57.155 [http-nio-34571-exec-10] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
13:45:57.158 [http-nio-34571-exec-10] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201217001(String)
13:45:57.169 [http-nio-34571-exec-10] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
13:45:57.189 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
13:45:57.189 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:45:57.546 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
13:45:57.546 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
13:45:57.556 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
13:45:57.656 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
13:45:57.657 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201217001(String)
13:45:57.667 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
13:45:57.667 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
13:45:57.669 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201217001(String), 20(Integer)
13:45:57.680 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
13:45:57.681 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
13:45:57.681 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201217001(String)
13:45:57.691 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
13:45:57.710 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
13:45:57.711 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:46:00.416 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
13:46:00.417 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
13:46:00.426 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
13:46:00.510 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==>  Preparing: SELECT LPAD(COUNT(*) + 1,4,0) FROM epsi_won_bid LEFT JOIN epsi_bid eb on epsi_won_bid.bid_id = eb.bid_id WHERE vendor_id = ? AND YEAR(epsi_won_bid.created_at) BETWEEN ? AND ? + 1
13:46:00.511 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==> Parameters: 2(String), 2020(String), 2020(String)
13:46:00.521 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - <==      Total: 1
13:46:00.522 [http-nio-34571-exec-7] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==>  Preparing: SELECT vendor_code FROM epsi_vendor WHERE vendor_id = ?
13:46:00.522 [http-nio-34571-exec-7] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==> Parameters: 2(String)
13:46:00.531 [http-nio-34571-exec-7] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - <==      Total: 1
13:46:00.549 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getWonBidNumber' parameter -1
13:46:00.549 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:46:06.719 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
13:46:06.720 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
13:46:06.730 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
13:46:06.869 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==>  Preparing: select bid_date from epsi_bid eb left join epsi_won_bid ewb on eb.bid_id = ewb.bid_id where eb.bid_id = ?
13:46:06.869 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==> Parameters: 20201217001(String)
13:46:06.879 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectBidDate - <==      Total: 1
13:46:06.902 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - nested exception is org.apache.ibatis.builder.BuilderException: The expression 'tagList' evaluated to a null value.
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: The expression 'tagList' evaluated to a null value.
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:96)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy116.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy151.selectByTag(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy152.selectByTag(Unknown Source)
	at net.kintex.epsi.purchasing.service.impl.WonBidServiceImpl.create(WonBidServiceImpl.java:117)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy183.create(Unknown Source)
	at net.kintex.epsi.purchasing.controller.WonBidController.createWonBid(WonBidController.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.apache.ibatis.builder.BuilderException: The expression 'tagList' evaluated to a null value.
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateIterable(ExpressionEvaluator.java:45)
	at org.apache.ibatis.scripting.xmltags.ForEachSqlNode.apply(ForEachSqlNode.java:54)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:305)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:82)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy242.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 130 common frames omitted
13:46:06.904 [http-nio-34571-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: The expression 'tagList' evaluated to a null value.]
14:16:30.051 [http-nio-34571-exec-9] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 1823145
14:16:30.058 [http-nio-34571-exec-9] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 1833091
14:16:30.067 [http-nio-34571-exec-9] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 1833129
14:16:30.150 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:16:30.151 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:16:30.158 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:16:30.233 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:16:30.233 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:16:30.242 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:16:30.250 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:16:30.251 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201217001(String)
14:16:30.258 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:16:30.272 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:16:30.272 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:16:30.296 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:16:30.297 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:16:30.304 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:16:30.378 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:16:30.379 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:16:30.388 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:16:30.399 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:16:30.400 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201217001(String)
14:16:30.407 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:16:30.407 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:16:30.408 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201217001(String), 20(Integer)
14:16:30.416 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:16:30.416 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:16:30.416 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201217001(String)
14:16:30.423 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:16:30.436 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:16:30.436 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:17:03.150 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
14:17:03.155 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
14:17:03.157 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
14:18:14.730 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication using Java 14.0.1 on developer01deiMac.local with PID 4046 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
14:18:14.731 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.6.Final
14:18:14.733 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
14:18:14.778 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
14:18:14.779 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
14:18:16.200 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
14:18:16.208 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
14:18:16.209 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
14:18:16.209 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.39]
14:18:16.269 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
14:18:16.269 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1490 ms
14:18:16.894 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
14:18:17.428 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
14:18:17.469 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
14:18:17.548 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/v2/api-docs', GET] with []
14:18:17.548 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources', GET] with []
14:18:17.548 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources/**', GET] with []
14:18:17.548 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/ui', GET] with []
14:18:17.548 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/security', GET] with []
14:18:17.548 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-ui.html/**', GET] with []
14:18:17.548 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/webjars/**', GET] with []
14:18:17.568 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@440858b1, org.springframework.security.web.context.SecurityContextPersistenceFilter@79b6a621, org.springframework.security.web.header.HeaderWriterFilter@1356fa0c, org.springframework.web.filter.CorsFilter@169e840e, net.kintex.epsi.user.filter.JwtAuthenticationFilter@4095fc52, org.springframework.security.web.authentication.logout.LogoutFilter@71d9ce93, net.kintex.epsi.user.filter.AuthenticationFilter@103bd05e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@53761780, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@17b81c00, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@79069de3, org.springframework.security.web.access.ExceptionTranslationFilter@2ebd616f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@680b471f]
14:18:17.648 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
14:18:17.685 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
14:18:17.741 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
14:18:17.742 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
14:18:17.742 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
14:18:17.742 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
14:18:17.894 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
14:18:17.912 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
14:18:17.913 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
14:18:17.922 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
14:18:17.946 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
14:18:18.171 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
14:18:18.177 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
14:18:18.178 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
14:18:18.210 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
14:18:18.211 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
14:18:18.246 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
14:18:18.275 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
14:18:18.276 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: deleteOneUsingPOST_1
14:18:18.308 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: getAllWonBidUsingGET_1
14:18:18.344 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.974 seconds (JVM running for 4.505)
14:18:18.632 [RMI TCP Connection(5)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
14:18:18.632 [RMI TCP Connection(5)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
14:18:18.633 [RMI TCP Connection(5)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
14:18:18.662 [RMI TCP Connection(4)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
14:18:19.012 [RMI TCP Connection(4)-127.0.0.1] INFO  javax.mail - Jakarta Mail version 1.6.5
14:18:19.021 [RMI TCP Connection(4)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
14:18:19.022 [RMI TCP Connection(4)-127.0.0.1] INFO  javax.mail - Tables of loaded providers
14:18:19.022 [RMI TCP Connection(4)-127.0.0.1] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
14:18:19.022 [RMI TCP Connection(4)-127.0.0.1] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
14:18:19.022 [RMI TCP Connection(4)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
14:19:28.716 [http-nio-34571-exec-1] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 69745
14:19:28.840 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:19:28.993 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:19:29.019 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:19:29.124 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:19:29.124 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:19:29.133 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:19:29.170 [http-nio-34571-exec-1] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
14:19:29.171 [http-nio-34571-exec-1] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
14:19:29.180 [http-nio-34571-exec-1] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
14:19:29.204 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
14:19:29.204 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:19:29.276 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:19:29.277 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:19:29.286 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:19:29.412 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:19:29.413 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:19:29.424 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:19:29.425 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:19:29.426 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
14:19:29.442 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
14:19:29.464 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:19:29.464 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:19:29.582 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:19:29.582 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:19:29.591 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:19:29.592 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:19:29.592 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:19:29.601 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:19:29.683 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:19:29.683 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:19:29.691 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:19:29.692 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:19:29.694 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
14:19:29.708 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
14:19:29.724 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:19:29.724 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:19:29.726 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
14:19:29.727 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
14:19:29.739 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
14:19:29.741 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
14:19:29.741 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
14:19:29.753 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
14:19:29.772 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:19:29.772 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:19:30.171 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:19:30.171 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:19:30.181 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:19:30.267 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:19:30.272 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201217001(String)
14:19:30.283 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:19:30.303 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:19:30.303 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:19:30.316 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:19:30.316 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:19:30.327 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:19:30.440 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:19:30.441 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201217001(String)
14:19:30.452 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:19:30.453 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:19:30.454 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201217001(String), 20(Integer)
14:19:30.465 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:19:30.466 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:19:30.467 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201217001(String)
14:19:30.476 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:19:30.496 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:19:30.496 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:19:32.888 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:19:32.888 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:19:32.898 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:19:32.984 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==>  Preparing: SELECT LPAD(COUNT(*) + 1,4,0) FROM epsi_won_bid LEFT JOIN epsi_bid eb on epsi_won_bid.bid_id = eb.bid_id WHERE vendor_id = ? AND YEAR(epsi_won_bid.created_at) BETWEEN ? AND ? + 1
14:19:32.985 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==> Parameters: 2(String), 2020(String), 2020(String)
14:19:32.995 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - <==      Total: 1
14:19:32.996 [http-nio-34571-exec-7] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==>  Preparing: SELECT vendor_code FROM epsi_vendor WHERE vendor_id = ?
14:19:32.996 [http-nio-34571-exec-7] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==> Parameters: 2(String)
14:19:33.006 [http-nio-34571-exec-7] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - <==      Total: 1
14:19:33.024 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getWonBidNumber' parameter -1
14:19:33.024 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:19:39.145 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:19:39.146 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:19:39.157 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:19:39.294 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==>  Preparing: select bid_date from epsi_bid eb left join epsi_won_bid ewb on eb.bid_id = ewb.bid_id where eb.bid_id = ?
14:19:39.295 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==> Parameters: 20201217001(String)
14:19:39.305 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidDao.selectBidDate - <==      Total: 1
14:19:39.307 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==>  Preparing: SELECT record_id, bid_id, won_id, description, grade, sku_id, quantity, won_qty, bid_price, hkd, won_price, won_hkd, tag FROM `epsi_bid_record` WHERE `tag` IN ( ? , ? , ? , ? , ? , ? )
14:19:39.308 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==> Parameters: LG LMX220|Grade AA(String), LG LMX220 (KIT)|Grade AA(String), LG LMX220MA|Grade AA(String), LG LMX320MA (DEMO)|Grade AA(String), LG MS550-BLK|Grade AA(String), LG Q710MS (SX)|Grade FG(String)
14:19:39.319 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - <==      Total: 12
14:19:39.330 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.B.updateManyByTag - ==>  Preparing: UPDATE `epsi_bid_record` set `won_id` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_qty` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_price` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, updated_by = ? WHERE `record_id` IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND`tag` = ? , ? , ? , ? , ? , ?
14:19:39.382 [http-nio-34571-exec-8] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.updateManyByTag
### The error occurred while executing an update
### SQL: UPDATE `epsi_bid_record`          set `won_id` = CASE `record_id``won_qty` = CASE `record_id``won_price` = CASE `record_id`updated_by = ?          WHERE `record_id` IN          (               ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )          AND`tag` =                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.updateManyByTag
### The error occurred while executing an update
### SQL: UPDATE `epsi_bid_record`          set `won_id` = CASE `record_id``won_qty` = CASE `record_id` WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ? END,             `won_price` = CASE `record_id`updated_by = ?          WHERE `record_id` IN          (               ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )          AND`tag` =                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy116.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:304)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy151.updateManyByTag(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy152.updateManyByTag(Unknown Source)
	at net.kintex.epsi.purchasing.service.impl.WonBidServiceImpl.create(WonBidServiceImpl.java:138)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy183.create(Unknown Source)
	at net.kintex.epsi.purchasing.controller.WonBidController.createWonBid(WonBidController.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at jdk.internal.reflect.GeneratedMethodAccessor170.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy229.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy228.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 129 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token ,
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:558)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:602)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 158 common frames omitted
14:19:39.384 [http-nio-34571-exec-8] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.updateManyByTag
### The error occurred while executing an update
### SQL: UPDATE `epsi_bid_record`          set `won_id` = CASE `record_id``won_qty` = CASE `record_id``won_price` = CASE `record_id`updated_by = ?          WHERE `record_id` IN          (               ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )          AND`tag` =                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?]
14:21:08.506 [http-nio-34571-exec-10] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 89126
14:21:08.514 [http-nio-34571-exec-10] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 98789
14:21:08.641 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:21:08.641 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:21:08.651 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:21:08.726 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:21:08.726 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:21:08.736 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:21:08.751 [http-nio-34571-exec-10] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
14:21:11.652 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:21:11.652 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:21:11.662 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:21:11.738 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:21:11.738 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:21:11.748 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:21:11.759 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==>  Preparing: select bid_date from epsi_bid eb left join epsi_won_bid ewb on eb.bid_id = ewb.bid_id where eb.bid_id = ?
14:21:11.760 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==> Parameters: 20201217001(String)
14:21:11.769 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectBidDate - <==      Total: 1
14:21:11.770 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==>  Preparing: SELECT record_id, bid_id, won_id, description, grade, sku_id, quantity, won_qty, bid_price, hkd, won_price, won_hkd, tag FROM `epsi_bid_record` WHERE `tag` IN ( ? , ? , ? , ? , ? , ? )
14:21:11.770 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==> Parameters: LG LMX220|Grade AA(String), LG LMX220 (KIT)|Grade AA(String), LG LMX220MA|Grade AA(String), LG LMX320MA (DEMO)|Grade AA(String), LG MS550-BLK|Grade AA(String), LG Q710MS (SX)|Grade FG(String)
14:21:11.781 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - <==      Total: 12
14:21:11.785 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.updateManyByTag - ==>  Preparing: UPDATE `epsi_bid_record` set `won_id` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_qty` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_price` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, updated_by = ? WHERE `record_id` IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND`tag` = ? , ? , ? , ? , ? , ?
14:21:11.804 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.updateManyByTag
### The error occurred while executing an update
### SQL: UPDATE `epsi_bid_record`          set `won_id` = CASE `record_id``won_qty` = CASE `record_id``won_price` = CASE `record_id`updated_by = ?          WHERE `record_id` IN          (               ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )          AND`tag` =                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.updateManyByTag
### The error occurred while executing an update
### SQL: UPDATE `epsi_bid_record`          set `won_id` = CASE `record_id` WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ? END,             `won_qty` = CASE `record_id` WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ?                                                                                    WHEN ? THEN ? END,             `won_price` = CASE `record_id`updated_by = ?          WHERE `record_id` IN          (               ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )          AND`tag` =                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy116.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:304)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy151.updateManyByTag(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy152.updateManyByTag(Unknown Source)
	at net.kintex.epsi.purchasing.service.impl.WonBidServiceImpl.create(WonBidServiceImpl.java:138)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy183.create(Unknown Source)
	at net.kintex.epsi.purchasing.controller.WonBidController.createWonBid(WonBidController.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at jdk.internal.reflect.GeneratedMethodAccessor170.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy229.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy228.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 129 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token ,
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:558)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:602)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 158 common frames omitted
14:21:11.805 [http-nio-34571-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.updateManyByTag
### The error occurred while executing an update
### SQL: UPDATE `epsi_bid_record`          set `won_id` = CASE `record_id``won_qty` = CASE `record_id``won_price` = CASE `record_id`updated_by = ?          WHERE `record_id` IN          (               ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )          AND`tag` =                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?]
14:21:27.864 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:21:27.865 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:21:27.874 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:21:27.950 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:21:27.950 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:21:27.962 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:21:27.974 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==>  Preparing: select bid_date from epsi_bid eb left join epsi_won_bid ewb on eb.bid_id = ewb.bid_id where eb.bid_id = ?
14:21:27.974 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==> Parameters: 20201217001(String)
14:21:27.983 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectBidDate - <==      Total: 1
14:21:27.984 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==>  Preparing: SELECT record_id, bid_id, won_id, description, grade, sku_id, quantity, won_qty, bid_price, hkd, won_price, won_hkd, tag FROM `epsi_bid_record` WHERE `tag` IN ( ? , ? , ? , ? , ? , ? )
14:21:27.985 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==> Parameters: LG LMX220|Grade AA(String), LG LMX220 (KIT)|Grade AA(String), LG LMX220MA|Grade AA(String), LG LMX320MA (DEMO)|Grade AA(String), LG MS550-BLK|Grade AA(String), LG Q710MS (SX)|Grade FG(String)
14:21:27.995 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - <==      Total: 12
14:22:09.312 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.updateManyByTag - ==>  Preparing: UPDATE `epsi_bid_record` set `won_id` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_qty` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_price` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, updated_by = ? WHERE `record_id` IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND`tag` = ? , ? , ? , ? , ? , ?
14:22:09.332 [http-nio-34571-exec-2] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.updateManyByTag
### The error occurred while executing an update
### SQL: UPDATE `epsi_bid_record`          set `won_id` = CASE `record_id``won_qty` = CASE `record_id``won_price` = CASE `record_id`updated_by = ?          WHERE `record_id` IN          (               ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )          AND`tag` =                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.updateManyByTag
### The error occurred while executing an update
### SQL: UPDATE `epsi_bid_record`          set `won_id` = CASE `record_id``won_qty` = CASE `record_id``won_price` = CASE `record_id`updated_by = ?          WHERE `record_id` IN          (               ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )          AND`tag` =                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy116.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:304)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy151.updateManyByTag(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy152.updateManyByTag(Unknown Source)
	at net.kintex.epsi.purchasing.service.impl.WonBidServiceImpl.create(WonBidServiceImpl.java:138)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy183.create(Unknown Source)
	at net.kintex.epsi.purchasing.controller.WonBidController.createWonBid(WonBidController.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at jdk.internal.reflect.GeneratedMethodAccessor170.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy229.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy228.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 129 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token ,
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:558)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:602)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 158 common frames omitted
14:22:09.333 [http-nio-34571-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.updateManyByTag
### The error occurred while executing an update
### SQL: UPDATE `epsi_bid_record`          set `won_id` = CASE `record_id``won_qty` = CASE `record_id``won_price` = CASE `record_id`updated_by = ?          WHERE `record_id` IN          (               ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )          AND`tag` =                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :' , 
            ?
         ) 
        AND`tag` =
          
           , pos 3857, line 168, column 11, token , : UPDATE `epsi_bid_record`
         set `won_id` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_qty` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            `won_price` = CASE `record_id` WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ?
                    
                
                    
                        WHEN ? THEN ? END,
            
            updated_by = ? 
        WHERE `record_id` IN
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         ) 
        AND`tag` =
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?]
14:25:04.600 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
14:25:04.604 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
14:25:04.606 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
14:25:06.867 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication using Java 14.0.1 on developer01deiMac.local with PID 4143 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
14:25:06.867 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.6.Final
14:25:06.869 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
14:25:06.915 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
14:25:06.916 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
14:25:08.287 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
14:25:08.295 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
14:25:08.295 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
14:25:08.295 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.39]
14:25:08.352 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
14:25:08.352 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1436 ms
14:25:08.964 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
14:25:09.475 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
14:25:09.511 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
14:25:09.594 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/v2/api-docs', GET] with []
14:25:09.595 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources', GET] with []
14:25:09.595 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources/**', GET] with []
14:25:09.595 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/ui', GET] with []
14:25:09.595 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/security', GET] with []
14:25:09.595 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-ui.html/**', GET] with []
14:25:09.595 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/webjars/**', GET] with []
14:25:09.613 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@619dada4, org.springframework.security.web.context.SecurityContextPersistenceFilter@c3d73c5, org.springframework.security.web.header.HeaderWriterFilter@50992a8e, org.springframework.web.filter.CorsFilter@3b7d8584, net.kintex.epsi.user.filter.JwtAuthenticationFilter@27fb7612, org.springframework.security.web.authentication.logout.LogoutFilter@738784ca, net.kintex.epsi.user.filter.AuthenticationFilter@63fc8e5c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@32f92f5e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@15cea235, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@474a3f1f, org.springframework.security.web.access.ExceptionTranslationFilter@1cf2ec4d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@50b3faf6]
14:25:09.688 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
14:25:09.714 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
14:25:09.769 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
14:25:09.769 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
14:25:09.769 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
14:25:09.769 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
14:25:09.901 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
14:25:09.913 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
14:25:09.914 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
14:25:09.923 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
14:25:09.946 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
14:25:10.144 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
14:25:10.150 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
14:25:10.151 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
14:25:10.180 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
14:25:10.181 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
14:25:10.213 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
14:25:10.251 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
14:25:10.252 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: deleteOneUsingPOST_1
14:25:10.281 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: getAllWonBidUsingGET_1
14:25:10.318 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.798 seconds (JVM running for 4.267)
14:25:10.371 [RMI TCP Connection(2)-192.168.0.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
14:25:10.371 [RMI TCP Connection(2)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
14:25:10.373 [RMI TCP Connection(2)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
14:25:10.394 [RMI TCP Connection(3)-192.168.0.101] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
14:25:10.727 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - Jakarta Mail version 1.6.5
14:25:10.760 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
14:25:10.760 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - Tables of loaded providers
14:25:10.761 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
14:25:10.761 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
14:25:10.761 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
14:25:13.783 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:25:13.965 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:25:13.992 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:25:14.099 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:25:14.099 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:25:14.109 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:25:14.213 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==>  Preparing: select bid_date from epsi_bid eb left join epsi_won_bid ewb on eb.bid_id = ewb.bid_id where eb.bid_id = ?
14:25:14.216 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==> Parameters: 20201217001(String)
14:25:14.226 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectBidDate - <==      Total: 1
14:25:14.238 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==>  Preparing: SELECT record_id, bid_id, won_id, description, grade, sku_id, quantity, won_qty, bid_price, hkd, won_price, won_hkd, tag FROM `epsi_bid_record` WHERE `tag` IN ( ? , ? , ? , ? , ? , ? )
14:25:14.239 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==> Parameters: LG LMX220|Grade AA(String), LG LMX220 (KIT)|Grade AA(String), LG LMX220MA|Grade AA(String), LG LMX320MA (DEMO)|Grade AA(String), LG MS550-BLK|Grade AA(String), LG Q710MS (SX)|Grade FG(String)
14:25:14.253 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - <==      Total: 12
14:25:16.190 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.updateManyByTag - ==>  Preparing: UPDATE `epsi_bid_record` set `won_id` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_qty` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_price` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, updated_by = ? WHERE `record_id` IN( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND`tag` IN ( ? , ? , ? , ? , ? , ? )
14:25:16.199 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.updateManyByTag - ==> Parameters: 378(String), T000120DA1(String), 379(String), T000120DA1(String), 380(String), T000120DA1(String), 381(String), T000120DA1(String), 382(String), T000120DA1(String), 383(String), T000120DA1(String), 384(String), T000120DA1(String), 385(String), T000120DA1(String), 386(String), T000120DA1(String), 387(String), T000120DA1(String), 388(String), T000120DA1(String), 389(String), T000120DA1(String), 378(String), 100(Integer), 379(String), 1003(Integer), 380(String), 20(Integer), 381(String), 104(Integer), 382(String), 100(Integer), 383(String), 1(Integer), 384(String), 100(Integer), 385(String), 1003(Integer), 386(String), 20(Integer), 387(String), 104(Integer), 388(String), 100(Integer), 389(String), 1(Integer), 378(String), 45.0(Double), 379(String), 30.0(Double), 380(String), 30.0(Double), 381(String), 30.0(Double), 382(String), 30.0(Double), 383(String), 10.0(Double), 384(String), 45.0(Double), 385(String), 30.0(Double), 386(String), 30.0(Double), 387(String), 30.0(Double), 388(String), 30.0(Double), 389(String), 10.0(Double), 1(Integer), 378(String), 379(String), 380(String), 381(String), 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), LG LMX220|Grade AA(String), LG LMX220 (KIT)|Grade AA(String), LG LMX220MA|Grade AA(String), LG LMX320MA (DEMO)|Grade AA(String), LG MS550-BLK|Grade AA(String), LG Q710MS (SX)|Grade FG(String)
14:25:16.273 [http-nio-34571-exec-2] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: Incorrect integer value: 'T000120DA1' for column 'won_id' at row 1
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: UPDATE `epsi_bid_record`          set `won_id` = CASE `record_id``won_qty` = CASE `record_id``won_price` = CASE `record_id`updated_by = ?          WHERE `record_id` IN(                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )         AND`tag` IN (                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )
### Cause: java.sql.SQLException: Incorrect integer value: 'T000120DA1' for column 'won_id' at row 1
; uncategorized SQLException; SQL state [HY000]; error code [1366]; Incorrect integer value: 'T000120DA1' for column 'won_id' at row 1; nested exception is java.sql.SQLException: Incorrect integer value: 'T000120DA1' for column 'won_id' at row 1
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: Incorrect integer value: 'T000120DA1' for column 'won_id' at row 1
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: UPDATE `epsi_bid_record`          set `won_id` = CASE `record_id``won_qty` = CASE `record_id``won_price` = CASE `record_id`updated_by = ?          WHERE `record_id` IN(                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )         AND`tag` IN (                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )
### Cause: java.sql.SQLException: Incorrect integer value: 'T000120DA1' for column 'won_id' at row 1
; uncategorized SQLException; SQL state [HY000]; error code [1366]; Incorrect integer value: 'T000120DA1' for column 'won_id' at row 1; nested exception is java.sql.SQLException: Incorrect integer value: 'T000120DA1' for column 'won_id' at row 1
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy116.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:304)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy151.updateManyByTag(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy152.updateManyByTag(Unknown Source)
	at net.kintex.epsi.purchasing.service.impl.WonBidServiceImpl.create(WonBidServiceImpl.java:138)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy183.create(Unknown Source)
	at net.kintex.epsi.purchasing.controller.WonBidController.createWonBid(WonBidController.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: Incorrect integer value: 'T000120DA1' for column 'won_id' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy230.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy228.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 129 common frames omitted
14:25:16.291 [http-nio-34571-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: Incorrect integer value: 'T000120DA1' for column 'won_id' at row 1
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: UPDATE `epsi_bid_record`          set `won_id` = CASE `record_id``won_qty` = CASE `record_id``won_price` = CASE `record_id`updated_by = ?          WHERE `record_id` IN(                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )         AND`tag` IN (                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )
### Cause: java.sql.SQLException: Incorrect integer value: 'T000120DA1' for column 'won_id' at row 1
; uncategorized SQLException; SQL state [HY000]; error code [1366]; Incorrect integer value: 'T000120DA1' for column 'won_id' at row 1; nested exception is java.sql.SQLException: Incorrect integer value: 'T000120DA1' for column 'won_id' at row 1]
14:26:18.809 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
14:26:18.813 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
14:26:18.816 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
14:26:20.868 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication using Java 14.0.1 on developer01deiMac.local with PID 4176 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
14:26:20.868 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.6.Final
14:26:20.870 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
14:26:20.908 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
14:26:20.909 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
14:26:22.191 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
14:26:22.199 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
14:26:22.199 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
14:26:22.200 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.39]
14:26:22.265 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
14:26:22.265 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1356 ms
14:26:22.852 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
14:26:23.360 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
14:26:23.395 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
14:26:23.470 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/v2/api-docs', GET] with []
14:26:23.470 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources', GET] with []
14:26:23.471 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources/**', GET] with []
14:26:23.471 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/ui', GET] with []
14:26:23.471 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/security', GET] with []
14:26:23.471 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-ui.html/**', GET] with []
14:26:23.471 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/webjars/**', GET] with []
14:26:23.489 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@dd6ea8e, org.springframework.security.web.context.SecurityContextPersistenceFilter@27fb7612, org.springframework.security.web.header.HeaderWriterFilter@5088f831, org.springframework.web.filter.CorsFilter@20c38a3d, net.kintex.epsi.user.filter.JwtAuthenticationFilter@7702f5f7, org.springframework.security.web.authentication.logout.LogoutFilter@2febb0e1, net.kintex.epsi.user.filter.AuthenticationFilter@75711ab7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@619dada4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@14d0088a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@400e7e9f, org.springframework.security.web.access.ExceptionTranslationFilter@7952e932, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3af72be2]
14:26:23.577 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
14:26:23.604 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
14:26:23.662 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
14:26:23.662 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
14:26:23.662 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
14:26:23.662 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
14:26:23.780 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
14:26:23.792 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
14:26:23.792 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
14:26:23.800 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
14:26:23.831 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
14:26:24.024 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
14:26:24.029 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
14:26:24.030 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
14:26:24.059 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
14:26:24.060 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
14:26:24.092 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
14:26:24.117 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
14:26:24.118 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: deleteOneUsingPOST_1
14:26:24.152 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: getAllWonBidUsingGET_1
14:26:24.194 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.637 seconds (JVM running for 4.092)
14:26:24.392 [RMI TCP Connection(3)-192.168.0.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
14:26:24.392 [RMI TCP Connection(3)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
14:26:24.393 [RMI TCP Connection(3)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
14:26:24.413 [RMI TCP Connection(2)-192.168.0.101] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
14:26:24.754 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - Jakarta Mail version 1.6.5
14:26:24.781 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
14:26:24.782 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - Tables of loaded providers
14:26:24.782 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
14:26:24.782 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
14:26:24.783 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
14:26:30.066 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:26:30.226 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:26:30.253 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:26:30.357 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:26:30.357 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:26:30.368 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:26:30.475 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==>  Preparing: select bid_date from epsi_bid eb left join epsi_won_bid ewb on eb.bid_id = ewb.bid_id where eb.bid_id = ?
14:26:30.479 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==> Parameters: 20201217001(String)
14:26:30.489 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectBidDate - <==      Total: 1
14:26:30.502 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==>  Preparing: SELECT record_id, bid_id, won_id, description, grade, sku_id, quantity, won_qty, bid_price, hkd, won_price, won_hkd, tag FROM `epsi_bid_record` WHERE `tag` IN ( ? , ? , ? , ? , ? , ? )
14:26:30.503 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==> Parameters: LG LMX220|Grade AA(String), LG LMX220 (KIT)|Grade AA(String), LG LMX220MA|Grade AA(String), LG LMX320MA (DEMO)|Grade AA(String), LG MS550-BLK|Grade AA(String), LG Q710MS (SX)|Grade FG(String)
14:26:30.517 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - <==      Total: 12
14:26:31.851 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.updateManyByTag - ==>  Preparing: UPDATE `epsi_bid_record` set `won_id` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_qty` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_price` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, updated_by = ? WHERE `record_id` IN( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND`tag` IN ( ? , ? , ? , ? , ? , ? )
14:26:31.861 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.updateManyByTag - ==> Parameters: 378(String), T000120DA1(String), 379(String), T000120DA1(String), 380(String), T000120DA1(String), 381(String), T000120DA1(String), 382(String), T000120DA1(String), 383(String), T000120DA1(String), 384(String), T000120DA1(String), 385(String), T000120DA1(String), 386(String), T000120DA1(String), 387(String), T000120DA1(String), 388(String), T000120DA1(String), 389(String), T000120DA1(String), 378(String), 100(Integer), 379(String), 1003(Integer), 380(String), 20(Integer), 381(String), 104(Integer), 382(String), 100(Integer), 383(String), 1(Integer), 384(String), 100(Integer), 385(String), 1003(Integer), 386(String), 20(Integer), 387(String), 104(Integer), 388(String), 100(Integer), 389(String), 1(Integer), 378(String), 45.0(Double), 379(String), 30.0(Double), 380(String), 30.0(Double), 381(String), 30.0(Double), 382(String), 30.0(Double), 383(String), 10.0(Double), 384(String), 45.0(Double), 385(String), 30.0(Double), 386(String), 30.0(Double), 387(String), 30.0(Double), 388(String), 30.0(Double), 389(String), 10.0(Double), 1(Integer), 378(String), 379(String), 380(String), 381(String), 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), LG LMX220|Grade AA(String), LG LMX220 (KIT)|Grade AA(String), LG LMX220MA|Grade AA(String), LG LMX320MA (DEMO)|Grade AA(String), LG MS550-BLK|Grade AA(String), LG Q710MS (SX)|Grade FG(String)
14:26:31.880 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.updateManyByTag - <==    Updates: 12
14:26:31.881 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.WonBidDao.insertOne - ==>  Preparing: INSERT INTO `epsi_won_bid` (`won_number`, `won_date`, `amount`, `bid_id`, `exchange_rate`, `created_by`, `updated_by`) VALUES (?, DATE_FORMAT(?, '%Y-%m-%d %H:%i:%s'), ?, ?, ?, ?, ?);
14:26:31.888 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.WonBidDao.insertOne - ==> Parameters: T000120DA1(String), 2020-12-18(String), 23.0(Double), 20201217001(String), null, 1(Integer), 1(Integer)
14:26:31.963 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/WonBidMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.WonBidDao.insertOne-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO `epsi_won_bid` (`won_number`,                                     `won_date`,                                     `amount`,                                     `bid_id`,                                     `exchange_rate`,                                     `created_by`,                                     `updated_by`)         VALUES (?,                 DATE_FORMAT(?, '%Y-%m-%d %H:%i:%s'),                 ?,                 ?,                 ?,                 ?,                 ?);
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null
; Column 'exchange_rate' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/WonBidMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.WonBidDao.insertOne-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO `epsi_won_bid` (`won_number`,                                     `won_date`,                                     `amount`,                                     `bid_id`,                                     `exchange_rate`,                                     `created_by`,                                     `updated_by`)         VALUES (?,                 DATE_FORMAT(?, '%Y-%m-%d %H:%i:%s'),                 ?,                 ?,                 ?,                 ?,                 ?);
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null
; Column 'exchange_rate' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy116.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy182.insertOne(Unknown Source)
	at net.kintex.epsi.purchasing.service.impl.WonBidServiceImpl.create(WonBidServiceImpl.java:141)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy183.create(Unknown Source)
	at net.kintex.epsi.purchasing.controller.WonBidController.createWonBid(WonBidController.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy230.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy228.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 118 common frames omitted
14:26:31.980 [http-nio-34571-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/WonBidMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.WonBidDao.insertOne-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO `epsi_won_bid` (`won_number`,                                     `won_date`,                                     `amount`,                                     `bid_id`,                                     `exchange_rate`,                                     `created_by`,                                     `updated_by`)         VALUES (?,                 DATE_FORMAT(?, '%Y-%m-%d %H:%i:%s'),                 ?,                 ?,                 ?,                 ?,                 ?);
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null
; Column 'exchange_rate' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null]
14:27:12.261 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:27:12.263 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:27:12.273 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:27:12.349 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:27:12.350 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:27:12.360 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:27:12.372 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==>  Preparing: select bid_date from epsi_bid eb left join epsi_won_bid ewb on eb.bid_id = ewb.bid_id where eb.bid_id = ?
14:27:12.372 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==> Parameters: 20201217001(String)
14:27:12.382 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.selectBidDate - <==      Total: 1
14:27:12.382 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==>  Preparing: SELECT record_id, bid_id, won_id, description, grade, sku_id, quantity, won_qty, bid_price, hkd, won_price, won_hkd, tag FROM `epsi_bid_record` WHERE `tag` IN ( ? , ? , ? , ? , ? , ? )
14:27:12.383 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==> Parameters: LG LMX220|Grade AA(String), LG LMX220 (KIT)|Grade AA(String), LG LMX220MA|Grade AA(String), LG LMX320MA (DEMO)|Grade AA(String), LG MS550-BLK|Grade AA(String), LG Q710MS (SX)|Grade FG(String)
14:27:12.396 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - <==      Total: 12
14:27:12.400 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.updateManyByTag - ==>  Preparing: UPDATE `epsi_bid_record` set `won_id` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_qty` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_price` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, updated_by = ? WHERE `record_id` IN( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND`tag` IN ( ? , ? , ? , ? , ? , ? )
14:27:12.403 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.updateManyByTag - ==> Parameters: 378(String), T000120DA1(String), 379(String), T000120DA1(String), 380(String), T000120DA1(String), 381(String), T000120DA1(String), 382(String), T000120DA1(String), 383(String), T000120DA1(String), 384(String), T000120DA1(String), 385(String), T000120DA1(String), 386(String), T000120DA1(String), 387(String), T000120DA1(String), 388(String), T000120DA1(String), 389(String), T000120DA1(String), 378(String), 100(Integer), 379(String), 1003(Integer), 380(String), 20(Integer), 381(String), 104(Integer), 382(String), 100(Integer), 383(String), 1(Integer), 384(String), 100(Integer), 385(String), 1003(Integer), 386(String), 20(Integer), 387(String), 104(Integer), 388(String), 100(Integer), 389(String), 1(Integer), 378(String), 45.0(Double), 379(String), 30.0(Double), 380(String), 30.0(Double), 381(String), 30.0(Double), 382(String), 30.0(Double), 383(String), 10.0(Double), 384(String), 45.0(Double), 385(String), 30.0(Double), 386(String), 30.0(Double), 387(String), 30.0(Double), 388(String), 30.0(Double), 389(String), 10.0(Double), 1(Integer), 378(String), 379(String), 380(String), 381(String), 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), LG LMX220|Grade AA(String), LG LMX220 (KIT)|Grade AA(String), LG LMX220MA|Grade AA(String), LG LMX320MA (DEMO)|Grade AA(String), LG MS550-BLK|Grade AA(String), LG Q710MS (SX)|Grade FG(String)
14:27:12.423 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.updateManyByTag - <==    Updates: 12
14:28:19.526 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.WonBidDao.insertOne - ==>  Preparing: INSERT INTO `epsi_won_bid` (`won_number`, `won_date`, `amount`, `bid_id`, `exchange_rate`, `created_by`, `updated_by`) VALUES (?, DATE_FORMAT(?, '%Y-%m-%d %H:%i:%s'), ?, ?, ?, ?, ?);
14:28:19.527 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.WonBidDao.insertOne - ==> Parameters: T000120DA1(String), 2020-12-18(String), 23.0(Double), 20201217001(String), null, 1(Integer), 1(Integer)
14:28:19.565 [http-nio-34571-exec-3] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/WonBidMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.WonBidDao.insertOne-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO `epsi_won_bid` (`won_number`,                                     `won_date`,                                     `amount`,                                     `bid_id`,                                     `exchange_rate`,                                     `created_by`,                                     `updated_by`)         VALUES (?,                 DATE_FORMAT(?, '%Y-%m-%d %H:%i:%s'),                 ?,                 ?,                 ?,                 ?,                 ?);
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null
; Column 'exchange_rate' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/WonBidMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.WonBidDao.insertOne-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO `epsi_won_bid` (`won_number`,                                     `won_date`,                                     `amount`,                                     `bid_id`,                                     `exchange_rate`,                                     `created_by`,                                     `updated_by`)         VALUES (?,                 DATE_FORMAT(?, '%Y-%m-%d %H:%i:%s'),                 ?,                 ?,                 ?,                 ?,                 ?);
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null
; Column 'exchange_rate' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy116.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy182.insertOne(Unknown Source)
	at net.kintex.epsi.purchasing.service.impl.WonBidServiceImpl.create(WonBidServiceImpl.java:141)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy183.create(Unknown Source)
	at net.kintex.epsi.purchasing.controller.WonBidController.createWonBid(WonBidController.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy230.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy228.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 118 common frames omitted
14:28:19.567 [http-nio-34571-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/WonBidMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.WonBidDao.insertOne-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO `epsi_won_bid` (`won_number`,                                     `won_date`,                                     `amount`,                                     `bid_id`,                                     `exchange_rate`,                                     `created_by`,                                     `updated_by`)         VALUES (?,                 DATE_FORMAT(?, '%Y-%m-%d %H:%i:%s'),                 ?,                 ?,                 ?,                 ?,                 ?);
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null
; Column 'exchange_rate' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'exchange_rate' cannot be null]
14:28:54.195 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
14:28:54.200 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
14:28:54.201 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
14:28:56.678 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.6.Final
14:28:56.678 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication using Java 14.0.1 on developer01deiMac.local with PID 4230 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
14:28:56.680 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
14:28:56.716 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
14:28:56.716 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
14:28:58.046 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
14:28:58.053 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
14:28:58.053 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
14:28:58.054 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.39]
14:28:58.118 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
14:28:58.119 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1402 ms
14:28:58.726 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
14:28:59.291 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
14:28:59.332 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
14:28:59.409 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/v2/api-docs', GET] with []
14:28:59.409 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources', GET] with []
14:28:59.409 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources/**', GET] with []
14:28:59.409 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/ui', GET] with []
14:28:59.409 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/security', GET] with []
14:28:59.409 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-ui.html/**', GET] with []
14:28:59.409 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/webjars/**', GET] with []
14:28:59.431 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2f1d791b, org.springframework.security.web.context.SecurityContextPersistenceFilter@44c164f4, org.springframework.security.web.header.HeaderWriterFilter@7ac92648, org.springframework.web.filter.CorsFilter@4d582373, net.kintex.epsi.user.filter.JwtAuthenticationFilter@108e5bf2, org.springframework.security.web.authentication.logout.LogoutFilter@17e42f3, net.kintex.epsi.user.filter.AuthenticationFilter@2562cf0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@52675cbe, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@438a5bea, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2febb0e1, org.springframework.security.web.access.ExceptionTranslationFilter@bc22553, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5c43adb4]
14:28:59.515 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
14:28:59.540 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
14:28:59.611 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
14:28:59.611 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
14:28:59.612 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
14:28:59.612 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
14:28:59.743 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
14:28:59.756 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
14:28:59.756 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
14:28:59.763 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
14:28:59.783 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
14:28:59.996 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
14:29:00.007 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
14:29:00.008 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
14:29:00.049 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
14:29:00.050 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
14:29:00.086 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
14:29:00.116 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
14:29:00.118 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: deleteOneUsingPOST_1
14:29:00.152 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: getAllWonBidUsingGET_1
14:29:00.190 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.853 seconds (JVM running for 4.331)
14:29:00.317 [RMI TCP Connection(3)-192.168.0.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
14:29:00.317 [RMI TCP Connection(3)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
14:29:00.318 [RMI TCP Connection(3)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
14:29:00.335 [RMI TCP Connection(2)-192.168.0.101] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
14:29:00.681 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - Jakarta Mail version 1.6.5
14:29:00.696 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
14:29:00.704 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - Tables of loaded providers
14:29:00.704 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
14:29:00.705 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
14:29:00.706 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
14:29:03.636 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:29:03.813 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:29:03.838 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:29:03.940 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:29:03.941 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:29:03.949 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:29:04.033 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==>  Preparing: select bid_date from epsi_bid eb left join epsi_won_bid ewb on eb.bid_id = ewb.bid_id where eb.bid_id = ?
14:29:04.036 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==> Parameters: 20201217001(String)
14:29:04.044 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectBidDate - <==      Total: 1
14:29:04.047 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOne - ==>  Preparing: SELECT `bid_id` AS `id`, `file_name` AS `fileName`, `bid_date` AS `date`, JSON_OBJECT('id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code`) vendor, `currency`, `exchange_rate` as `exchangeRate` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` WHERE `bid_id` = ?
14:29:04.049 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOne - ==> Parameters: 20201217001(String)
14:29:04.058 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOne - <==      Total: 1
14:29:04.066 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==>  Preparing: SELECT record_id, bid_id, won_id, description, grade, sku_id, quantity, won_qty, bid_price, hkd, won_price, won_hkd, tag FROM `epsi_bid_record` WHERE `tag` IN ( ? , ? , ? , ? , ? , ? )
14:29:04.068 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==> Parameters: LG LMX220|Grade AA(String), LG LMX220 (KIT)|Grade AA(String), LG LMX220MA|Grade AA(String), LG LMX320MA (DEMO)|Grade AA(String), LG MS550-BLK|Grade AA(String), LG Q710MS (SX)|Grade FG(String)
14:29:04.079 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - <==      Total: 12
14:29:04.090 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.updateManyByTag - ==>  Preparing: UPDATE `epsi_bid_record` set `won_id` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_qty` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_price` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, updated_by = ? WHERE `record_id` IN( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND`tag` IN ( ? , ? , ? , ? , ? , ? )
14:29:04.097 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.updateManyByTag - ==> Parameters: 378(String), T000120DA1(String), 379(String), T000120DA1(String), 380(String), T000120DA1(String), 381(String), T000120DA1(String), 382(String), T000120DA1(String), 383(String), T000120DA1(String), 384(String), T000120DA1(String), 385(String), T000120DA1(String), 386(String), T000120DA1(String), 387(String), T000120DA1(String), 388(String), T000120DA1(String), 389(String), T000120DA1(String), 378(String), 100(Integer), 379(String), 1003(Integer), 380(String), 20(Integer), 381(String), 104(Integer), 382(String), 100(Integer), 383(String), 1(Integer), 384(String), 100(Integer), 385(String), 1003(Integer), 386(String), 20(Integer), 387(String), 104(Integer), 388(String), 100(Integer), 389(String), 1(Integer), 378(String), 45.0(Double), 379(String), 30.0(Double), 380(String), 30.0(Double), 381(String), 30.0(Double), 382(String), 30.0(Double), 383(String), 10.0(Double), 384(String), 45.0(Double), 385(String), 30.0(Double), 386(String), 30.0(Double), 387(String), 30.0(Double), 388(String), 30.0(Double), 389(String), 10.0(Double), 1(Integer), 378(String), 379(String), 380(String), 381(String), 382(String), 383(String), 384(String), 385(String), 386(String), 387(String), 388(String), 389(String), LG LMX220|Grade AA(String), LG LMX220 (KIT)|Grade AA(String), LG LMX220MA|Grade AA(String), LG LMX320MA (DEMO)|Grade AA(String), LG MS550-BLK|Grade AA(String), LG Q710MS (SX)|Grade FG(String)
14:29:04.113 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.updateManyByTag - <==    Updates: 12
14:29:04.114 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.WonBidDao.insertOne - ==>  Preparing: INSERT INTO `epsi_won_bid` (`won_number`, `won_date`, `amount`, `bid_id`, `exchange_rate`, `created_by`, `updated_by`) VALUES (?, DATE_FORMAT(?, '%Y-%m-%d %H:%i:%s'), ?, ?, ?, ?, ?);
14:29:04.119 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.WonBidDao.insertOne - ==> Parameters: T000120DA1(String), 2020-12-18(String), 23.0(Double), 20201217001(String), 10.1872(Double), 1(Integer), 1(Integer)
14:29:04.134 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.WonBidDao.insertOne - <==    Updates: 1
14:29:04.138 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.P.insertSelective - ==>  Preparing: INSERT INTO epsi_payment_record ( won_number,amount_payable,`operator` ) VALUES( ?,?,? )
14:29:04.139 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.P.insertSelective - ==> Parameters: T000120DA1(String), 23.0(Double), 1(Integer)
14:29:04.153 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.P.insertSelective - <==    Updates: 1
14:29:04.177 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'createWonBid' parameter -1
14:29:04.177 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:29:19.401 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:29:19.402 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:29:19.410 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:29:19.485 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:29:19.486 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:29:19.494 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:29:19.503 [http-nio-34571-exec-3] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
14:29:19.504 [http-nio-34571-exec-3] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
14:29:19.512 [http-nio-34571-exec-3] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
14:29:19.527 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
14:29:19.527 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:29:19.652 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:29:19.653 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:29:19.661 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:29:19.773 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:29:19.774 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:29:19.787 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:29:19.788 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:29:19.789 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
14:29:19.803 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
14:29:19.822 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:29:19.822 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:29:19.925 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:29:19.926 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:29:19.934 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:29:19.935 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:29:19.936 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:29:19.944 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:29:20.024 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
14:29:20.025 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
14:29:20.034 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
14:29:20.034 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:29:20.035 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:29:20.035 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
14:29:20.037 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
14:29:20.044 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:29:20.045 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:29:20.045 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
14:29:20.048 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
14:29:20.060 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
14:29:20.062 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:29:20.062 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:29:20.074 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:29:20.074 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:29:20.174 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:29:20.174 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:29:20.182 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:29:20.265 [http-nio-34571-exec-7] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:29:20.267 [http-nio-34571-exec-7] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201217001(String)
14:29:20.275 [http-nio-34571-exec-7] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:29:20.290 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:29:20.290 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:29:20.656 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:29:20.656 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:29:20.664 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:29:20.761 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:29:20.762 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201217001(String)
14:29:20.769 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:29:20.769 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:29:20.770 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201217001(String), 20(Integer)
14:29:20.779 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:29:20.780 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:29:20.780 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201217001(String)
14:29:20.787 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:29:20.801 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:29:20.801 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:31:13.761 [http-nio-34571-exec-10] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 112956
14:31:13.769 [http-nio-34571-exec-10] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 113706
14:31:13.854 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:31:13.855 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:31:13.862 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:31:13.943 [http-nio-34571-exec-10] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:31:13.944 [http-nio-34571-exec-10] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201217001(String)
14:31:13.952 [http-nio-34571-exec-10] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:31:13.964 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:31:13.964 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:31:13.991 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:31:13.992 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:31:13.998 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:31:14.084 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:31:14.084 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201217001(String)
14:31:14.091 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:31:14.091 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:31:14.092 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201217001(String), 20(Integer)
14:31:14.100 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:31:14.100 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:31:14.100 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201217001(String)
14:31:14.107 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:31:14.118 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:31:14.118 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:31:15.220 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:31:15.221 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:31:15.230 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:31:15.325 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:31:15.325 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201217001(String)
14:31:15.332 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:31:15.332 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:31:15.333 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201217001(String), 20(Integer)
14:31:15.341 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:31:15.342 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:31:15.342 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201217001(String)
14:31:15.348 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:31:15.361 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:31:15.361 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:31:20.334 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:31:20.334 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:31:20.341 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:31:20.422 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:31:20.422 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201217001(String)
14:31:20.430 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:31:20.442 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:31:20.442 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:31:20.584 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:31:20.584 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:31:20.591 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:31:20.675 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:31:20.675 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201217001(String)
14:31:20.682 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:31:20.683 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:31:20.683 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201217001(String), 20(Integer)
14:31:20.691 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:31:20.691 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:31:20.691 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201217001(String)
14:31:20.697 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:31:20.709 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:31:20.709 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:31:26.564 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:31:26.564 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:31:26.573 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:31:26.646 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:31:26.647 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:31:26.654 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:31:26.661 [http-nio-34571-exec-5] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
14:31:26.662 [http-nio-34571-exec-5] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
14:31:26.668 [http-nio-34571-exec-5] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
14:31:26.680 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
14:31:26.680 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:31:27.044 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:31:27.044 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:31:27.051 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:31:27.052 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:31:27.052 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:31:27.059 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:31:27.059 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:31:27.060 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:31:27.066 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:31:27.134 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:31:27.134 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:31:27.141 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:31:27.141 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:31:27.141 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
14:31:27.150 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
14:31:27.162 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:31:27.162 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:31:27.169 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:31:27.169 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:31:27.175 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:31:27.175 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:31:27.175 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
14:31:27.178 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
14:31:27.178 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
14:31:27.184 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
14:31:27.188 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
14:31:27.189 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
14:31:27.189 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
14:31:27.197 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:31:27.197 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:31:27.198 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
14:31:27.216 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:31:27.216 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:31:27.349 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:31:27.349 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:31:27.358 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:31:27.441 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:31:27.441 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201217001(String)
14:31:27.451 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:31:27.469 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:31:27.469 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:31:27.815 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:31:27.816 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:31:27.825 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:31:27.912 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:31:27.913 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201217001(String)
14:31:27.922 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:31:27.923 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:31:27.923 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201217001(String), 20(Integer)
14:31:27.933 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:31:27.934 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:31:27.934 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201217001(String)
14:31:27.943 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:31:27.960 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:31:27.960 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:31:31.873 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:31:31.874 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:31:31.884 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:31:31.974 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_bid` AS eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid AS ewb ON ewb.bid_id = eb.bid_id
14:31:31.974 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 
14:31:31.983 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:31:31.984 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==>  Preparing: SELECT eb.`bid_id` AS `id`, eb.`bid_date` AS `bidDate`, ev.`vendor_name` AS vendor, ewb.`won_number` AS wonNumber, ewb.`won_date` AS wonDate, ewb.`amount` AS amount FROM `epsi_bid` as eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid as ewb on ewb.bid_id = eb.bid_id order by eb.created_at desc LIMIT ?
14:31:31.984 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:31:31.995 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - <==      Total: 9
14:31:32.013 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyBid' parameter -1
14:31:32.014 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:31:34.260 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:31:34.261 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:31:34.270 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:31:34.354 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:31:34.354 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201217001(String)
14:31:34.364 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:31:34.381 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:31:34.381 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:31:34.704 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:31:34.704 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:31:34.713 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:31:34.800 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:31:34.801 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201217001(String)
14:31:34.810 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:31:34.810 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:31:34.811 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201217001(String), 20(Integer)
14:31:34.820 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:31:34.820 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:31:34.821 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201217001(String)
14:31:34.830 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:31:34.847 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:31:34.847 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:32:22.506 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:32:22.506 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:32:22.516 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:32:22.607 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_payment_record epr LEFT JOIN epsi_won_bid ewb ON epr.won_number = ewb.won_number LEFT JOIN epsi_exchange_rate eer ON eer.exchange_rate = ewb.exchange_rate
14:32:22.607 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==> Parameters: 
14:32:22.617 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - <==      Total: 1
14:32:22.629 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.P.selectOneOrMany - ==>  Preparing: SELECT epr.won_number, epr.pay_date , epr.amount_payable, epr.use_balance, epr.amount_paid, eer.currency_symbol, eer.exchange_rate FROM epsi_payment_record epr LEFT JOIN epsi_won_bid ewb ON epr.won_number = ewb.won_number LEFT JOIN epsi_exchange_rate eer ON eer.exchange_rate = ewb.exchange_rate LIMIT ?
14:32:22.629 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.P.selectOneOrMany - ==> Parameters: 20(Integer)
14:32:22.639 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.P.selectOneOrMany - <==      Total: 3
14:32:22.658 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyPaymentRecord' parameter -1
14:32:22.658 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:34:10.139 [http-nio-34571-exec-5] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 107482
14:34:10.145 [http-nio-34571-exec-5] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 162947
14:34:10.272 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:34:10.273 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:34:10.283 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:34:10.369 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_bid` AS eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid AS ewb ON ewb.bid_id = eb.bid_id
14:34:10.370 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 
14:34:10.379 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:34:10.380 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==>  Preparing: SELECT eb.`bid_id` AS `id`, eb.`bid_date` AS `bidDate`, ev.`vendor_name` AS vendor, ewb.`won_number` AS wonNumber, ewb.`won_date` AS wonDate, ewb.`amount` AS amount FROM `epsi_bid` as eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid as ewb on ewb.bid_id = eb.bid_id order by eb.created_at desc LIMIT ?
14:34:10.380 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:34:10.391 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - <==      Total: 9
14:34:10.409 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyBid' parameter -1
14:34:10.409 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:34:10.440 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:34:10.440 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:34:10.450 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:34:10.534 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==>  Preparing: select kdn_logistics_id as kdnLogisticsId, kdn_logistics_name as kdnLogisticsName from hkerp_kdn_logistics where disabled = 0;
14:34:10.535 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==> Parameters: 
14:34:10.544 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - <==      Total: 4
14:34:10.563 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getLogisticsList' parameter -1
14:34:10.563 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:34:10.840 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:34:10.840 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:34:10.850 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:34:10.944 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id`
14:34:10.944 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==> Parameters: 
14:34:10.954 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - <==      Total: 1
14:34:10.954 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - ==>  Preparing: SELECT ewb.`won_number` as number, ewb.`won_date` as date, ewb.`amount`, ewb.`warehouse`, ewb.`exchange_rate` as `exchangeRate`, ewb.is_shipped as `isShipped`, ev.`vendor_name` as vendor, ewb.bid_id as `bidId` FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id` LIMIT ?
14:34:10.955 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:34:10.965 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - <==      Total: 4
14:34:10.983 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getAllWonBid' parameter -1
14:34:10.983 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:34:16.165 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:34:16.166 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:34:16.176 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:34:16.266 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_stage LEFT JOIN epsi_won_bid ewb ON ewb.won_number = epsi_stage.won_id LEFT JOIN epsi_vendor_sku evs ON evs.sku_id = `epsi_stage`.vendor_sku LEFT JOIN epsi_sku es ON es.id = evs.k_sku_id LEFT JOIN epsi_spu spu ON spu.spu_id = es.spu_id
14:34:16.267 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.S.selectOneOrMany_COUNT - ==> Parameters: 
14:34:16.276 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.S.selectOneOrMany_COUNT - <==      Total: 1
14:34:16.277 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.StageDao.selectOneOrMany - ==>  Preparing: SELECT `epsi_stage`.imei, ewb.bid_id as `bidId`, evs.sku_text, epsi_stage.vendor_grade as `vendor_grade`, es.`attribute` ->> '$.color' as color, es.`attribute` ->> '$.capacity' as capacity, es.`attribute` ->> '$.model' as model, spu.spu_brand, spu.spu_name FROM epsi_stage LEFT JOIN epsi_won_bid ewb on ewb.won_number = epsi_stage.won_id LEFT JOIN epsi_vendor_sku evs on evs.sku_id = `epsi_stage`.vendor_sku LEFT JOIN epsi_sku es on es.id = evs.k_sku_id LEFT JOIN epsi_spu spu on spu.spu_id = es.spu_id LIMIT ?
14:34:16.278 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.StageDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:34:16.288 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.StageDao.selectOneOrMany - <==      Total: 9
14:34:16.307 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getAllStage' parameter -1
14:34:16.307 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:34:20.280 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:34:20.280 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:34:20.290 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:34:20.382 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_bid` AS eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid AS ewb ON ewb.bid_id = eb.bid_id
14:34:20.382 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 
14:34:20.392 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:34:20.392 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==>  Preparing: SELECT eb.`bid_id` AS `id`, eb.`bid_date` AS `bidDate`, ev.`vendor_name` AS vendor, ewb.`won_number` AS wonNumber, ewb.`won_date` AS wonDate, ewb.`amount` AS amount FROM `epsi_bid` as eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid as ewb on ewb.bid_id = eb.bid_id order by eb.created_at desc LIMIT ?
14:34:20.392 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:34:20.402 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - <==      Total: 9
14:34:20.420 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyBid' parameter -1
14:34:20.420 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:34:47.591 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:34:47.591 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:34:47.601 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:34:47.676 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:34:47.676 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:34:47.686 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:34:47.696 [http-nio-34571-exec-10] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
14:34:47.697 [http-nio-34571-exec-10] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
14:34:47.706 [http-nio-34571-exec-10] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
14:34:47.725 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
14:34:47.725 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:34:47.857 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:34:47.857 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:34:47.867 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:34:47.952 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:34:47.952 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:34:47.962 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:34:47.962 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:34:47.962 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
14:34:47.973 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
14:34:47.992 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:34:47.992 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:34:48.084 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:34:48.084 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:34:48.094 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:34:48.094 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:34:48.094 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:34:48.104 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:34:48.179 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:34:48.180 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:34:48.190 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:34:48.191 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:34:48.191 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
14:34:48.191 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
14:34:48.191 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
14:34:48.199 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
14:34:48.199 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
14:34:48.199 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
14:34:48.201 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
14:34:48.207 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
14:34:48.220 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:34:48.220 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:34:48.220 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:34:48.220 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:34:48.341 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:34:48.342 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:34:48.349 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:34:48.433 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_bid` AS eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid AS ewb ON ewb.bid_id = eb.bid_id
14:34:48.433 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 
14:34:48.440 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:34:48.440 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==>  Preparing: SELECT eb.`bid_id` AS `id`, eb.`bid_date` AS `bidDate`, ev.`vendor_name` AS vendor, ewb.`won_number` AS wonNumber, ewb.`won_date` AS wonDate, ewb.`amount` AS amount FROM `epsi_bid` as eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid as ewb on ewb.bid_id = eb.bid_id order by eb.created_at desc LIMIT ?
14:34:48.441 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:34:48.448 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - <==      Total: 8
14:34:48.461 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyBid' parameter -1
14:34:48.461 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:34:50.458 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:34:50.459 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:34:50.466 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:34:50.548 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:34:50.549 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201214002(String)
14:34:50.557 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:34:50.570 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:34:50.570 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:34:50.587 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:34:50.588 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:34:50.595 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:34:50.680 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:34:50.680 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201214002(String)
14:34:50.687 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:34:50.715 [http-nio-34571-exec-7] ERROR n.k.e.c.h.ExceptionHandlerAdvice - null
java.util.NoSuchElementException: null
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:969)
	at net.kintex.epsi.purchasing.service.impl.BidRecordServiceImpl.selectOneOrMany(BidRecordServiceImpl.java:97)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy178.selectOneOrMany(Unknown Source)
	at net.kintex.epsi.purchasing.controller.BidRecordController.getOneOrMany(BidRecordController.java:70)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
14:34:50.717 [http-nio-34571-exec-7] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.util.NoSuchElementException]
14:34:54.044 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:34:54.045 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:34:54.052 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:34:54.135 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==>  Preparing: SELECT LPAD(COUNT(*) + 1,4,0) FROM epsi_won_bid LEFT JOIN epsi_bid eb on epsi_won_bid.bid_id = eb.bid_id WHERE vendor_id = ? AND YEAR(epsi_won_bid.created_at) BETWEEN ? AND ? + 1
14:34:54.136 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==> Parameters: 4(String), 2020(String), 2020(String)
14:34:54.143 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - <==      Total: 1
14:34:54.143 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==>  Preparing: SELECT vendor_code FROM epsi_vendor WHERE vendor_id = ?
14:34:54.143 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==> Parameters: 4(String)
14:34:54.150 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - <==      Total: 1
14:34:54.163 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getWonBidNumber' parameter -1
14:34:54.163 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:34:59.753 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
14:34:59.757 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
14:34:59.760 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
14:35:02.210 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.6.Final
14:35:02.209 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication using Java 14.0.1 on developer01deiMac.local with PID 4313 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
14:35:02.212 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
14:35:02.248 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
14:35:02.248 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
14:35:03.497 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
14:35:03.511 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
14:35:03.512 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
14:35:03.512 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.39]
14:35:03.565 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
14:35:03.565 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1316 ms
14:35:04.165 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
14:35:04.681 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
14:35:04.723 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
14:35:04.798 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/v2/api-docs', GET] with []
14:35:04.798 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources', GET] with []
14:35:04.798 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources/**', GET] with []
14:35:04.798 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/ui', GET] with []
14:35:04.798 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/security', GET] with []
14:35:04.798 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-ui.html/**', GET] with []
14:35:04.798 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/webjars/**', GET] with []
14:35:04.818 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@73cb694e, org.springframework.security.web.context.SecurityContextPersistenceFilter@3d8e2223, org.springframework.security.web.header.HeaderWriterFilter@79b6a621, org.springframework.web.filter.CorsFilter@322d4af0, net.kintex.epsi.user.filter.JwtAuthenticationFilter@11cd339a, org.springframework.security.web.authentication.logout.LogoutFilter@68868405, net.kintex.epsi.user.filter.AuthenticationFilter@d718b6d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7c9c8415, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7d59a5a8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4a84eecc, org.springframework.security.web.access.ExceptionTranslationFilter@15952b3b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4095fc52]
14:35:04.910 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
14:35:04.932 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
14:35:04.983 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
14:35:04.984 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
14:35:04.984 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
14:35:04.984 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
14:35:05.106 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
14:35:05.118 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
14:35:05.119 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
14:35:05.126 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
14:35:05.146 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
14:35:05.356 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
14:35:05.361 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
14:35:05.362 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
14:35:05.391 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
14:35:05.391 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
14:35:05.426 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
14:35:05.455 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
14:35:05.456 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: deleteOneUsingPOST_1
14:35:05.488 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: getAllWonBidUsingGET_1
14:35:05.524 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.614 seconds (JVM running for 4.079)
14:35:05.871 [RMI TCP Connection(4)-192.168.0.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
14:35:05.871 [RMI TCP Connection(4)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
14:35:05.873 [RMI TCP Connection(4)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
14:35:05.900 [RMI TCP Connection(3)-192.168.0.101] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
14:35:06.237 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - Jakarta Mail version 1.6.5
14:35:06.279 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
14:35:06.280 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - Tables of loaded providers
14:35:06.280 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
14:35:06.280 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
14:35:06.281 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
14:35:09.980 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:35:10.078 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:35:10.114 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:35:10.114 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:35:10.139 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:35:10.139 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:35:10.264 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==>  Preparing: select kdn_logistics_id as kdnLogisticsId, kdn_logistics_name as kdnLogisticsName from hkerp_kdn_logistics where disabled = 0;
14:35:10.265 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==> Parameters: 
14:35:10.273 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - <==      Total: 4
14:35:10.292 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getLogisticsList' parameter -1
14:35:10.292 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:35:10.303 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id`
14:35:10.308 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==> Parameters: 
14:35:10.318 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - <==      Total: 1
14:35:10.319 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - ==>  Preparing: SELECT ewb.`won_number` as number, ewb.`won_date` as date, ewb.`amount`, ewb.`warehouse`, ewb.`exchange_rate` as `exchangeRate`, ewb.is_shipped as `isShipped`, ev.`vendor_name` as vendor, ewb.bid_id as `bidId` FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id` LIMIT ?
14:35:10.321 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:35:10.331 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - <==      Total: 4
14:35:10.355 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getAllWonBid' parameter -1
14:35:10.355 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:35:39.702 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:35:39.703 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:35:39.713 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:35:39.810 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_bid` AS eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid AS ewb ON ewb.bid_id = eb.bid_id
14:35:39.810 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 
14:35:39.820 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:35:39.820 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==>  Preparing: SELECT eb.`bid_id` AS `id`, eb.`bid_date` AS `bidDate`, ev.`vendor_name` AS vendor, ewb.`won_number` AS wonNumber, ewb.`won_date` AS wonDate, ewb.`amount` AS amount FROM `epsi_bid` as eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid as ewb on ewb.bid_id = eb.bid_id order by eb.created_at desc LIMIT ?
14:35:39.822 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:35:39.833 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - <==      Total: 8
14:35:39.851 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyBid' parameter -1
14:35:39.851 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:35:41.198 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:35:41.198 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:35:41.208 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:35:41.294 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:35:41.298 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201214002(String)
14:35:41.309 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:35:41.328 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:35:41.328 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:35:41.329 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:35:41.329 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:35:41.339 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:35:41.434 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:35:41.436 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201214002(String)
14:35:41.445 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:35:41.466 [http-nio-34571-exec-5] ERROR n.k.e.c.h.ExceptionHandlerAdvice - null
java.util.NoSuchElementException: null
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:969)
	at net.kintex.epsi.purchasing.service.impl.BidRecordServiceImpl.selectOneOrMany(BidRecordServiceImpl.java:97)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy178.selectOneOrMany(Unknown Source)
	at net.kintex.epsi.purchasing.controller.BidRecordController.getOneOrMany(BidRecordController.java:70)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
14:35:41.468 [http-nio-34571-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.util.NoSuchElementException]
14:35:44.519 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:35:44.520 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:35:44.534 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:35:44.623 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==>  Preparing: SELECT LPAD(COUNT(*) + 1,4,0) FROM epsi_won_bid LEFT JOIN epsi_bid eb on epsi_won_bid.bid_id = eb.bid_id WHERE vendor_id = ? AND YEAR(epsi_won_bid.created_at) BETWEEN ? AND ? + 1
14:35:44.624 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==> Parameters: 4(String), 2020(String), 2020(String)
14:35:44.634 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - <==      Total: 1
14:35:44.635 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==>  Preparing: SELECT vendor_code FROM epsi_vendor WHERE vendor_id = ?
14:35:44.635 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==> Parameters: 4(String)
14:35:44.644 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - <==      Total: 1
14:35:44.663 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getWonBidNumber' parameter -1
14:35:44.663 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:35:49.073 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:35:49.074 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:35:49.085 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:35:49.169 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==>  Preparing: select kdn_logistics_id as kdnLogisticsId, kdn_logistics_name as kdnLogisticsName from hkerp_kdn_logistics where disabled = 0;
14:35:49.170 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==> Parameters: 
14:35:49.180 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - <==      Total: 4
14:35:49.181 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:35:49.181 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:35:49.189 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:35:49.197 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getLogisticsList' parameter -1
14:35:49.198 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:35:49.276 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id`
14:35:49.276 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==> Parameters: 
14:35:49.285 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - <==      Total: 1
14:35:49.286 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - ==>  Preparing: SELECT ewb.`won_number` as number, ewb.`won_date` as date, ewb.`amount`, ewb.`warehouse`, ewb.`exchange_rate` as `exchangeRate`, ewb.is_shipped as `isShipped`, ev.`vendor_name` as vendor, ewb.bid_id as `bidId` FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id` LIMIT ?
14:35:49.286 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:35:49.296 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - <==      Total: 3
14:35:49.314 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getAllWonBid' parameter -1
14:35:49.314 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:35:51.664 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:35:51.664 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:35:51.674 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:35:51.761 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_bid` AS eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid AS ewb ON ewb.bid_id = eb.bid_id
14:35:51.761 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 
14:35:51.771 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:35:51.771 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==>  Preparing: SELECT eb.`bid_id` AS `id`, eb.`bid_date` AS `bidDate`, ev.`vendor_name` AS vendor, ewb.`won_number` AS wonNumber, ewb.`won_date` AS wonDate, ewb.`amount` AS amount FROM `epsi_bid` as eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid as ewb on ewb.bid_id = eb.bid_id order by eb.created_at desc LIMIT ?
14:35:51.771 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:35:51.782 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - <==      Total: 8
14:35:51.800 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyBid' parameter -1
14:35:51.800 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:35:58.544 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:35:58.545 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:35:58.554 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:35:58.640 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_bid` AS eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid AS ewb ON ewb.bid_id = eb.bid_id
14:35:58.641 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 
14:35:58.650 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:35:58.650 [http-nio-34571-exec-10] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==>  Preparing: SELECT eb.`bid_id` AS `id`, eb.`bid_date` AS `bidDate`, ev.`vendor_name` AS vendor, ewb.`won_number` AS wonNumber, ewb.`won_date` AS wonDate, ewb.`amount` AS amount FROM `epsi_bid` as eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid as ewb on ewb.bid_id = eb.bid_id order by eb.created_at desc LIMIT ?
14:35:58.650 [http-nio-34571-exec-10] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:35:58.661 [http-nio-34571-exec-10] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - <==      Total: 8
14:35:58.678 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyBid' parameter -1
14:35:58.678 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:36:08.139 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:36:08.139 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:36:08.149 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:36:08.233 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:36:08.234 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201214002(String)
14:36:08.244 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:36:08.261 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:36:08.261 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:36:08.569 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:36:08.569 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:36:08.579 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:36:08.668 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:36:08.669 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201214002(String)
14:36:08.678 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:36:08.694 [http-nio-34571-exec-2] ERROR n.k.e.c.h.ExceptionHandlerAdvice - null
java.util.NoSuchElementException: null
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:969)
	at net.kintex.epsi.purchasing.service.impl.BidRecordServiceImpl.selectOneOrMany(BidRecordServiceImpl.java:97)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy178.selectOneOrMany(Unknown Source)
	at net.kintex.epsi.purchasing.controller.BidRecordController.getOneOrMany(BidRecordController.java:70)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
14:36:08.696 [http-nio-34571-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.util.NoSuchElementException]
14:36:12.279 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:36:12.279 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:36:12.289 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:36:12.373 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==>  Preparing: SELECT LPAD(COUNT(*) + 1,4,0) FROM epsi_won_bid LEFT JOIN epsi_bid eb on epsi_won_bid.bid_id = eb.bid_id WHERE vendor_id = ? AND YEAR(epsi_won_bid.created_at) BETWEEN ? AND ? + 1
14:36:12.373 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==> Parameters: 4(String), 2020(String), 2020(String)
14:36:12.382 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - <==      Total: 1
14:36:12.382 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==>  Preparing: SELECT vendor_code FROM epsi_vendor WHERE vendor_id = ?
14:36:12.383 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==> Parameters: 4(String)
14:36:12.391 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - <==      Total: 1
14:36:12.408 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getWonBidNumber' parameter -1
14:36:12.408 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:36:21.868 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:36:21.868 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:36:21.877 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:36:22.003 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==>  Preparing: select bid_date from epsi_bid eb left join epsi_won_bid ewb on eb.bid_id = ewb.bid_id where eb.bid_id = ?
14:36:22.004 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==> Parameters: 20201214002(String)
14:36:22.014 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectBidDate - <==      Total: 1
14:36:22.015 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectOne - ==>  Preparing: SELECT `bid_id` AS `id`, `file_name` AS `fileName`, `bid_date` AS `date`, JSON_OBJECT('id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code`) vendor, `currency`, `exchange_rate` as `exchangeRate` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` WHERE `bid_id` = ?
14:36:22.016 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectOne - ==> Parameters: 20201214002(String)
14:36:22.025 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectOne - <==      Total: 1
14:36:22.027 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==>  Preparing: SELECT record_id, bid_id, won_id, description, grade, sku_id, quantity, won_qty, bid_price, hkd, won_price, won_hkd, tag FROM `epsi_bid_record` WHERE `tag` IN ( ? , ? , ? , ? , ? , ? )
14:36:22.027 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==> Parameters: LG LMX220|Grade AA(String), LG LMX220 (KIT)|Grade AA(String), LG LMX220MA|Grade AA(String), LG LMX320MA (DEMO)|Grade AA(String), LG MS550-BLK|Grade AA(String), LG Q710MS (SX)|Grade FG(String)
14:36:22.036 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - <==      Total: 0
14:36:22.038 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.updateManyByTag - ==>  Preparing: UPDATE `epsi_bid_record` set updated_by = ? WHERE `record_id` IN( ) AND`tag` IN ( ? , ? , ? , ? , ? , ? )
14:36:22.041 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.updateManyByTag - ==> Parameters: 1(Integer), LG LMX220|Grade AA(String), LG LMX220 (KIT)|Grade AA(String), LG LMX220MA|Grade AA(String), LG LMX320MA (DEMO)|Grade AA(String), LG MS550-BLK|Grade AA(String), LG Q710MS (SX)|Grade FG(String)
14:36:22.109 [http-nio-34571-exec-4] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')
        AND`tag` IN (
          
            'LG LMX220|Grade AA'
         , 
' at line 4
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: UPDATE `epsi_bid_record`          set updated_by = ?          WHERE `record_id` IN(          )         AND`tag` IN (                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')
        AND`tag` IN (
          
            'LG LMX220|Grade AA'
         , 
' at line 4
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')
        AND`tag` IN (
          
            'LG LMX220|Grade AA'
         , 
' at line 4
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')
        AND`tag` IN (
          
            'LG LMX220|Grade AA'
         , 
' at line 4
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: UPDATE `epsi_bid_record`          set updated_by = ?          WHERE `record_id` IN(          )         AND`tag` IN (                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')
        AND`tag` IN (
          
            'LG LMX220|Grade AA'
         , 
' at line 4
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')
        AND`tag` IN (
          
            'LG LMX220|Grade AA'
         , 
' at line 4
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy116.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:304)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy151.updateManyByTag(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy152.updateManyByTag(Unknown Source)
	at net.kintex.epsi.purchasing.service.impl.WonBidServiceImpl.create(WonBidServiceImpl.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy183.create(Unknown Source)
	at net.kintex.epsi.purchasing.controller.WonBidController.createWonBid(WonBidController.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')
        AND`tag` IN (
          
            'LG LMX220|Grade AA'
         , 
' at line 4
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at jdk.internal.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy230.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy228.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 129 common frames omitted
14:36:22.110 [http-nio-34571-exec-4] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')
        AND`tag` IN (
          
            'LG LMX220|Grade AA'
         , 
' at line 4
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: UPDATE `epsi_bid_record`          set updated_by = ?          WHERE `record_id` IN(          )         AND`tag` IN (                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')
        AND`tag` IN (
          
            'LG LMX220|Grade AA'
         , 
' at line 4
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')
        AND`tag` IN (
          
            'LG LMX220|Grade AA'
         , 
' at line 4]
14:37:47.687 [http-nio-34571-exec-5] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 85574
14:37:47.694 [http-nio-34571-exec-5] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 118505
14:37:47.815 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:37:47.815 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:37:47.825 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:37:47.899 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:37:47.900 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:37:47.910 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:37:47.925 [http-nio-34571-exec-5] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
14:37:47.925 [http-nio-34571-exec-5] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
14:37:47.935 [http-nio-34571-exec-5] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
14:37:47.953 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
14:37:47.953 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:37:48.022 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:37:48.022 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:37:48.031 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:37:48.120 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:37:48.120 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:37:48.130 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:37:48.130 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:37:48.131 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
14:37:48.145 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
14:37:48.162 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:37:48.162 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:37:48.318 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:37:48.318 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:37:48.327 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:37:48.327 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:37:48.328 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:37:48.336 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:37:48.414 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
14:37:48.415 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
14:37:48.423 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
14:37:48.424 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
14:37:48.424 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
14:37:48.436 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
14:37:48.451 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:37:48.451 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:37:48.453 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:37:48.453 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:37:48.461 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:37:48.461 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:37:48.461 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
14:37:48.475 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
14:37:48.492 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:37:48.492 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:37:48.875 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:37:48.875 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:37:48.885 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:37:48.968 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:37:48.969 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201214002(String)
14:37:48.978 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 0
14:37:48.995 [http-nio-34571-exec-9] ERROR n.k.e.c.h.ExceptionHandlerAdvice - null
java.lang.NullPointerException: null
	at net.kintex.epsi.purchasing.service.impl.BidServiceImpl.getBidDetailById(BidServiceImpl.java:114)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy179.getBidDetailById(Unknown Source)
	at net.kintex.epsi.purchasing.controller.BidController.getBidDetail(BidController.java:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
14:37:48.996 [http-nio-34571-exec-9] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.NullPointerException]
14:37:49.033 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:37:49.033 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:37:49.042 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:37:49.129 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:37:49.129 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201214002(String)
14:37:49.138 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:37:49.155 [http-nio-34571-exec-10] ERROR n.k.e.c.h.ExceptionHandlerAdvice - null
java.util.NoSuchElementException: null
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:969)
	at net.kintex.epsi.purchasing.service.impl.BidRecordServiceImpl.selectOneOrMany(BidRecordServiceImpl.java:97)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy178.selectOneOrMany(Unknown Source)
	at net.kintex.epsi.purchasing.controller.BidRecordController.getOneOrMany(BidRecordController.java:70)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
14:37:49.156 [http-nio-34571-exec-10] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.util.NoSuchElementException]
14:37:50.935 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:37:50.936 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:37:50.945 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:37:51.020 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:37:51.020 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:37:51.029 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:37:51.040 [http-nio-34571-exec-1] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
14:37:51.040 [http-nio-34571-exec-1] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
14:37:51.049 [http-nio-34571-exec-1] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
14:37:51.066 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
14:37:51.066 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:37:51.467 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:37:51.467 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:37:51.467 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:37:51.467 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:37:51.476 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:37:51.476 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:37:51.476 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:37:51.477 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:37:51.485 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:37:51.560 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:37:51.560 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:37:51.560 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
14:37:51.560 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
14:37:51.569 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:37:51.569 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
14:37:51.569 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:37:51.570 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
14:37:51.570 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
14:37:51.570 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
14:37:51.579 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
14:37:51.580 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
14:37:51.596 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:37:51.596 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:37:51.596 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:37:51.596 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:37:51.605 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:37:51.605 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:37:51.617 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:37:51.618 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:37:51.618 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
14:37:51.629 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
14:37:51.647 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:37:51.647 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:37:51.720 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:37:51.721 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:37:51.730 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:37:51.813 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:37:51.814 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201214002(String)
14:37:51.823 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 0
14:37:51.839 [http-nio-34571-exec-5] ERROR n.k.e.c.h.ExceptionHandlerAdvice - null
java.lang.NullPointerException: null
	at net.kintex.epsi.purchasing.service.impl.BidServiceImpl.getBidDetailById(BidServiceImpl.java:114)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy179.getBidDetailById(Unknown Source)
	at net.kintex.epsi.purchasing.controller.BidController.getBidDetail(BidController.java:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
14:37:51.841 [http-nio-34571-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.NullPointerException]
14:37:52.186 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:37:52.186 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:37:52.195 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:37:52.293 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:37:52.293 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201214002(String)
14:37:52.301 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:37:52.318 [http-nio-34571-exec-6] ERROR n.k.e.c.h.ExceptionHandlerAdvice - null
java.util.NoSuchElementException: null
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:969)
	at net.kintex.epsi.purchasing.service.impl.BidRecordServiceImpl.selectOneOrMany(BidRecordServiceImpl.java:97)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:371)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy178.selectOneOrMany(Unknown Source)
	at net.kintex.epsi.purchasing.controller.BidRecordController.getOneOrMany(BidRecordController.java:70)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
14:37:52.319 [http-nio-34571-exec-6] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.util.NoSuchElementException]
14:37:53.484 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:37:53.484 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:37:53.494 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:37:53.577 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==>  Preparing: select kdn_logistics_id as kdnLogisticsId, kdn_logistics_name as kdnLogisticsName from hkerp_kdn_logistics where disabled = 0;
14:37:53.577 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==> Parameters: 
14:37:53.586 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - <==      Total: 4
14:37:53.602 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getLogisticsList' parameter -1
14:37:53.602 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:37:53.891 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:37:53.891 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:37:53.900 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:37:53.986 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id`
14:37:53.986 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==> Parameters: 
14:37:53.995 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - <==      Total: 1
14:37:54.010 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getAllWonBid' parameter -1
14:37:54.010 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:37:55.032 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:37:55.032 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:37:55.041 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:37:55.125 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_bid` AS eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid AS ewb ON ewb.bid_id = eb.bid_id
14:37:55.126 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 
14:37:55.134 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:37:55.150 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyBid' parameter -1
14:37:55.150 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:37:58.854 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:37:58.854 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:37:58.863 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:37:58.946 [http-nio-34571-exec-10] DEBUG n.k.e.p.dao.BidDao.selectCreatedAt - ==>  Preparing: SELECT * FROM epsi_bid WHERE created_at >= ? ORDER BY created_at DESC limit 1
14:37:58.946 [http-nio-34571-exec-10] DEBUG n.k.e.p.dao.BidDao.selectCreatedAt - ==> Parameters: 2020-12-18(String)
14:37:58.954 [http-nio-34571-exec-10] DEBUG n.k.e.p.dao.BidDao.selectCreatedAt - <==      Total: 0
14:37:58.970 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getNewBidNumber' parameter -1
14:37:58.970 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:38:03.861 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:03.862 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:03.871 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:03.956 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_bid` AS eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid AS ewb ON ewb.bid_id = eb.bid_id
14:38:03.956 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 
14:38:03.965 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:38:03.980 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyBid' parameter -1
14:38:03.980 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:38:07.089 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:07.090 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:07.098 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:07.171 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:07.171 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:07.180 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:07.189 [http-nio-34571-exec-4] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
14:38:07.189 [http-nio-34571-exec-4] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
14:38:07.198 [http-nio-34571-exec-4] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
14:38:07.214 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
14:38:07.214 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:38:07.568 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:07.568 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:07.568 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:07.568 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:07.568 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:07.568 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:07.577 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:07.577 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:07.578 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:07.661 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:38:07.661 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
14:38:07.661 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:38:07.661 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
14:38:07.662 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:38:07.662 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:38:07.670 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:38:07.670 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
14:38:07.670 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:38:07.670 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
14:38:07.670 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
14:38:07.670 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
14:38:07.675 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:38:07.675 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:38:07.675 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
14:38:07.679 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
14:38:07.680 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
14:38:07.688 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
14:38:07.695 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:38:07.695 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:38:07.695 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:38:07.695 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:38:07.707 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:38:07.707 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:38:07.819 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:07.820 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:07.830 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:07.917 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_bid` AS eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid AS ewb ON ewb.bid_id = eb.bid_id
14:38:07.917 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 
14:38:07.927 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:38:07.946 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyBid' parameter -1
14:38:07.946 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:38:13.737 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:13.737 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:13.748 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:13.833 [http-nio-34571-exec-7] DEBUG n.k.e.p.dao.BidDao.selectCreatedAt - ==>  Preparing: SELECT * FROM epsi_bid WHERE created_at >= ? ORDER BY created_at DESC limit 1
14:38:13.833 [http-nio-34571-exec-7] DEBUG n.k.e.p.dao.BidDao.selectCreatedAt - ==> Parameters: 2020-12-18(String)
14:38:13.843 [http-nio-34571-exec-7] DEBUG n.k.e.p.dao.BidDao.selectCreatedAt - <==      Total: 0
14:38:13.862 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getNewBidNumber' parameter -1
14:38:13.862 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:38:38.281 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:38.282 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:38.292 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:38.403 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidDao.checkDuplicate - ==>  Preparing: SELECT COUNT(*) FROM `epsi_bid` WHERE `bid_id` = ?
14:38:38.403 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidDao.checkDuplicate - ==> Parameters: 20201218001(String)
14:38:38.413 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidDao.checkDuplicate - <==      Total: 1
14:38:38.414 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidDao.insertOne - ==>  Preparing: INSERT INTO `epsi_bid` (`bid_id`, `file_name`, `bid_date`, `vendor_id`, `currency`, `exchange_rate`, `created_by`, `updated_by`) values (?, ?, ?, ?, ?, ?, ?, ?)
14:38:38.419 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidDao.insertOne - ==> Parameters: 20201218001(String), MPCS WK 47 LQ Good Refurb Offer Sheet(String), 2020-12-18(String), 4(Integer), USD(String), 7.7537(Double), 1(Integer), 1(Integer)
14:38:38.439 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidDao.insertOne - <==    Updates: 1
14:38:38.442 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.checkDescription - ==>  Preparing: SELECT sku_text FROM epsi_vendor_sku WHERE sku_text in ( ? , ? , ? , ? , ? , ? )
14:38:38.442 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.checkDescription - ==> Parameters: LG Q710MS (SX)(String), LG LMX220(String), LG LMX220 (KIT)(String), LG LMX220MA(String), LG LMX320MA (DEMO)(String), LG MS550-BLK(String)
14:38:38.453 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.checkDescription - <==      Total: 6
14:38:38.456 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectDescription - ==>  Preparing: SELECT sku_id AS `key`, sku_text AS `value` FROM epsi_vendor_sku WHERE sku_text in ( ? , ? , ? , ? , ? , ? )
14:38:38.457 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectDescription - ==> Parameters: LG LMX220 (KIT)(String), LG LMX320MA (DEMO)(String), LG Q710MS (SX)(String), LG MS550-BLK(String), LG LMX220MA(String), LG LMX220(String)
14:38:38.468 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectDescription - <==      Total: 6
14:38:38.470 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidRecordDao.insertMany - ==>  Preparing: INSERT INTO `epsi_bid_record` (`bid_id`, `description`, `grade`, `sku_id`, `quantity`, `bid_price`, `hkd`, `tag`, `created_by`, `updated_by`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) , (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) , (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) , (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) , (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) , (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
14:38:38.472 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidRecordDao.insertMany - ==> Parameters: 20201218001(String), LG Q710MS (SX)(String), Grade FG(String), 144(String), 100(Integer), 45.0(Double), 349.0(Double), LG Q710MS (SX)|Grade FG(String), 1(Integer), 1(Integer), 20201218001(String), LG LMX220(String), Grade AA(String), 145(String), 1003(Integer), 30.0(Double), 233.0(Double), LG LMX220|Grade AA(String), 1(Integer), 1(Integer), 20201218001(String), LG LMX220 (KIT)(String), Grade AA(String), 146(String), 20(Integer), 30.0(Double), 233.0(Double), LG LMX220 (KIT)|Grade AA(String), 1(Integer), 1(Integer), 20201218001(String), LG LMX220MA(String), Grade AA(String), 147(String), 104(Integer), 30.0(Double), 233.0(Double), LG LMX220MA|Grade AA(String), 1(Integer), 1(Integer), 20201218001(String), LG LMX320MA (DEMO)(String), Grade AA(String), 148(String), 100(Integer), 30.0(Double), 233.0(Double), LG LMX320MA (DEMO)|Grade AA(String), 1(Integer), 1(Integer), 20201218001(String), LG MS550-BLK(String), Grade AA(String), 149(String), 1(Integer), 10.0(Double), 78.0(Double), LG MS550-BLK|Grade AA(String), 1(Integer), 1(Integer)
14:38:38.495 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidRecordDao.insertMany - <==    Updates: 6
14:38:38.519 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'addBid' parameter -1
14:38:38.519 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:38:40.085 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:40.085 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:40.096 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:40.182 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_bid` AS eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid AS ewb ON ewb.bid_id = eb.bid_id
14:38:40.182 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 
14:38:40.193 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:38:40.193 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==>  Preparing: SELECT eb.`bid_id` AS `id`, eb.`bid_date` AS `bidDate`, ev.`vendor_name` AS vendor, ewb.`won_number` AS wonNumber, ewb.`won_date` AS wonDate, ewb.`amount` AS amount FROM `epsi_bid` as eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid as ewb on ewb.bid_id = eb.bid_id order by eb.created_at desc LIMIT ?
14:38:40.193 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:38:40.203 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - <==      Total: 1
14:38:40.223 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyBid' parameter -1
14:38:40.223 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:38:42.303 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:42.303 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:42.314 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:42.398 [http-nio-34571-exec-10] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:38:42.399 [http-nio-34571-exec-10] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201218001(String)
14:38:42.410 [http-nio-34571-exec-10] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:38:42.420 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:42.420 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:42.429 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:42.429 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:38:42.429 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:38:42.515 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:38:42.516 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201218001(String)
14:38:42.524 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:38:42.525 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:38:42.525 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201218001(String), 20(Integer)
14:38:42.534 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:38:42.535 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:38:42.535 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201218001(String)
14:38:42.543 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:38:42.560 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:38:42.560 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:38:45.797 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:45.797 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:45.806 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:45.889 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==>  Preparing: SELECT LPAD(COUNT(*) + 1,4,0) FROM epsi_won_bid LEFT JOIN epsi_bid eb on epsi_won_bid.bid_id = eb.bid_id WHERE vendor_id = ? AND YEAR(epsi_won_bid.created_at) BETWEEN ? AND ? + 1
14:38:45.889 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==> Parameters: 4(String), 2020(String), 2020(String)
14:38:45.898 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - <==      Total: 1
14:38:45.898 [http-nio-34571-exec-4] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==>  Preparing: SELECT vendor_code FROM epsi_vendor WHERE vendor_id = ?
14:38:45.898 [http-nio-34571-exec-4] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==> Parameters: 4(String)
14:38:45.906 [http-nio-34571-exec-4] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - <==      Total: 1
14:38:45.922 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getWonBidNumber' parameter -1
14:38:45.922 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:38:53.860 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:53.860 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:53.869 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:53.951 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==>  Preparing: select bid_date from epsi_bid eb left join epsi_won_bid ewb on eb.bid_id = ewb.bid_id where eb.bid_id = ?
14:38:53.951 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==> Parameters: 20201218001(String)
14:38:53.959 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectBidDate - <==      Total: 1
14:38:53.960 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOne - ==>  Preparing: SELECT `bid_id` AS `id`, `file_name` AS `fileName`, `bid_date` AS `date`, JSON_OBJECT('id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code`) vendor, `currency`, `exchange_rate` as `exchangeRate` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` WHERE `bid_id` = ?
14:38:53.960 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOne - ==> Parameters: 20201218001(String)
14:38:53.969 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOne - <==      Total: 1
14:38:53.969 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==>  Preparing: SELECT record_id, bid_id, won_id, description, grade, sku_id, quantity, won_qty, bid_price, hkd, won_price, won_hkd, tag FROM `epsi_bid_record` WHERE `tag` IN ( ? , ? , ? , ? , ? , ? )
14:38:53.969 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==> Parameters: LG LMX220|Grade AA(String), LG LMX220 (KIT)|Grade AA(String), LG LMX220MA|Grade AA(String), LG LMX320MA (DEMO)|Grade AA(String), LG MS550-BLK|Grade AA(String), LG Q710MS (SX)|Grade FG(String)
14:38:53.978 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - <==      Total: 6
14:38:53.985 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.B.updateManyByTag - ==>  Preparing: UPDATE `epsi_bid_record` set `won_id` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_qty` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_price` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, updated_by = ? WHERE `record_id` IN( ? , ? , ? , ? , ? , ? ) AND`tag` IN ( ? , ? , ? , ? , ? , ? )
14:38:53.987 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.B.updateManyByTag - ==> Parameters: 390(String), T000120DA1(String), 391(String), T000120DA1(String), 392(String), T000120DA1(String), 393(String), T000120DA1(String), 394(String), T000120DA1(String), 395(String), T000120DA1(String), 390(String), 100(Integer), 391(String), 1003(Integer), 392(String), 20(Integer), 393(String), 104(Integer), 394(String), 100(Integer), 395(String), 1(Integer), 390(String), 45.0(Double), 391(String), 30.0(Double), 392(String), 30.0(Double), 393(String), 30.0(Double), 394(String), 30.0(Double), 395(String), 10.0(Double), 1(Integer), 390(String), 391(String), 392(String), 393(String), 394(String), 395(String), LG LMX220|Grade AA(String), LG LMX220 (KIT)|Grade AA(String), LG LMX220MA|Grade AA(String), LG LMX320MA (DEMO)|Grade AA(String), LG MS550-BLK|Grade AA(String), LG Q710MS (SX)|Grade FG(String)
14:38:54.003 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.B.updateManyByTag - <==    Updates: 6
14:38:54.003 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.WonBidDao.insertOne - ==>  Preparing: INSERT INTO `epsi_won_bid` (`won_number`, `won_date`, `amount`, `bid_id`, `exchange_rate`, `created_by`, `updated_by`) VALUES (?, DATE_FORMAT(?, '%Y-%m-%d %H:%i:%s'), ?, ?, ?, ?, ?);
14:38:54.004 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.WonBidDao.insertOne - ==> Parameters: T000120DA1(String), 2020-12-19(String), 100000.0(Double), 20201218001(String), 7.7537(Double), 1(Integer), 1(Integer)
14:38:54.020 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.WonBidDao.insertOne - <==    Updates: 1
14:38:54.041 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'createWonBid' parameter -1
14:38:54.041 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:38:54.712 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:54.712 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:54.721 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:54.794 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:54.794 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:54.803 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:54.812 [http-nio-34571-exec-2] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
14:38:54.813 [http-nio-34571-exec-2] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
14:38:54.821 [http-nio-34571-exec-2] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
14:38:54.837 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
14:38:54.837 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:38:55.196 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:55.196 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:55.196 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:55.196 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:55.196 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:55.196 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:55.205 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:55.205 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:55.206 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:55.288 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
14:38:55.288 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
14:38:55.288 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:38:55.289 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:38:55.290 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:38:55.290 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:38:55.297 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:38:55.297 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
14:38:55.297 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:38:55.297 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
14:38:55.298 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
14:38:55.298 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
14:38:55.301 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:38:55.302 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:38:55.302 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
14:38:55.307 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
14:38:55.308 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
14:38:55.313 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
14:38:55.323 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:38:55.323 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:38:55.323 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:38:55.323 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:38:55.332 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:38:55.332 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:38:55.438 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:55.438 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:55.449 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:55.533 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:38:55.534 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201218001(String)
14:38:55.545 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:38:55.564 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:38:55.564 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:38:55.679 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:38:55.679 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:38:55.690 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:38:55.777 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:38:55.778 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201218001(String)
14:38:55.787 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:38:55.788 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:38:55.788 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201218001(String), 20(Integer)
14:38:55.799 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:38:55.799 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:38:55.799 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201218001(String)
14:38:55.809 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:38:55.828 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:38:55.828 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:39:03.431 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:39:03.432 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:39:03.442 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:39:03.532 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_payment_record epr LEFT JOIN epsi_won_bid ewb ON epr.won_number = ewb.won_number LEFT JOIN epsi_exchange_rate eer ON eer.exchange_rate = ewb.exchange_rate
14:39:03.532 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==> Parameters: 
14:39:03.542 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - <==      Total: 1
14:39:03.561 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyPaymentRecord' parameter -1
14:39:03.561 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:39:18.226 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:39:18.226 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:39:18.236 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:39:18.309 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:39:18.310 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:39:18.320 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:39:18.331 [http-nio-34571-exec-1] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
14:39:18.331 [http-nio-34571-exec-1] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
14:39:18.341 [http-nio-34571-exec-1] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
14:39:18.360 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
14:39:18.360 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:39:18.969 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:39:18.969 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:39:18.979 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:39:19.063 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:39:19.063 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:39:19.073 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:39:19.073 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:39:19.073 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
14:39:19.084 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
14:39:19.103 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:39:19.103 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:39:19.216 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:39:19.216 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:39:19.218 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:39:19.218 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:39:19.226 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:39:19.227 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:39:19.309 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
14:39:19.309 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
14:39:19.310 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:39:19.311 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:39:19.319 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
14:39:19.320 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
14:39:19.320 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
14:39:19.323 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:39:19.323 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:39:19.324 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
14:39:19.329 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
14:39:19.335 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
14:39:19.345 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:39:19.345 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:39:19.353 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:39:19.354 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:39:19.879 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:39:19.880 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:39:19.890 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:39:19.976 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_payment_record epr LEFT JOIN epsi_won_bid ewb ON epr.won_number = ewb.won_number LEFT JOIN epsi_exchange_rate eer ON eer.exchange_rate = ewb.exchange_rate
14:39:19.976 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==> Parameters: 
14:39:19.986 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - <==      Total: 1
14:39:20.005 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyPaymentRecord' parameter -1
14:39:20.006 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:44:47.640 [http-nio-34571-exec-6] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 327635
14:44:47.649 [http-nio-34571-exec-6] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 328303
14:44:47.657 [http-nio-34571-exec-6] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 352334
14:44:47.774 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:44:47.775 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:44:47.785 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:44:47.932 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:44:47.932 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:44:47.943 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:44:48.615 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:44:48.615 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:44:48.626 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:44:48.711 [http-nio-34571-exec-3] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
14:44:48.711 [http-nio-34571-exec-3] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
14:44:48.721 [http-nio-34571-exec-3] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
14:44:48.739 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
14:44:48.739 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:44:48.787 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:44:48.788 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:44:48.797 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:44:48.798 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:44:48.798 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:44:48.808 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:44:48.808 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:44:48.808 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:44:48.818 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:44:48.896 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:44:48.896 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:44:48.905 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
14:44:48.905 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
14:44:48.907 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:44:48.907 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:44:48.907 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
14:44:48.913 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
14:44:48.914 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
14:44:48.914 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
14:44:48.917 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
14:44:48.922 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
14:44:48.936 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:44:48.936 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:44:48.936 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:44:48.936 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:44:48.944 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:44:48.944 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:44:48.956 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:44:48.956 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:44:48.957 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
14:44:48.965 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
14:44:48.979 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:44:48.979 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:44:54.718 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:44:54.719 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:44:54.726 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:44:54.810 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_payment_record epr LEFT JOIN epsi_won_bid ewb ON epr.won_number = ewb.won_number LEFT JOIN epsi_exchange_rate eer ON eer.exchange_rate = ewb.exchange_rate
14:44:54.810 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==> Parameters: 
14:44:54.817 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - <==      Total: 1
14:44:54.829 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyPaymentRecord' parameter -1
14:44:54.829 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:45:05.109 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:45:05.110 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:45:05.117 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:45:05.200 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_payment_record epr LEFT JOIN epsi_won_bid ewb ON epr.won_number = ewb.won_number LEFT JOIN epsi_exchange_rate eer ON eer.exchange_rate = ewb.exchange_rate
14:45:05.200 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==> Parameters: 
14:45:05.207 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - <==      Total: 1
14:45:05.219 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyPaymentRecord' parameter -1
14:45:05.219 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:47:56.094 [http-nio-34571-exec-2] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 170874
14:47:56.101 [http-nio-34571-exec-2] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 187121
14:47:56.125 [http-nio-34571-exec-2] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 187188
14:47:56.227 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:47:56.228 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:47:56.237 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:47:56.238 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:47:56.238 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:47:56.248 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:47:56.324 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==>  Preparing: select kdn_logistics_id as kdnLogisticsId, kdn_logistics_name as kdnLogisticsName from hkerp_kdn_logistics where disabled = 0;
14:47:56.325 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==> Parameters: 
14:47:56.334 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id`
14:47:56.334 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==> Parameters: 
14:47:56.335 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - <==      Total: 4
14:47:56.341 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - <==      Total: 1
14:47:56.353 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getLogisticsList' parameter -1
14:47:56.353 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:47:56.354 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getAllWonBid' parameter -1
14:47:56.354 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:48:42.351 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:48:42.351 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:48:42.358 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:48:42.432 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:48:42.432 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:48:42.439 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:48:42.449 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_bid` AS eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid AS ewb ON ewb.bid_id = eb.bid_id
14:48:42.449 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 
14:48:42.455 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:48:42.467 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyBid' parameter -1
14:48:42.467 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:48:45.699 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:48:45.699 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:48:45.706 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:48:45.787 [http-nio-34571-exec-6] DEBUG n.k.e.p.dao.BidDao.selectCreatedAt - ==>  Preparing: SELECT * FROM epsi_bid WHERE created_at >= ? ORDER BY created_at DESC limit 1
14:48:45.787 [http-nio-34571-exec-6] DEBUG n.k.e.p.dao.BidDao.selectCreatedAt - ==> Parameters: 2020-12-18(String)
14:48:45.794 [http-nio-34571-exec-6] DEBUG n.k.e.p.dao.BidDao.selectCreatedAt - <==      Total: 0
14:48:45.806 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getNewBidNumber' parameter -1
14:48:45.806 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:49:37.964 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:49:37.965 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:49:37.972 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:49:38.053 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.checkDuplicate - ==>  Preparing: SELECT COUNT(*) FROM `epsi_bid` WHERE `bid_id` = ?
14:49:38.053 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.checkDuplicate - ==> Parameters: 20201218001(String)
14:49:38.060 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.checkDuplicate - <==      Total: 1
14:49:38.060 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.insertOne - ==>  Preparing: INSERT INTO `epsi_bid` (`bid_id`, `file_name`, `bid_date`, `vendor_id`, `currency`, `exchange_rate`, `created_by`, `updated_by`) values (?, ?, ?, ?, ?, ?, ?, ?)
14:49:38.060 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.insertOne - ==> Parameters: 20201218001(String), MPCS WK 47 LQ Good Refurb Offer Sheet(String), 2020-12-18(String), 4(Integer), USD(String), 7.7537(Double), 1(Integer), 1(Integer)
14:49:38.073 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.insertOne - <==    Updates: 1
14:49:38.074 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.V.checkDescription - ==>  Preparing: SELECT sku_text FROM epsi_vendor_sku WHERE sku_text in ( ? , ? , ? , ? , ? , ? )
14:49:38.074 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.V.checkDescription - ==> Parameters: LG Q710MS (SX)(String), LG LMX220(String), LG LMX220 (KIT)(String), LG LMX220MA(String), LG LMX320MA (DEMO)(String), LG MS550-BLK(String)
14:49:38.081 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.V.checkDescription - <==      Total: 6
14:49:38.081 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.V.selectDescription - ==>  Preparing: SELECT sku_id AS `key`, sku_text AS `value` FROM epsi_vendor_sku WHERE sku_text in ( ? , ? , ? , ? , ? , ? )
14:49:38.081 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.V.selectDescription - ==> Parameters: LG LMX220 (KIT)(String), LG LMX320MA (DEMO)(String), LG Q710MS (SX)(String), LG MS550-BLK(String), LG LMX220MA(String), LG LMX220(String)
14:49:38.088 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.V.selectDescription - <==      Total: 6
14:49:38.089 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidRecordDao.insertMany - ==>  Preparing: INSERT INTO `epsi_bid_record` (`bid_id`, `description`, `grade`, `sku_id`, `quantity`, `bid_price`, `hkd`, `tag`, `created_by`, `updated_by`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) , (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) , (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) , (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) , (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) , (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
14:49:38.090 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidRecordDao.insertMany - ==> Parameters: 20201218001(String), LG Q710MS (SX)(String), Grade FG(String), 144(String), 100(Integer), 45.0(Double), 349.0(Double), LG Q710MS (SX)|Grade FG(String), 1(Integer), 1(Integer), 20201218001(String), LG LMX220(String), Grade AA(String), 145(String), 1003(Integer), 30.0(Double), 233.0(Double), LG LMX220|Grade AA(String), 1(Integer), 1(Integer), 20201218001(String), LG LMX220 (KIT)(String), Grade AA(String), 146(String), 20(Integer), 30.0(Double), 233.0(Double), LG LMX220 (KIT)|Grade AA(String), 1(Integer), 1(Integer), 20201218001(String), LG LMX220MA(String), Grade AA(String), 147(String), 104(Integer), 30.0(Double), 233.0(Double), LG LMX220MA|Grade AA(String), 1(Integer), 1(Integer), 20201218001(String), LG LMX320MA (DEMO)(String), Grade AA(String), 148(String), 100(Integer), 30.0(Double), 233.0(Double), LG LMX320MA (DEMO)|Grade AA(String), 1(Integer), 1(Integer), 20201218001(String), LG MS550-BLK(String), Grade AA(String), 149(String), 1(Integer), 10.0(Double), 78.0(Double), LG MS550-BLK|Grade AA(String), 1(Integer), 1(Integer)
14:49:38.103 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidRecordDao.insertMany - <==    Updates: 6
14:49:38.118 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'addBid' parameter -1
14:49:38.118 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:49:39.440 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:49:39.440 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:49:39.448 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:49:39.530 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_bid` AS eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid AS ewb ON ewb.bid_id = eb.bid_id
14:49:39.530 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 
14:49:39.537 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:49:39.537 [http-nio-34571-exec-10] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==>  Preparing: SELECT eb.`bid_id` AS `id`, eb.`bid_date` AS `bidDate`, ev.`vendor_name` AS vendor, ewb.`won_number` AS wonNumber, ewb.`won_date` AS wonDate, ewb.`amount` AS amount FROM `epsi_bid` as eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid as ewb on ewb.bid_id = eb.bid_id order by eb.created_at desc LIMIT ?
14:49:39.538 [http-nio-34571-exec-10] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:49:39.545 [http-nio-34571-exec-10] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - <==      Total: 1
14:49:39.557 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyBid' parameter -1
14:49:39.557 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:49:41.300 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:49:41.301 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:49:41.308 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:49:41.389 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:49:41.389 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201218001(String)
14:49:41.397 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:49:41.410 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:49:41.410 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:49:41.420 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:49:41.421 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:49:41.428 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:49:41.512 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:49:41.512 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201218001(String)
14:49:41.519 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:49:41.519 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:49:41.520 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201218001(String), 20(Integer)
14:49:41.539 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:49:41.540 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:49:41.540 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201218001(String)
14:49:41.546 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:49:41.559 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:49:41.559 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:49:43.825 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:49:43.825 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:49:43.832 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:49:43.916 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==>  Preparing: SELECT LPAD(COUNT(*) + 1,4,0) FROM epsi_won_bid LEFT JOIN epsi_bid eb on epsi_won_bid.bid_id = eb.bid_id WHERE vendor_id = ? AND YEAR(epsi_won_bid.created_at) BETWEEN ? AND ? + 1
14:49:43.916 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==> Parameters: 4(String), 2020(String), 2020(String)
14:49:43.923 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - <==      Total: 1
14:49:43.923 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==>  Preparing: SELECT vendor_code FROM epsi_vendor WHERE vendor_id = ?
14:49:43.923 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==> Parameters: 4(String)
14:49:43.930 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - <==      Total: 1
14:49:43.942 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getWonBidNumber' parameter -1
14:49:43.942 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:49:52.096 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:49:52.096 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:49:52.103 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:49:52.196 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==>  Preparing: select bid_date from epsi_bid eb left join epsi_won_bid ewb on eb.bid_id = ewb.bid_id where eb.bid_id = ?
14:49:52.196 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==> Parameters: 20201218001(String)
14:49:52.202 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectBidDate - <==      Total: 1
14:49:52.203 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectOne - ==>  Preparing: SELECT `bid_id` AS `id`, `file_name` AS `fileName`, `bid_date` AS `date`, JSON_OBJECT('id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code`) vendor, `currency`, `exchange_rate` as `exchangeRate` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` WHERE `bid_id` = ?
14:49:52.203 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectOne - ==> Parameters: 20201218001(String)
14:49:52.210 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectOne - <==      Total: 1
14:49:52.210 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==>  Preparing: SELECT record_id, bid_id, won_id, description, grade, sku_id, quantity, won_qty, bid_price, hkd, won_price, won_hkd, tag FROM `epsi_bid_record` WHERE `tag` IN ( ? , ? , ? , ? , ? , ? )
14:49:52.210 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==> Parameters: LG LMX220|Grade AA(String), LG LMX220 (KIT)|Grade AA(String), LG LMX220MA|Grade AA(String), LG LMX320MA (DEMO)|Grade AA(String), LG MS550-BLK|Grade AA(String), LG Q710MS (SX)|Grade FG(String)
14:49:52.217 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - <==      Total: 6
14:49:52.219 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.updateManyByTag - ==>  Preparing: UPDATE `epsi_bid_record` set `won_id` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_qty` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_price` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, updated_by = ? WHERE `record_id` IN( ? , ? , ? , ? , ? , ? ) AND`tag` IN ( ? , ? , ? , ? , ? , ? )
14:49:52.220 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.updateManyByTag - ==> Parameters: 396(String), T000120DA1(String), 397(String), T000120DA1(String), 398(String), T000120DA1(String), 399(String), T000120DA1(String), 400(String), T000120DA1(String), 401(String), T000120DA1(String), 396(String), 100(Integer), 397(String), 1003(Integer), 398(String), 20(Integer), 399(String), 104(Integer), 400(String), 100(Integer), 401(String), 1(Integer), 396(String), 45.0(Double), 397(String), 30.0(Double), 398(String), 30.0(Double), 399(String), 30.0(Double), 400(String), 30.0(Double), 401(String), 10.0(Double), 1(Integer), 396(String), 397(String), 398(String), 399(String), 400(String), 401(String), LG LMX220|Grade AA(String), LG LMX220 (KIT)|Grade AA(String), LG LMX220MA|Grade AA(String), LG LMX320MA (DEMO)|Grade AA(String), LG MS550-BLK|Grade AA(String), LG Q710MS (SX)|Grade FG(String)
14:49:52.232 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.updateManyByTag - <==    Updates: 6
14:49:52.232 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.WonBidDao.insertOne - ==>  Preparing: INSERT INTO `epsi_won_bid` (`won_number`, `won_date`, `amount`, `bid_id`, `exchange_rate`, `created_by`, `updated_by`) VALUES (?, DATE_FORMAT(?, '%Y-%m-%d %H:%i:%s'), ?, ?, ?, ?, ?);
14:49:52.233 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.WonBidDao.insertOne - ==> Parameters: T000120DA1(String), 2020-12-19(String), 1000000.0(Double), 20201218001(String), 7.7537(Double), 1(Integer), 1(Integer)
14:49:52.244 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.WonBidDao.insertOne - <==    Updates: 1
14:49:52.260 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'createWonBid' parameter -1
14:49:52.260 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:49:53.326 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:49:53.327 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:49:53.334 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:49:53.408 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:49:53.408 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:49:53.414 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:49:53.421 [http-nio-34571-exec-2] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
14:49:53.422 [http-nio-34571-exec-2] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
14:49:53.428 [http-nio-34571-exec-2] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
14:49:53.440 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
14:49:53.440 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:49:53.811 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:49:53.811 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:49:53.817 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:49:53.818 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:49:53.818 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:49:53.819 [http-nio-34571-exec-6] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 117467
14:49:53.824 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:49:53.825 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:49:53.825 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:49:53.831 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:49:53.901 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
14:49:53.901 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
14:49:53.907 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
14:49:53.908 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
14:49:53.908 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
14:49:53.911 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:49:53.911 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:49:53.914 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
14:49:53.917 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:49:53.918 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:49:53.918 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
14:49:53.925 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
14:49:53.926 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:49:53.926 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:49:53.933 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:49:53.933 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:49:53.936 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:49:53.937 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:49:53.942 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:49:53.942 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:49:53.942 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
14:49:53.950 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
14:49:53.962 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:49:53.962 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:49:54.118 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:49:54.118 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:49:54.125 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:49:54.206 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:49:54.206 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201218001(String)
14:49:54.213 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:49:54.225 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:49:54.225 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:49:54.596 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:49:54.596 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:49:54.603 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:49:54.687 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:49:54.687 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201218001(String)
14:49:54.694 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:49:54.694 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:49:54.694 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201218001(String), 20(Integer)
14:49:54.701 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:49:54.702 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:49:54.702 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201218001(String)
14:49:54.708 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:49:54.720 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:49:54.720 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:49:57.099 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:49:57.099 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:49:57.106 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:49:57.188 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_payment_record epr LEFT JOIN epsi_won_bid ewb ON epr.won_number = ewb.won_number LEFT JOIN epsi_exchange_rate eer ON eer.exchange_rate = ewb.exchange_rate
14:49:57.188 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==> Parameters: 
14:49:57.194 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - <==      Total: 1
14:49:57.206 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyPaymentRecord' parameter -1
14:49:57.206 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:50:03.862 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:50:03.862 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:50:03.869 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:50:03.946 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:50:03.946 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:50:03.953 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:50:03.961 [http-nio-34571-exec-9] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
14:50:03.961 [http-nio-34571-exec-9] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
14:50:03.967 [http-nio-34571-exec-9] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
14:50:03.979 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
14:50:03.979 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:50:04.067 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:50:04.067 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:50:04.067 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:50:04.067 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:50:04.067 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:50:04.067 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:50:04.074 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:50:04.074 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:50:04.074 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:50:04.160 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:50:04.160 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:50:04.160 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
14:50:04.160 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:50:04.160 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:50:04.160 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
14:50:04.167 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:50:04.167 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
14:50:04.167 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:50:04.167 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:50:04.168 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:50:04.168 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
14:50:04.168 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
14:50:04.168 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
14:50:04.168 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
14:50:04.175 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
14:50:04.175 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
14:50:04.176 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
14:50:04.187 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:50:04.187 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:50:04.187 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:50:04.187 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:50:04.187 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:50:04.187 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:50:04.412 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:50:04.412 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:50:04.419 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:50:04.505 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==>  Preparing: select kdn_logistics_id as kdnLogisticsId, kdn_logistics_name as kdnLogisticsName from hkerp_kdn_logistics where disabled = 0;
14:50:04.505 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==> Parameters: 
14:50:04.512 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - <==      Total: 4
14:50:04.524 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getLogisticsList' parameter -1
14:50:04.525 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:50:04.529 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:50:04.529 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:50:04.536 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:50:04.621 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id`
14:50:04.621 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==> Parameters: 
14:50:04.627 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - <==      Total: 1
14:50:04.628 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - ==>  Preparing: SELECT ewb.`won_number` as number, ewb.`won_date` as date, ewb.`amount`, ewb.`warehouse`, ewb.`exchange_rate` as `exchangeRate`, ewb.is_shipped as `isShipped`, ev.`vendor_name` as vendor, ewb.bid_id as `bidId` FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id` LIMIT ?
14:50:04.628 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:50:04.634 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - <==      Total: 1
14:50:04.646 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getAllWonBid' parameter -1
14:50:04.646 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:50:08.568 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:50:08.569 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:50:08.576 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:50:08.660 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_payment_record epr LEFT JOIN epsi_won_bid ewb ON epr.won_number = ewb.won_number LEFT JOIN epsi_exchange_rate eer ON eer.exchange_rate = ewb.exchange_rate
14:50:08.660 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==> Parameters: 
14:50:08.667 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - <==      Total: 1
14:50:08.679 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyPaymentRecord' parameter -1
14:50:08.679 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:50:19.730 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
14:50:19.734 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
14:50:19.736 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
14:50:22.781 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.6.Final
14:50:22.781 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication using Java 14.0.1 on developer01deiMac.local with PID 4539 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
14:50:22.783 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
14:50:22.819 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
14:50:22.819 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
14:50:24.136 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
14:50:24.143 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
14:50:24.144 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
14:50:24.144 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.39]
14:50:24.200 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
14:50:24.200 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1380 ms
14:50:24.835 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
14:50:25.406 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
14:50:25.446 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
14:50:25.521 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/v2/api-docs', GET] with []
14:50:25.521 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources', GET] with []
14:50:25.521 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources/**', GET] with []
14:50:25.521 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/ui', GET] with []
14:50:25.521 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/security', GET] with []
14:50:25.521 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-ui.html/**', GET] with []
14:50:25.521 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/webjars/**', GET] with []
14:50:25.539 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@32c8e2f, org.springframework.security.web.context.SecurityContextPersistenceFilter@65eb1e10, org.springframework.security.web.header.HeaderWriterFilter@32f92f5e, org.springframework.web.filter.CorsFilter@3de2bd21, net.kintex.epsi.user.filter.JwtAuthenticationFilter@705e9741, org.springframework.security.web.authentication.logout.LogoutFilter@5198e59, net.kintex.epsi.user.filter.AuthenticationFilter@4f7d7ef, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@10b3c017, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@107c37bf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3902d143, org.springframework.security.web.access.ExceptionTranslationFilter@2183ff3b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@feca518]
14:50:25.632 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
14:50:25.658 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
14:50:25.733 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
14:50:25.734 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
14:50:25.734 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
14:50:25.734 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
14:50:25.871 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
14:50:25.884 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
14:50:25.885 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
14:50:25.892 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
14:50:25.913 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
14:50:26.134 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
14:50:26.139 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
14:50:26.140 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
14:50:26.171 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
14:50:26.172 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
14:50:26.207 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
14:50:26.234 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
14:50:26.235 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: deleteOneUsingPOST_1
14:50:26.266 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: getAllWonBidUsingGET_1
14:50:26.314 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.833 seconds (JVM running for 4.277)
14:50:26.827 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
14:50:26.827 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
14:50:26.829 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
14:50:26.847 [RMI TCP Connection(2)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
14:50:27.202 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Jakarta Mail version 1.6.5
14:50:27.230 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
14:50:27.231 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Tables of loaded providers
14:50:27.231 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
14:50:27.231 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
14:50:27.232 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
14:51:45.355 [http-nio-34571-exec-1] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 78207
14:51:45.461 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:51:45.605 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:51:45.628 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:51:45.767 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectCreatedAt - ==>  Preparing: SELECT * FROM epsi_bid WHERE created_at >= ? ORDER BY created_at DESC limit 1
14:51:45.769 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectCreatedAt - ==> Parameters: 2020-12-18(String)
14:51:45.777 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectCreatedAt - <==      Total: 0
14:51:45.796 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getNewBidNumber' parameter -1
14:51:45.796 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:52:04.245 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:04.246 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:04.253 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:04.368 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.checkDuplicate - ==>  Preparing: SELECT COUNT(*) FROM `epsi_bid` WHERE `bid_id` = ?
14:52:04.369 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.checkDuplicate - ==> Parameters: 20201218001(String)
14:52:04.376 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.checkDuplicate - <==      Total: 1
14:52:04.378 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.insertOne - ==>  Preparing: INSERT INTO `epsi_bid` (`bid_id`, `file_name`, `bid_date`, `vendor_id`, `currency`, `exchange_rate`, `created_by`, `updated_by`) values (?, ?, ?, ?, ?, ?, ?, ?)
14:52:04.383 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.insertOne - ==> Parameters: 20201218001(String), 20201211(String), 2020-12-18(String), 1(Integer), MXN(String), 0.4048(Double), 1(Integer), 1(Integer)
14:52:04.397 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.insertOne - <==    Updates: 1
14:52:04.408 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.checkDescription - ==>  Preparing: SELECT sku_text FROM epsi_vendor_sku WHERE sku_text in ( ? , ? , ? , ? , ? , ? )
14:52:04.409 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.checkDescription - ==> Parameters: LG Q710MS (SX)(String), LG LMX220(String), LG LMX220 (KIT)(String), LG LMX220MA(String), LG LMX320MA (DEMO)(String), LG MS550-BLK(String)
14:52:04.416 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.checkDescription - <==      Total: 6
14:52:04.421 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectDescription - ==>  Preparing: SELECT sku_id AS `key`, sku_text AS `value` FROM epsi_vendor_sku WHERE sku_text in ( ? , ? , ? , ? , ? , ? )
14:52:04.422 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectDescription - ==> Parameters: LG LMX220 (KIT)(String), LG LMX320MA (DEMO)(String), LG Q710MS (SX)(String), LG MS550-BLK(String), LG LMX220MA(String), LG LMX220(String)
14:52:04.430 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectDescription - <==      Total: 6
14:52:04.432 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidRecordDao.insertMany - ==>  Preparing: INSERT INTO `epsi_bid_record` (`bid_id`, `description`, `grade`, `sku_id`, `quantity`, `bid_price`, `hkd`, `tag`, `created_by`, `updated_by`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) , (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) , (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) , (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) , (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) , (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
14:52:04.435 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidRecordDao.insertMany - ==> Parameters: 20201218001(String), LG Q710MS (SX)(String), Grade FG(String), 144(String), 100(Integer), 45.0(Double), 18.0(Double), LG Q710MS (SX)|Grade FG(String), 1(Integer), 1(Integer), 20201218001(String), LG LMX220(String), Grade AA(String), 145(String), 1003(Integer), 30.0(Double), 12.0(Double), LG LMX220|Grade AA(String), 1(Integer), 1(Integer), 20201218001(String), LG LMX220 (KIT)(String), Grade AA(String), 146(String), 20(Integer), 30.0(Double), 12.0(Double), LG LMX220 (KIT)|Grade AA(String), 1(Integer), 1(Integer), 20201218001(String), LG LMX220MA(String), Grade AA(String), 147(String), 104(Integer), 30.0(Double), 12.0(Double), LG LMX220MA|Grade AA(String), 1(Integer), 1(Integer), 20201218001(String), LG LMX320MA (DEMO)(String), Grade AA(String), 148(String), 100(Integer), 30.0(Double), 12.0(Double), LG LMX320MA (DEMO)|Grade AA(String), 1(Integer), 1(Integer), 20201218001(String), LG MS550-BLK(String), Grade AA(String), 149(String), 1(Integer), 10.0(Double), 4.0(Double), LG MS550-BLK|Grade AA(String), 1(Integer), 1(Integer)
14:52:04.449 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidRecordDao.insertMany - <==    Updates: 6
14:52:04.467 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'addBid' parameter -1
14:52:04.467 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:52:05.905 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:05.906 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:05.914 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:06.039 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_bid` AS eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid AS ewb ON ewb.bid_id = eb.bid_id
14:52:06.041 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 
14:52:06.048 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:52:06.049 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==>  Preparing: SELECT eb.`bid_id` AS `id`, eb.`bid_date` AS `bidDate`, ev.`vendor_name` AS vendor, ewb.`won_number` AS wonNumber, ewb.`won_date` AS wonDate, ewb.`amount` AS amount FROM `epsi_bid` as eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid as ewb on ewb.bid_id = eb.bid_id order by eb.created_at desc LIMIT ?
14:52:06.050 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:52:06.058 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - <==      Total: 1
14:52:06.076 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyBid' parameter -1
14:52:06.076 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:52:07.559 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:07.559 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:07.567 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:07.651 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:52:07.654 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201218001(String)
14:52:07.662 [http-nio-34571-exec-4] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:52:07.675 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:07.675 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:07.676 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:52:07.677 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:52:07.683 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:07.779 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:52:07.780 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201218001(String)
14:52:07.787 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:52:07.788 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:52:07.789 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201218001(String), 20(Integer)
14:52:07.799 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:52:07.800 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:52:07.800 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201218001(String)
14:52:07.807 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:52:07.820 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:52:07.821 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:52:15.684 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:15.684 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:15.692 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:15.775 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==>  Preparing: SELECT LPAD(COUNT(*) + 1,4,0) FROM epsi_won_bid LEFT JOIN epsi_bid eb on epsi_won_bid.bid_id = eb.bid_id WHERE vendor_id = ? AND YEAR(epsi_won_bid.created_at) BETWEEN ? AND ? + 1
14:52:15.776 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - ==> Parameters: 1(String), 2020(String), 2020(String)
14:52:15.783 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.W.selectWonBidCountByYearVendorId - <==      Total: 1
14:52:15.784 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==>  Preparing: SELECT vendor_code FROM epsi_vendor WHERE vendor_id = ?
14:52:15.784 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - ==> Parameters: 1(String)
14:52:15.791 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.VendorDao.selectCodeById - <==      Total: 1
14:52:15.804 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getWonBidNumber' parameter -1
14:52:15.804 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:52:24.340 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:24.341 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:24.349 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:24.465 [http-nio-34571-exec-7] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==>  Preparing: select bid_date from epsi_bid eb left join epsi_won_bid ewb on eb.bid_id = ewb.bid_id where eb.bid_id = ?
14:52:24.466 [http-nio-34571-exec-7] DEBUG n.k.e.p.dao.BidDao.selectBidDate - ==> Parameters: 20201218001(String)
14:52:24.474 [http-nio-34571-exec-7] DEBUG n.k.e.p.dao.BidDao.selectBidDate - <==      Total: 1
14:52:24.475 [http-nio-34571-exec-7] DEBUG n.k.e.p.dao.BidDao.selectOne - ==>  Preparing: SELECT `bid_id` AS `id`, `file_name` AS `fileName`, `bid_date` AS `date`, JSON_OBJECT('id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code`) vendor, `currency`, `exchange_rate` as `exchangeRate` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` WHERE `bid_id` = ?
14:52:24.476 [http-nio-34571-exec-7] DEBUG n.k.e.p.dao.BidDao.selectOne - ==> Parameters: 20201218001(String)
14:52:24.483 [http-nio-34571-exec-7] DEBUG n.k.e.p.dao.BidDao.selectOne - <==      Total: 1
14:52:24.484 [http-nio-34571-exec-7] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==>  Preparing: SELECT record_id, bid_id, won_id, description, grade, sku_id, quantity, won_qty, bid_price, hkd, won_price, won_hkd, tag FROM `epsi_bid_record` WHERE `tag` IN ( ? , ? , ? , ? , ? , ? )
14:52:24.485 [http-nio-34571-exec-7] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - ==> Parameters: LG LMX220|Grade AA(String), LG LMX220 (KIT)|Grade AA(String), LG LMX220MA|Grade AA(String), LG LMX320MA (DEMO)|Grade AA(String), LG MS550-BLK|Grade AA(String), LG Q710MS (SX)|Grade FG(String)
14:52:24.493 [http-nio-34571-exec-7] DEBUG n.k.e.p.dao.BidRecordDao.selectByTag - <==      Total: 6
14:52:24.501 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.B.updateManyByTag - ==>  Preparing: UPDATE `epsi_bid_record` set `won_id` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_qty` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, `won_price` = CASE `record_id` WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? END, updated_by = ? WHERE `record_id` IN( ? , ? , ? , ? , ? , ? ) AND`tag` IN ( ? , ? , ? , ? , ? , ? )
14:52:24.506 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.B.updateManyByTag - ==> Parameters: 402(String), T000120DA1(String), 403(String), T000120DA1(String), 404(String), T000120DA1(String), 405(String), T000120DA1(String), 406(String), T000120DA1(String), 407(String), T000120DA1(String), 402(String), 100(Integer), 403(String), 1003(Integer), 404(String), 20(Integer), 405(String), 104(Integer), 406(String), 100(Integer), 407(String), 1(Integer), 402(String), 45.0(Double), 403(String), 30.0(Double), 404(String), 30.0(Double), 405(String), 30.0(Double), 406(String), 30.0(Double), 407(String), 10.0(Double), 1(Integer), 402(String), 403(String), 404(String), 405(String), 406(String), 407(String), LG LMX220|Grade AA(String), LG LMX220 (KIT)|Grade AA(String), LG LMX220MA|Grade AA(String), LG LMX320MA (DEMO)|Grade AA(String), LG MS550-BLK|Grade AA(String), LG Q710MS (SX)|Grade FG(String)
14:52:24.519 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.B.updateManyByTag - <==    Updates: 6
14:52:24.519 [http-nio-34571-exec-7] DEBUG n.k.e.p.dao.WonBidDao.insertOne - ==>  Preparing: INSERT INTO `epsi_won_bid` (`won_number`, `won_date`, `amount`, `bid_id`, `exchange_rate`, `created_by`, `updated_by`) VALUES (?, DATE_FORMAT(?, '%Y-%m-%d %H:%i:%s'), ?, ?, ?, ?, ?);
14:52:24.520 [http-nio-34571-exec-7] DEBUG n.k.e.p.dao.WonBidDao.insertOne - ==> Parameters: T000120DA1(String), 2020-12-18(String), 4156.0(Double), 20201218001(String), 0.4048(Double), 1(Integer), 1(Integer)
14:52:24.533 [http-nio-34571-exec-7] DEBUG n.k.e.p.dao.WonBidDao.insertOne - <==    Updates: 1
14:52:24.536 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.P.insertSelective - ==>  Preparing: INSERT INTO epsi_payment_record ( won_number,amount_payable,`operator` ) VALUES( ?,?,? )
14:52:24.537 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.P.insertSelective - ==> Parameters: T000120DA1(String), 4156.0(Double), 1(Integer)
14:52:24.549 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.P.insertSelective - <==    Updates: 1
14:52:24.565 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'createWonBid' parameter -1
14:52:24.565 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:52:25.492 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:25.492 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:25.499 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:25.577 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:25.578 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:25.585 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:25.598 [http-nio-34571-exec-8] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
14:52:25.599 [http-nio-34571-exec-8] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
14:52:25.606 [http-nio-34571-exec-8] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
14:52:25.620 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
14:52:25.620 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:52:25.703 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:25.703 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:25.704 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:25.704 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:25.711 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:25.711 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:25.712 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:25.714 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:25.719 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:25.806 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:52:25.806 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:52:25.811 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:52:25.811 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:52:25.813 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:52:25.814 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:52:25.814 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
14:52:25.821 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:52:25.821 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:52:25.821 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
14:52:25.828 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
14:52:25.837 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
14:52:25.842 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:52:25.842 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:52:25.848 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
14:52:25.849 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
14:52:25.855 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
14:52:25.855 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:52:25.856 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:52:25.857 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
14:52:25.858 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
14:52:25.867 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
14:52:25.880 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:52:25.880 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:52:26.160 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:26.161 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:26.168 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:26.253 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:52:26.254 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201218001(String)
14:52:26.261 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:52:26.273 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:52:26.273 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:52:26.322 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:26.323 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:26.330 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:26.420 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:52:26.421 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201218001(String)
14:52:26.428 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:52:26.428 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:52:26.429 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201218001(String), 20(Integer)
14:52:26.448 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:52:26.449 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:52:26.449 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201218001(String)
14:52:26.455 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:52:26.468 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:52:26.468 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:52:35.474 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:35.475 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:35.483 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:35.582 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:52:35.583 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201218001(String)
14:52:35.589 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:52:35.590 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:52:35.590 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201218001(String), 20(Integer)
14:52:35.598 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:52:35.598 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:52:35.598 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201218001(String)
14:52:35.605 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:52:35.617 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:52:35.617 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:52:39.115 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:39.115 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:39.122 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:39.200 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:39.201 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:39.207 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:39.215 [http-nio-34571-exec-5] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
14:52:39.215 [http-nio-34571-exec-5] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
14:52:39.222 [http-nio-34571-exec-5] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
14:52:39.234 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
14:52:39.234 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:52:39.330 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:39.330 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:39.330 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:39.330 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:39.337 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:39.340 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:39.340 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:39.340 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:39.347 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:39.430 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:52:39.431 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:52:39.435 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:52:39.436 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:52:39.437 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:52:39.438 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:52:39.438 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
14:52:39.443 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
14:52:39.443 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
14:52:39.447 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:52:39.447 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:52:39.447 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
14:52:39.448 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
14:52:39.454 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
14:52:39.455 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
14:52:39.455 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
14:52:39.459 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
14:52:39.460 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:52:39.460 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:52:39.466 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
14:52:39.477 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:52:39.477 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:52:39.484 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:52:39.485 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:52:39.968 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:39.968 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:39.978 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:40.068 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:52:40.068 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201218001(String)
14:52:40.075 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:52:40.076 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:52:40.079 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:52:40.085 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:52:40.097 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:52:40.097 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:52:40.176 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:52:40.177 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201218001(String)
14:52:40.187 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:52:40.187 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:52:40.188 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201218001(String), 20(Integer)
14:52:40.199 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:52:40.199 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:52:40.200 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201218001(String)
14:52:40.209 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:52:40.228 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:52:40.228 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:55:56.760 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
14:55:56.764 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
14:55:56.767 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
14:55:59.411 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.6.Final
14:55:59.411 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication using Java 14.0.1 on developer01deiMac.local with PID 4665 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
14:55:59.413 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
14:55:59.450 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
14:55:59.450 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
14:56:00.808 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
14:56:00.824 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
14:56:00.825 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
14:56:00.825 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.39]
14:56:00.879 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
14:56:00.879 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1429 ms
14:56:01.490 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
14:56:02.015 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
14:56:02.065 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
14:56:02.138 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/v2/api-docs', GET] with []
14:56:02.138 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources', GET] with []
14:56:02.138 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-resources/**', GET] with []
14:56:02.138 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/ui', GET] with []
14:56:02.138 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/configuration/security', GET] with []
14:56:02.138 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/swagger-ui.html/**', GET] with []
14:56:02.138 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Ant [pattern='/webjars/**', GET] with []
14:56:02.156 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2bbe6541, org.springframework.security.web.context.SecurityContextPersistenceFilter@1b74211, org.springframework.security.web.header.HeaderWriterFilter@3aed2455, org.springframework.web.filter.CorsFilter@2f0febaf, net.kintex.epsi.user.filter.JwtAuthenticationFilter@4c480ea1, org.springframework.security.web.authentication.logout.LogoutFilter@64034e1, net.kintex.epsi.user.filter.AuthenticationFilter@7f1f786d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@53bd91af, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@746a07f2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@23bec5e9, org.springframework.security.web.access.ExceptionTranslationFilter@25eb0202, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4f4f3843]
14:56:02.228 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
14:56:02.251 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
14:56:02.304 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
14:56:02.304 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
14:56:02.304 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
14:56:02.305 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
14:56:02.442 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
14:56:02.456 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
14:56:02.457 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
14:56:02.463 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
14:56:02.483 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
14:56:02.676 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
14:56:02.682 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
14:56:02.683 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
14:56:02.712 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
14:56:02.713 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
14:56:02.746 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
14:56:02.783 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
14:56:02.784 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: deleteOneUsingPOST_1
14:56:02.812 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: getAllWonBidUsingGET_1
14:56:02.847 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.747 seconds (JVM running for 4.228)
14:56:03.101 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
14:56:03.101 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
14:56:03.102 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
14:56:03.122 [RMI TCP Connection(3)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
14:56:03.458 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Jakarta Mail version 1.6.5
14:56:03.481 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
14:56:03.482 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Tables of loaded providers
14:56:03.482 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
14:56:03.482 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
14:56:03.483 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
14:56:06.572 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:56:06.713 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:56:06.738 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:56:06.847 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:56:06.847 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:56:06.857 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:56:06.892 [http-nio-34571-exec-1] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
14:56:06.893 [http-nio-34571-exec-1] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
14:56:06.903 [http-nio-34571-exec-1] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
14:56:06.927 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
14:56:06.927 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:56:07.011 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:56:07.012 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:56:07.022 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:56:07.022 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:56:07.023 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:56:07.033 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:56:07.033 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:56:07.034 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:56:07.044 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:56:07.165 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:56:07.165 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
14:56:07.167 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
14:56:07.167 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:56:07.177 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:56:07.178 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
14:56:07.179 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:56:07.180 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
14:56:07.181 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
14:56:07.183 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
14:56:07.207 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
14:56:07.216 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
14:56:07.242 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:56:07.242 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:56:07.242 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:56:07.242 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:56:07.247 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:56:07.247 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:56:07.258 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:56:07.259 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:56:07.260 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
14:56:07.277 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
14:56:07.296 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:56:07.296 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:56:07.525 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:56:07.526 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:56:07.536 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:56:07.625 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:56:07.630 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201218001(String)
14:56:07.641 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:56:07.652 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:56:07.652 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:56:07.660 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:56:07.660 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:56:07.661 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:56:07.762 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:56:07.763 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201218001(String)
14:56:07.771 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:56:07.772 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:56:07.773 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201218001(String), 20(Integer)
14:56:07.783 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:56:07.784 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:56:07.784 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201218001(String)
14:56:07.791 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:56:07.806 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:56:07.806 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:56:24.487 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:56:24.488 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:56:24.496 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:56:24.569 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:56:24.570 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:56:24.578 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:56:24.586 [http-nio-34571-exec-7] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
14:56:24.587 [http-nio-34571-exec-7] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
14:56:24.594 [http-nio-34571-exec-7] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
14:56:24.608 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
14:56:24.608 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:56:25.069 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:56:25.069 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:56:25.069 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:56:25.069 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:56:25.077 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:56:25.079 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:56:25.160 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:56:25.161 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
14:56:25.161 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:56:25.161 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
14:56:25.169 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:56:25.169 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:56:25.169 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
14:56:25.174 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
14:56:25.175 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
14:56:25.175 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
14:56:25.180 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
14:56:25.185 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
14:56:25.194 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:56:25.194 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:56:25.202 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:56:25.202 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:56:25.639 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:56:25.639 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:56:25.649 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:56:25.741 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_payment_record epr LEFT JOIN epsi_won_bid ewb ON epr.won_number = ewb.won_number LEFT JOIN epsi_exchange_rate eer ON eer.exchange_rate = ewb.exchange_rate
14:56:25.742 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==> Parameters: 
14:56:25.751 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - <==      Total: 1
14:56:25.752 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.P.selectOneOrMany - ==>  Preparing: SELECT epr.won_number, epr.pay_date , epr.amount_payable, epr.use_balance, epr.amount_paid, eer.currency_symbol, eer.exchange_rate FROM epsi_payment_record epr LEFT JOIN epsi_won_bid ewb ON epr.won_number = ewb.won_number LEFT JOIN epsi_exchange_rate eer ON eer.exchange_rate = ewb.exchange_rate LIMIT ?
14:56:25.753 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.P.selectOneOrMany - ==> Parameters: 20(Integer)
14:56:25.762 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.P.selectOneOrMany - <==      Total: 1
14:56:25.781 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyPaymentRecord' parameter -1
14:56:25.781 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:56:25.858 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:56:25.859 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:56:25.868 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:56:25.953 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:56:25.953 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:56:25.967 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:56:25.967 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:56:25.968 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
14:56:25.978 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
14:56:25.995 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:56:25.995 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:56:36.516 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:56:36.516 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:56:36.527 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:56:36.619 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_bid` AS eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid AS ewb ON ewb.bid_id = eb.bid_id
14:56:36.619 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 
14:56:36.629 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:56:36.630 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==>  Preparing: SELECT eb.`bid_id` AS `id`, eb.`bid_date` AS `bidDate`, ev.`vendor_name` AS vendor, ewb.`won_number` AS wonNumber, ewb.`won_date` AS wonDate, ewb.`amount` AS amount FROM `epsi_bid` as eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid as ewb on ewb.bid_id = eb.bid_id order by eb.created_at desc LIMIT ?
14:56:36.630 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:56:36.640 [http-nio-34571-exec-3] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - <==      Total: 1
14:56:36.658 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyBid' parameter -1
14:56:36.658 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:56:38.966 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:56:38.967 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:56:38.977 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:56:39.061 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:56:39.062 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201218001(String)
14:56:39.072 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:56:39.090 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:56:39.090 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:56:39.433 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:56:39.434 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:56:39.443 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:56:39.531 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:56:39.532 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201218001(String)
14:56:39.541 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:56:39.541 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:56:39.542 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201218001(String), 20(Integer)
14:56:39.552 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:56:39.552 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:56:39.553 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201218001(String)
14:56:39.561 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:56:39.578 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:56:39.578 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:56:45.120 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:56:45.121 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:56:45.130 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:56:45.216 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_payment_record epr LEFT JOIN epsi_won_bid ewb ON epr.won_number = ewb.won_number LEFT JOIN epsi_exchange_rate eer ON eer.exchange_rate = ewb.exchange_rate
14:56:45.216 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==> Parameters: 
14:56:45.225 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - <==      Total: 1
14:56:45.225 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.P.selectOneOrMany - ==>  Preparing: SELECT epr.won_number, epr.pay_date , epr.amount_payable, epr.use_balance, epr.amount_paid, eer.currency_symbol, eer.exchange_rate FROM epsi_payment_record epr LEFT JOIN epsi_won_bid ewb ON epr.won_number = ewb.won_number LEFT JOIN epsi_exchange_rate eer ON eer.exchange_rate = ewb.exchange_rate LIMIT ?
14:56:45.225 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.P.selectOneOrMany - ==> Parameters: 20(Integer)
14:56:45.235 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.P.selectOneOrMany - <==      Total: 1
14:56:45.251 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyPaymentRecord' parameter -1
14:56:45.251 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:57:19.076 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:57:19.076 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:57:19.085 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:57:19.182 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.P.updateByPrimaryKeySelective - ==>  Preparing: UPDATE epsi_payment_record SET pay_date = ?,use_balance = ?,amount_paid = ?,`operator` = ? WHERE won_number = ?
14:57:19.185 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.P.updateByPrimaryKeySelective - ==> Parameters: 2020-12-19(String), 0.0(Double), 4156.0(Double), 1(Integer), T000120DA1(String)
14:57:19.201 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.P.updateByPrimaryKeySelective - <==    Updates: 1
14:57:19.221 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'payWon' parameter -1
14:57:19.222 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:57:22.926 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:57:22.926 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:57:22.936 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:57:23.010 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:57:23.010 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:57:23.019 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:57:23.029 [http-nio-34571-exec-7] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
14:57:23.029 [http-nio-34571-exec-7] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
14:57:23.039 [http-nio-34571-exec-7] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
14:57:23.055 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
14:57:23.055 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:57:23.440 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:57:23.440 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:57:23.441 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:57:23.441 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:57:23.448 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:57:23.450 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:57:23.454 [http-nio-34571-exec-10] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 76214
14:57:23.455 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:57:23.455 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:57:23.464 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:57:23.533 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:57:23.533 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:57:23.534 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:57:23.534 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:57:23.542 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:57:23.542 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:57:23.542 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
14:57:23.543 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:57:23.543 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:57:23.543 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
14:57:23.550 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
14:57:23.552 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
14:57:23.564 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:57:23.564 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:57:23.569 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:57:23.569 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:57:23.571 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
14:57:23.571 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
14:57:23.578 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
14:57:23.579 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
14:57:23.579 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
14:57:23.587 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
14:57:23.600 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:57:23.600 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:57:23.896 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:57:23.897 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:57:23.905 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:57:23.989 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_payment_record epr LEFT JOIN epsi_won_bid ewb ON epr.won_number = ewb.won_number LEFT JOIN epsi_exchange_rate eer ON eer.exchange_rate = ewb.exchange_rate
14:57:23.989 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==> Parameters: 
14:57:23.997 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - <==      Total: 1
14:57:23.997 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.P.selectOneOrMany - ==>  Preparing: SELECT epr.won_number, epr.pay_date , epr.amount_payable, epr.use_balance, epr.amount_paid, eer.currency_symbol, eer.exchange_rate FROM epsi_payment_record epr LEFT JOIN epsi_won_bid ewb ON epr.won_number = ewb.won_number LEFT JOIN epsi_exchange_rate eer ON eer.exchange_rate = ewb.exchange_rate LIMIT ?
14:57:23.997 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.P.selectOneOrMany - ==> Parameters: 20(Integer)
14:57:24.005 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.P.selectOneOrMany - <==      Total: 1
14:57:24.018 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyPaymentRecord' parameter -1
14:57:24.018 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:57:26.496 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:57:26.496 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:57:26.504 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:57:26.589 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_payment_record epr LEFT JOIN epsi_won_bid ewb ON epr.won_number = ewb.won_number LEFT JOIN epsi_exchange_rate eer ON eer.exchange_rate = ewb.exchange_rate
14:57:26.589 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - ==> Parameters: 
14:57:26.596 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.P.selectOneOrMany_COUNT - <==      Total: 1
14:57:26.597 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.P.selectOneOrMany - ==>  Preparing: SELECT epr.won_number, epr.pay_date , epr.amount_payable, epr.use_balance, epr.amount_paid, eer.currency_symbol, eer.exchange_rate FROM epsi_payment_record epr LEFT JOIN epsi_won_bid ewb ON epr.won_number = ewb.won_number LEFT JOIN epsi_exchange_rate eer ON eer.exchange_rate = ewb.exchange_rate LIMIT ?
14:57:26.597 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.P.selectOneOrMany - ==> Parameters: 20(Integer)
14:57:26.604 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.P.selectOneOrMany - <==      Total: 1
14:57:26.618 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyPaymentRecord' parameter -1
14:57:26.618 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:57:30.749 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:57:30.750 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:57:30.757 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:57:30.839 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==>  Preparing: select kdn_logistics_id as kdnLogisticsId, kdn_logistics_name as kdnLogisticsName from hkerp_kdn_logistics where disabled = 0;
14:57:30.839 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==> Parameters: 
14:57:30.846 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - <==      Total: 4
14:57:30.860 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getLogisticsList' parameter -1
14:57:30.860 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:57:31.140 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:57:31.140 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:57:31.148 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:57:31.235 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id`
14:57:31.236 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==> Parameters: 
14:57:31.243 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - <==      Total: 1
14:57:31.243 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - ==>  Preparing: SELECT ewb.`won_number` as number, ewb.`won_date` as date, ewb.`amount`, ewb.`warehouse`, ewb.`exchange_rate` as `exchangeRate`, ewb.is_shipped as `isShipped`, ev.`vendor_name` as vendor, ewb.bid_id as `bidId` FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id` LIMIT ?
14:57:31.244 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:57:31.251 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - <==      Total: 1
14:57:31.264 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getAllWonBid' parameter -1
14:57:31.265 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:57:33.058 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:57:33.058 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:57:33.066 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:57:33.147 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:57:33.148 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201218001(String)
14:57:33.155 [http-nio-34571-exec-5] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:57:33.168 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:57:33.168 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:57:33.200 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:57:33.200 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:57:33.207 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:57:33.292 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:57:33.293 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201218001(String)
14:57:33.299 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:57:33.300 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:57:33.300 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201218001(String), 20(Integer)
14:57:33.309 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:57:33.309 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:57:33.309 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201218001(String)
14:57:33.316 [http-nio-34571-exec-6] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:57:33.329 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:57:33.329 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:57:38.580 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:57:38.581 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:57:38.588 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:57:38.669 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==>  Preparing: select kdn_logistics_id as kdnLogisticsId, kdn_logistics_name as kdnLogisticsName from hkerp_kdn_logistics where disabled = 0;
14:57:38.669 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==> Parameters: 
14:57:38.676 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - <==      Total: 4
14:57:38.689 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getLogisticsList' parameter -1
14:57:38.689 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:57:38.996 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:57:38.997 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:57:39.004 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:57:39.087 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id`
14:57:39.087 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==> Parameters: 
14:57:39.094 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - <==      Total: 1
14:57:39.094 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - ==>  Preparing: SELECT ewb.`won_number` as number, ewb.`won_date` as date, ewb.`amount`, ewb.`warehouse`, ewb.`exchange_rate` as `exchangeRate`, ewb.is_shipped as `isShipped`, ev.`vendor_name` as vendor, ewb.bid_id as `bidId` FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id` LIMIT ?
14:57:39.094 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:57:39.101 [http-nio-34571-exec-8] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - <==      Total: 1
14:57:39.114 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getAllWonBid' parameter -1
14:57:39.114 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:57:40.816 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:57:40.817 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:57:40.824 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:57:40.907 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_bid` AS eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid AS ewb ON ewb.bid_id = eb.bid_id
14:57:40.907 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 
14:57:40.914 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:57:40.914 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==>  Preparing: SELECT eb.`bid_id` AS `id`, eb.`bid_date` AS `bidDate`, ev.`vendor_name` AS vendor, ewb.`won_number` AS wonNumber, ewb.`won_date` AS wonDate, ewb.`amount` AS amount FROM `epsi_bid` as eb LEFT JOIN `epsi_vendor` AS ev ON ev.`vendor_id` = eb.vendor_id LEFT JOIN epsi_won_bid as ewb on ewb.bid_id = eb.bid_id order by eb.created_at desc LIMIT ?
14:57:40.915 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:57:40.921 [http-nio-34571-exec-9] DEBUG n.k.e.p.dao.BidDao.selectOneOrMany - <==      Total: 1
14:57:40.934 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyBid' parameter -1
14:57:40.934 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:57:42.616 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:57:42.616 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:57:42.624 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:57:42.705 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==>  Preparing: select kdn_logistics_id as kdnLogisticsId, kdn_logistics_name as kdnLogisticsName from hkerp_kdn_logistics where disabled = 0;
14:57:42.705 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==> Parameters: 
14:57:42.712 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - <==      Total: 4
14:57:42.725 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getLogisticsList' parameter -1
14:57:42.725 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:57:43.030 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:57:43.031 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:57:43.038 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:57:43.121 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id`
14:57:43.121 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==> Parameters: 
14:57:43.128 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - <==      Total: 1
14:57:43.128 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - ==>  Preparing: SELECT ewb.`won_number` as number, ewb.`won_date` as date, ewb.`amount`, ewb.`warehouse`, ewb.`exchange_rate` as `exchangeRate`, ewb.is_shipped as `isShipped`, ev.`vendor_name` as vendor, ewb.bid_id as `bidId` FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id` LIMIT ?
14:57:43.128 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:57:43.135 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - <==      Total: 1
14:57:43.148 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getAllWonBid' parameter -1
14:57:43.148 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:57:44.502 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:57:44.502 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:57:44.509 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:57:44.591 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==>  Preparing: select kdn_logistics_id as kdnLogisticsId, kdn_logistics_name as kdnLogisticsName from hkerp_kdn_logistics where disabled = 0;
14:57:44.591 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==> Parameters: 
14:57:44.609 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - <==      Total: 4
14:57:44.622 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getLogisticsList' parameter -1
14:57:44.622 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:58:21.978 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:58:21.978 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:58:21.985 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:58:22.068 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.WonBidDao.checkIsShipped - ==>  Preparing: SELECT COUNT(*) from epsi_won_bid LEFT JOIN hkerp_logistics hl on epsi_won_bid.won_number = hl.won_number where epsi_won_bid.won_number = ? AND is_shipped = 1 AND hl.disabled = 0
14:58:22.069 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.WonBidDao.checkIsShipped - ==> Parameters: T000120DA1(String)
14:58:22.076 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.WonBidDao.checkIsShipped - <==      Total: 1
14:58:22.076 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.WonBidDao.updateShip - ==>  Preparing: UPDATE epsi_won_bid SET is_shipped=1 WHERE is_shipped = 0 AND won_number = ?
14:58:22.077 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.WonBidDao.updateShip - ==> Parameters: T000120DA1(String)
14:58:22.089 [http-nio-34571-exec-2] DEBUG n.k.e.p.dao.WonBidDao.updateShip - <==    Updates: 1
14:58:22.092 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.L.insertSelective - ==>  Preparing: INSERT INTO hkerp_logistics ( logistics_id,won_number,logistics_number,kdn_logistics_id,disabled ) VALUES( ?,?,?,?,? )
14:58:22.097 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.L.insertSelective - ==> Parameters: null, T000120DA1(String), 772291747039(String), 72(Integer), 0(Integer)
14:58:22.109 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.L.insertSelective - <==    Updates: 1
14:58:22.112 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.L.getKdnLogisticsByWonNumber - ==>  Preparing: select hkerp_logistics.logistics_number as `logisticsNumber`, hkl.kdn_logistics_code as `kdnLogisticsCode` from hkerp_logistics left join hkerp_kdn_logistics hkl on hkerp_logistics.kdn_logistics_id = hkl.kdn_logistics_id where hkerp_logistics.won_number = ?
14:58:22.112 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.L.getKdnLogisticsByWonNumber - ==> Parameters: T000120DA1(String)
14:58:22.119 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.L.getKdnLogisticsByWonNumber - <==      Total: 1
14:58:25.384 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.L.selectShipperNameByCode - ==>  Preparing: select kdn_logistics_name from hkerp_kdn_logistics where kdn_logistics_code = ?
14:58:25.384 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.L.selectShipperNameByCode - ==> Parameters: FEDEX_GJ(String)
14:58:25.391 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.L.selectShipperNameByCode - <==      Total: 1
14:58:25.407 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'ship' parameter -1
14:58:25.407 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:58:25.780 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:58:25.780 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:58:25.787 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:58:25.827 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:58:25.827 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:58:25.834 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:58:25.868 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==>  Preparing: select kdn_logistics_id as kdnLogisticsId, kdn_logistics_name as kdnLogisticsName from hkerp_kdn_logistics where disabled = 0;
14:58:25.868 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==> Parameters: 
14:58:25.874 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - <==      Total: 4
14:58:25.887 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getLogisticsList' parameter -1
14:58:25.887 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:58:25.917 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id`
14:58:25.917 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==> Parameters: 
14:58:25.924 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - <==      Total: 1
14:58:25.924 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - ==>  Preparing: SELECT ewb.`won_number` as number, ewb.`won_date` as date, ewb.`amount`, ewb.`warehouse`, ewb.`exchange_rate` as `exchangeRate`, ewb.is_shipped as `isShipped`, ev.`vendor_name` as vendor, ewb.bid_id as `bidId` FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id` LIMIT ?
14:58:25.924 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:58:25.931 [http-nio-34571-exec-5] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - <==      Total: 1
14:58:25.944 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getAllWonBid' parameter -1
14:58:25.944 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:58:39.765 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:58:39.766 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:58:39.773 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:58:39.855 [http-nio-34571-exec-6] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:58:39.856 [http-nio-34571-exec-6] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201218001(String)
14:58:39.863 [http-nio-34571-exec-6] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:58:39.876 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:58:39.876 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:58:40.228 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:58:40.228 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:58:40.235 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:58:40.320 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:58:40.320 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201218001(String)
14:58:40.327 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:58:40.327 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:58:40.328 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201218001(String), 20(Integer)
14:58:40.335 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:58:40.335 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:58:40.336 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201218001(String)
14:58:40.342 [http-nio-34571-exec-7] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:58:40.355 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:58:40.356 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:58:42.256 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:58:42.256 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:58:42.263 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:58:42.344 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==>  Preparing: select kdn_logistics_id as kdnLogisticsId, kdn_logistics_name as kdnLogisticsName from hkerp_kdn_logistics where disabled = 0;
14:58:42.344 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - ==> Parameters: 
14:58:42.351 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.L.getLogisticsIdCodeList - <==      Total: 4
14:58:42.364 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getLogisticsList' parameter -1
14:58:42.364 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:58:42.698 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:58:42.698 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:58:42.705 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:58:42.788 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id`
14:58:42.788 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - ==> Parameters: 
14:58:42.794 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.W.selectOneOrMany_COUNT - <==      Total: 1
14:58:42.795 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - ==>  Preparing: SELECT ewb.`won_number` as number, ewb.`won_date` as date, ewb.`amount`, ewb.`warehouse`, ewb.`exchange_rate` as `exchangeRate`, ewb.is_shipped as `isShipped`, ev.`vendor_name` as vendor, ewb.bid_id as `bidId` FROM `epsi_won_bid` ewb LEFT JOIN `epsi_bid` eb ON eb.`bid_id` = ewb.`bid_id` LEFT JOIN `epsi_vendor` ev ON ev.`vendor_id` = eb.`vendor_id` LIMIT ?
14:58:42.795 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:58:42.802 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.WonBidDao.selectOneOrMany - <==      Total: 1
14:58:42.814 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getAllWonBid' parameter -1
14:58:42.814 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:58:43.878 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:58:43.879 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:58:43.886 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:58:43.966 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.L.getKdnLogisticsByWonNumber - ==>  Preparing: select hkerp_logistics.logistics_number as `logisticsNumber`, hkl.kdn_logistics_code as `kdnLogisticsCode` from hkerp_logistics left join hkerp_kdn_logistics hkl on hkerp_logistics.kdn_logistics_id = hkl.kdn_logistics_id where hkerp_logistics.won_number = ?
14:58:43.966 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.L.getKdnLogisticsByWonNumber - ==> Parameters: T000120DA1(String)
14:58:43.973 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.L.getKdnLogisticsByWonNumber - <==      Total: 1
14:58:47.037 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.L.selectShipperNameByCode - ==>  Preparing: select kdn_logistics_name from hkerp_kdn_logistics where kdn_logistics_code = ?
14:58:47.037 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.L.selectShipperNameByCode - ==> Parameters: FEDEX_GJ(String)
14:58:47.044 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.L.selectShipperNameByCode - <==      Total: 1
14:58:47.058 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getLogisticsByWonNumber' parameter -1
14:58:47.058 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:58:56.332 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:58:56.332 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:58:56.340 [http-nio-34571-exec-1] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:58:56.421 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
14:58:56.421 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201218001(String)
14:58:56.429 [http-nio-34571-exec-1] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
14:58:56.441 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
14:58:56.442 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:58:56.452 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
14:58:56.452 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
14:58:56.459 [http-nio-34571-exec-3] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
14:58:56.543 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
14:58:56.544 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201218001(String)
14:58:56.551 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
14:58:56.551 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
14:58:56.552 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201218001(String), 20(Integer)
14:58:56.559 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
14:58:56.559 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
14:58:56.560 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201218001(String)
14:58:56.566 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
14:58:56.579 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
14:58:56.579 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
15:06:47.157 [http-nio-34571-exec-2] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 470578
15:06:47.166 [http-nio-34571-exec-2] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 563602
15:06:47.175 [http-nio-34571-exec-2] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 563607
15:06:47.252 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
15:06:47.252 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
15:06:47.259 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
15:06:47.334 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
15:06:47.334 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
15:06:47.341 [http-nio-34571-exec-2] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
15:06:47.349 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item` AS `item`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag` AS `description`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`attribute` ->> '$.color' AS `color`, esku.`attribute` ->> '$.capacity' AS `capacity`, esku.`attribute` ->> '$.model' AS `modelNumber`, esku.`attribute` ->> '$.carrier' AS `carrier`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id AS `saleOrderId`, ec.`name` AS `clientName`, eb.`currency` AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(1) FROM epsi_goods WHERE `won_bid_number` = ebr.`won_id` AND `sku_id` = esku.`id` AND `price` IS NOT NULL AND `price` != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
15:06:47.364 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==> Parameters: T000120DA1(String)
15:06:47.372 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectManyByWonbidId - <==      Total: 0
15:06:47.385 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getSalesList' parameter -1
15:06:47.385 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
15:06:50.759 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
15:06:50.759 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
15:06:50.766 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
15:06:50.841 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
15:06:50.841 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
15:06:50.848 [http-nio-34571-exec-4] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
15:06:50.855 [http-nio-34571-exec-4] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_id` = ?
15:06:50.856 [http-nio-34571-exec-4] DEBUG n.k.e.user.dao.UserDao.selectOneById - ==> Parameters: 1(Integer)
15:06:50.862 [http-nio-34571-exec-4] DEBUG n.k.e.user.dao.UserDao.selectOneById - <==      Total: 1
15:06:50.875 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getUser' parameter -1
15:06:50.875 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
15:06:50.948 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
15:06:50.948 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
15:06:50.955 [http-nio-34571-exec-5] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
15:06:50.955 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
15:06:50.955 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
15:06:50.962 [http-nio-34571-exec-7] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
15:06:50.962 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
15:06:50.963 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
15:06:50.969 [http-nio-34571-exec-6] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
15:06:51.039 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
15:06:51.039 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
15:06:51.047 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
15:06:51.047 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
15:06:51.048 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 100(Integer)
15:06:51.055 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 100
15:06:51.068 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
15:06:51.068 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
15:06:51.074 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_vendor`
15:06:51.075 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - ==> Parameters: 
15:06:51.081 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor_COUNT - <==      Total: 1
15:06:51.082 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor` order by vendor_code asc LIMIT ?
15:06:51.082 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 100(Integer)
15:06:51.089 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 48
15:06:51.091 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
15:06:51.092 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
15:06:51.102 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
15:06:51.102 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
15:06:51.103 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
15:06:51.103 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`, `currency_code`, `currency_name`, `currency_symbol`, `exchange_rate`, `disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
15:06:51.104 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 100(Integer)
15:06:51.115 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 100
15:06:51.133 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
15:06:51.133 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
15:06:51.417 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
15:06:51.418 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
15:06:51.428 [http-nio-34571-exec-8] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
15:06:51.518 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==>  Preparing: SELECT `b`.`bid_id` AS `id`, `b`.`bid_date` AS `date`, `b`.`exchange_rate` AS `exchangeRate`, JSON_OBJECT( 'id', v.`vendor_id`, 'name', v.`vendor_name`, 'code', v.`vendor_code` ) AS `vendor`, `b`.`currency` as `currencyCode`, JSON_OBJECT( 'id', `w`.`won_id`, 'number', `w`.`won_number`, 'date', `w`.`won_date`, 'amount', `w`.`amount`, 'virtualWarehouse', `w`.`stage`, 'isArrival', har.arrival_order_number, 'isShipped', hl.logistics_id, 'isPayment', pay_date ) AS `won` FROM `epsi_bid` AS `b` LEFT JOIN `epsi_vendor` AS `v` ON `b`.`vendor_id` = `v`.`vendor_id` LEFT JOIN `epsi_won_bid` AS `w` ON `b`.`bid_id` = `w`.`bid_id` LEFT JOIN hkerp_arrival_record har ON arrival_order_number = won_number LEFT JOIN hkerp_logistics hl ON w.won_number = hl.won_number LEFT JOIN epsi_payment_record epr on w.won_number = epr.won_number WHERE `b`.`bid_id` = ?;
15:06:51.519 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - ==> Parameters: 20201218001(String)
15:06:51.529 [http-nio-34571-exec-8] DEBUG n.k.e.p.dao.BidDao.selectOneDetail - <==      Total: 1
15:06:51.547 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getBidDetail' parameter -1
15:06:51.547 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
15:06:51.599 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
15:06:51.599 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
15:06:51.609 [http-nio-34571-exec-9] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
15:06:51.697 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%')
15:06:51.697 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - ==> Parameters: 20201218001(String)
15:06:51.707 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany_COUNT - <==      Total: 1
15:06:51.707 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany - ==>  Preparing: SELECT ebr.record_id as `id`, ebr.`bid_id` as `bidId`, ebr.`description`, ebr.`grade`, ebr.`quantity`, ebr.`bid_price` as bidPrice, ebr.`won_price` as wonPrice , ebr.bid_count_price as `bidCountPrice`, ebr.won_bid_count_price as `wonBidCountPrice`, esku.`attribute` ->> '$.color' as color, esku.`attribute` ->> '$.capacity' as capacity, espu.`spu_brand` as brand, espu.`spu_name` as modelName FROM epsi_bid_record ebr LEFT JOIN epsi_vendor_sku evsku ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_sku esku ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu espu ON espu.`spu_id` = esku.`spu_id` WHERE ebr.bid_id LIKE CONCAT('%', ?, '%') LIMIT ?
15:06:51.707 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany - ==> Parameters: 20201218001(String), 20(Integer)
15:06:51.718 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectOneOrMany - <==      Total: 6
15:06:51.718 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate LEFT JOIN epsi_bid eb ON eb.exchange_rate = epsi_exchange_rate.exchange_rate WHERE bid_id = ?
15:06:51.718 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - ==> Parameters: 20201218001(String)
15:06:51.728 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectCurrencySymbolByBidId - <==      Total: 1
15:06:51.745 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrMany' parameter -1
15:06:51.745 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
15:06:52.971 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `name`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?
15:06:52.971 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - ==> Parameters: test(String)
15:06:52.981 [http-nio-34571-exec-10] DEBUG n.k.e.u.d.UserDao.selectOneByAccount - <==      Total: 1
15:06:53.066 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item` AS `item`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag` AS `description`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`attribute` ->> '$.color' AS `color`, esku.`attribute` ->> '$.capacity' AS `capacity`, esku.`attribute` ->> '$.model' AS `modelNumber`, esku.`attribute` ->> '$.carrier' AS `carrier`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id AS `saleOrderId`, ec.`name` AS `clientName`, eb.`currency` AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(1) FROM epsi_goods WHERE `won_bid_number` = ebr.`won_id` AND `sku_id` = esku.`id` AND `price` IS NOT NULL AND `price` != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
15:06:53.067 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==> Parameters: T000120DA1(String)
15:06:53.077 [http-nio-34571-exec-10] DEBUG n.k.e.p.d.B.selectManyByWonbidId - <==      Total: 0
15:06:53.095 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getSalesList' parameter -1
15:06:53.095 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
15:48:57.497 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
15:48:57.502 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
15:48:57.504 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
