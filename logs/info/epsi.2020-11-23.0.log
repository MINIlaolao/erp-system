10:42:48.510 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
10:42:48.529 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 1986 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
10:42:48.530 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
10:42:48.578 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
10:42:48.578 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
10:42:50.048 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
10:42:50.056 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
10:42:50.056 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
10:42:50.057 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
10:42:50.125 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
10:42:50.125 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1546 ms
10:42:50.840 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
10:42:51.383 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
10:42:51.426 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
10:42:51.509 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
10:42:51.509 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
10:42:51.510 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
10:42:51.510 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
10:42:51.510 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
10:42:51.510 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
10:42:51.510 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
10:42:51.527 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@38eb7b6f, org.springframework.security.web.context.SecurityContextPersistenceFilter@6a07315e, org.springframework.security.web.header.HeaderWriterFilter@62d04688, org.springframework.web.filter.CorsFilter@157fc6c2, net.kintex.epsi.user.filter.JwtAuthenticationFilter@338e042b, org.springframework.security.web.authentication.logout.LogoutFilter@1ed31466, net.kintex.epsi.user.filter.AuthenticationFilter@27ca1949, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2fd8773d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5f53758e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62888575, org.springframework.security.web.access.ExceptionTranslationFilter@59cfc546, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5dbf4422]
10:42:51.592 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
10:42:51.622 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
10:42:51.689 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
10:42:51.689 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
10:42:51.690 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
10:42:51.690 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
10:42:51.825 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
10:42:51.843 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
10:42:51.844 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
10:42:51.853 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
10:42:51.877 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
10:42:52.071 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
10:42:52.075 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
10:42:52.076 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
10:42:52.100 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
10:42:52.101 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
10:42:52.129 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
10:42:52.151 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
10:42:52.201 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 4.045 seconds (JVM running for 5.111)
10:42:52.414 [RMI TCP Connection(4)-192.168.0.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
10:42:52.414 [RMI TCP Connection(4)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
10:42:52.418 [RMI TCP Connection(4)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
10:42:52.439 [RMI TCP Connection(3)-192.168.0.101] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:42:52.878 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - Jakarta Mail version 1.6.5
10:42:52.904 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
10:42:52.904 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - Tables of loaded providers
10:42:52.905 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:42:52.905 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:42:52.905 [RMI TCP Connection(3)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
10:43:51.421 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:43:51.612 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:43:51.639 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:43:55.680 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:43:55.681 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:43:55.690 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:43:55.789 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item`, ebr.`description`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`phoneAttribute` ->> '$.color' AS `color`, esku.`phoneAttribute` ->> '$.capacity' AS `capacity`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id, ec.`name` AS `clientName`, eb.currency AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(*) WHERE eg.`won_bid_number` = ebr.`won_id` AND eg.sku_id = esku.`id` AND eg.price IS NOT NULL AND eg.price != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
10:43:55.841 [http-nio-34571-exec-2] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                  (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                  (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseFrom(MySqlSelectParser.java:66)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:247)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:785)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:329)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:5427)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:973)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:235)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:124)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:204)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 154 common frames omitted
10:44:16.663 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
10:44:16.666 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
10:44:16.669 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
10:44:19.601 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
10:44:19.614 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 2049 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
10:44:19.615 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
10:44:19.655 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
10:44:19.656 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
10:44:21.023 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
10:44:21.032 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
10:44:21.032 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
10:44:21.033 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
10:44:21.104 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
10:44:21.104 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1448 ms
10:44:21.743 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
10:44:22.428 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
10:44:22.495 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
10:44:22.637 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
10:44:22.637 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
10:44:22.637 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
10:44:22.637 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
10:44:22.637 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
10:44:22.637 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
10:44:22.637 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
10:44:22.667 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3e2ce13, org.springframework.security.web.context.SecurityContextPersistenceFilter@d8b12e9, org.springframework.security.web.header.HeaderWriterFilter@45c28f2d, org.springframework.web.filter.CorsFilter@416ce56f, net.kintex.epsi.user.filter.JwtAuthenticationFilter@4be2b5c1, org.springframework.security.web.authentication.logout.LogoutFilter@4a9f5310, net.kintex.epsi.user.filter.AuthenticationFilter@17710d84, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7e7a9fc1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@42b74d13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5e6eddeb, org.springframework.security.web.access.ExceptionTranslationFilter@4293bb3e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@68518996]
10:44:22.785 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
10:44:22.836 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
10:44:22.927 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
10:44:22.929 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
10:44:22.929 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
10:44:22.929 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
10:44:23.102 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
10:44:23.126 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
10:44:23.127 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
10:44:23.137 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
10:44:23.175 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
10:44:23.417 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
10:44:23.423 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
10:44:23.424 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
10:44:23.461 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
10:44:23.462 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
10:44:23.500 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
10:44:23.530 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
10:44:23.590 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 4.307 seconds (JVM running for 4.864)
10:44:23.857 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
10:44:23.858 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
10:44:23.864 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 6 ms
10:44:23.894 [RMI TCP Connection(2)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:44:24.342 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Jakarta Mail version 1.6.5
10:44:24.357 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
10:44:24.358 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Tables of loaded providers
10:44:24.358 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:44:24.358 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:44:24.359 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
10:44:39.245 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:44:39.433 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:44:39.457 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:44:39.597 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item`, ebr.`description`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`phoneAttribute` ->> '$.color' AS `color`, esku.`phoneAttribute` ->> '$.capacity' AS `capacity`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id, ec.`name` AS `clientName`, eb.currency AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(*) WHERE eg.`won_bid_number` = ebr.`won_id` AND eg.sku_id = esku.`id` AND eg.price IS NOT NULL AND eg.price != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
10:44:39.644 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                  (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                  (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseFrom(MySqlSelectParser.java:66)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:247)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:785)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:329)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:5427)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:973)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:235)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:124)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:204)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 154 common frames omitted
10:45:00.385 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:45:00.386 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:45:00.393 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:45:07.268 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item`, ebr.`description`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`phoneAttribute` ->> '$.color' AS `color`, esku.`phoneAttribute` ->> '$.capacity' AS `capacity`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id, ec.`name` AS `clientName`, eb.currency AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(*) WHERE eg.`won_bid_number` = ebr.`won_id` AND eg.sku_id = esku.`id` AND eg.price IS NOT NULL AND eg.price != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
10:45:07.275 [http-nio-34571-exec-2] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                  (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                  (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseFrom(MySqlSelectParser.java:66)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:247)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:785)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:329)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:5427)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:973)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:235)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:124)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:204)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 154 common frames omitted
10:45:12.525 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:45:12.525 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:45:12.533 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:45:14.131 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item`, ebr.`description`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`phoneAttribute` ->> '$.color' AS `color`, esku.`phoneAttribute` ->> '$.capacity' AS `capacity`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id, ec.`name` AS `clientName`, eb.currency AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(*) WHERE eg.`won_bid_number` = ebr.`won_id` AND eg.sku_id = esku.`id` AND eg.price IS NOT NULL AND eg.price != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
10:45:14.139 [http-nio-34571-exec-3] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                  (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                  (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseFrom(MySqlSelectParser.java:66)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:247)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:785)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:329)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:5427)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:973)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:235)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:124)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:204)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 154 common frames omitted
10:46:02.283 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
10:46:02.287 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
10:46:02.289 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
10:46:04.606 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
10:46:04.622 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 2122 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
10:46:04.623 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
10:46:04.676 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
10:46:04.677 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
10:46:06.004 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
10:46:06.012 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
10:46:06.013 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
10:46:06.013 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
10:46:06.088 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
10:46:06.088 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1411 ms
10:46:06.669 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
10:46:07.165 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
10:46:07.204 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
10:46:07.281 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
10:46:07.281 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
10:46:07.281 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
10:46:07.281 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
10:46:07.281 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
10:46:07.281 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
10:46:07.281 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
10:46:07.298 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@71dabfb7, org.springframework.security.web.context.SecurityContextPersistenceFilter@6ba322c4, org.springframework.security.web.header.HeaderWriterFilter@373e7442, org.springframework.web.filter.CorsFilter@4b4b0bcf, net.kintex.epsi.user.filter.JwtAuthenticationFilter@68ab0080, org.springframework.security.web.authentication.logout.LogoutFilter@1093598a, net.kintex.epsi.user.filter.AuthenticationFilter@9f0d9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43f67d79, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5dc060de, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@40bb547, org.springframework.security.web.access.ExceptionTranslationFilter@fd235f5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6d0c2723]
10:46:07.367 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
10:46:07.392 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
10:46:07.449 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
10:46:07.449 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
10:46:07.449 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
10:46:07.449 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
10:46:07.569 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
10:46:07.584 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
10:46:07.584 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
10:46:07.593 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
10:46:07.623 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
10:46:07.805 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
10:46:07.810 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
10:46:07.812 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
10:46:07.836 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
10:46:07.836 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
10:46:07.865 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
10:46:07.892 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
10:46:07.944 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.653 seconds (JVM running for 4.185)
10:46:08.058 [RMI TCP Connection(5)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
10:46:08.058 [RMI TCP Connection(5)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
10:46:08.062 [RMI TCP Connection(5)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
10:46:08.081 [RMI TCP Connection(4)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:46:08.487 [RMI TCP Connection(4)-127.0.0.1] INFO  javax.mail - Jakarta Mail version 1.6.5
10:46:08.499 [RMI TCP Connection(4)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
10:46:08.499 [RMI TCP Connection(4)-127.0.0.1] INFO  javax.mail - Tables of loaded providers
10:46:08.499 [RMI TCP Connection(4)-127.0.0.1] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:46:08.500 [RMI TCP Connection(4)-127.0.0.1] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:46:08.500 [RMI TCP Connection(4)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
10:46:11.194 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:46:11.383 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:46:11.414 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:46:11.556 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item`, ebr.`description`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`phoneAttribute` ->> '$.color' AS `color`, esku.`phoneAttribute` ->> '$.capacity' AS `capacity`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id, ec.`name` AS `clientName`, eb.currency AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(*) WHERE eg.`won_bid_number` = ebr.`won_id` AND eg.sku_id = esku.`id` AND eg.price IS NOT NULL AND eg.price != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
10:46:11.607 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseFrom(MySqlSelectParser.java:66)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:247)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:785)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:329)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:5427)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:973)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:235)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:124)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:204)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 154 common frames omitted
10:49:34.390 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
10:49:34.394 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
10:49:34.396 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
10:49:36.758 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
10:49:36.770 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 2200 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
10:49:36.770 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
10:49:36.807 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
10:49:36.807 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
10:49:38.030 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
10:49:38.037 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
10:49:38.037 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
10:49:38.038 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
10:49:38.105 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
10:49:38.106 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1298 ms
10:49:38.703 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
10:49:39.186 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
10:49:39.224 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
10:49:39.299 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
10:49:39.300 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
10:49:39.300 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
10:49:39.300 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
10:49:39.300 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
10:49:39.300 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
10:49:39.300 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
10:49:39.316 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@c27f214, org.springframework.security.web.context.SecurityContextPersistenceFilter@33faf465, org.springframework.security.web.header.HeaderWriterFilter@6aa4c9ae, org.springframework.web.filter.CorsFilter@27df142f, net.kintex.epsi.user.filter.JwtAuthenticationFilter@675ca5be, org.springframework.security.web.authentication.logout.LogoutFilter@7615eeaf, net.kintex.epsi.user.filter.AuthenticationFilter@6bc09e5d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7a1627f7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@412546a2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@480244ff, org.springframework.security.web.access.ExceptionTranslationFilter@51dc041d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@50c95469]
10:49:39.372 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
10:49:39.397 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
10:49:39.460 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
10:49:39.461 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
10:49:39.461 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
10:49:39.461 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
10:49:39.585 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
10:49:39.599 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
10:49:39.600 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
10:49:39.608 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
10:49:39.629 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
10:49:39.799 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
10:49:39.804 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
10:49:39.805 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
10:49:39.828 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
10:49:39.829 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
10:49:39.857 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
10:49:39.892 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
10:49:39.943 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.47 seconds (JVM running for 4.236)
10:49:40.276 [RMI TCP Connection(2)-192.168.0.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
10:49:40.276 [RMI TCP Connection(2)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
10:49:40.281 [RMI TCP Connection(2)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
10:49:40.299 [RMI TCP Connection(1)-192.168.0.101] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:49:40.639 [RMI TCP Connection(1)-192.168.0.101] INFO  javax.mail - Jakarta Mail version 1.6.5
10:49:40.652 [RMI TCP Connection(1)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
10:49:40.653 [RMI TCP Connection(1)-192.168.0.101] INFO  javax.mail - Tables of loaded providers
10:49:40.653 [RMI TCP Connection(1)-192.168.0.101] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:49:40.653 [RMI TCP Connection(1)-192.168.0.101] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:49:40.654 [RMI TCP Connection(1)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
10:49:48.708 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:49:48.891 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:49:48.915 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:49:49.021 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:49:49.021 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:49:49.028 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:49:49.072 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item`, ebr.`description`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`phoneAttribute` ->> '$.color' AS `color`, esku.`phoneAttribute` ->> '$.capacity' AS `capacity`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id, ec.`name` AS `clientName`, eb.currency AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(*) WHERE eg.`won_bid_number` = ebr.`won_id` AND eg.sku_id = esku.`id` AND eg.price IS NOT NULL AND eg.price != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
10:49:49.126 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseFrom(MySqlSelectParser.java:66)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:247)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:785)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:329)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:5427)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:973)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:235)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:124)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:204)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 154 common frames omitted
10:52:24.715 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
10:52:24.719 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
10:52:24.721 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
10:52:26.885 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
10:52:26.898 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 2302 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
10:52:26.899 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
10:52:26.938 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
10:52:26.939 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
10:52:28.224 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
10:52:28.232 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
10:52:28.233 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
10:52:28.233 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
10:52:28.305 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
10:52:28.305 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1366 ms
10:52:28.880 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
10:52:29.352 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
10:52:29.390 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
10:52:29.466 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
10:52:29.466 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
10:52:29.466 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
10:52:29.466 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
10:52:29.466 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
10:52:29.466 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
10:52:29.466 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
10:52:29.482 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6319be1c, org.springframework.security.web.context.SecurityContextPersistenceFilter@3723ea1, org.springframework.security.web.header.HeaderWriterFilter@3fde0f78, org.springframework.web.filter.CorsFilter@64e94c57, net.kintex.epsi.user.filter.JwtAuthenticationFilter@4e3f87b5, org.springframework.security.web.authentication.logout.LogoutFilter@20f598a5, net.kintex.epsi.user.filter.AuthenticationFilter@110c57df, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@570dea87, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2ce1e983, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@17284dba, org.springframework.security.web.access.ExceptionTranslationFilter@7c4e538f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@b341403]
10:52:29.548 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
10:52:29.572 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
10:52:29.624 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
10:52:29.625 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
10:52:29.625 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
10:52:29.625 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
10:52:29.739 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
10:52:29.753 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
10:52:29.754 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
10:52:29.762 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
10:52:29.782 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
10:52:29.966 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
10:52:29.970 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
10:52:29.971 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
10:52:29.997 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
10:52:29.998 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
10:52:30.029 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
10:52:30.056 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
10:52:30.107 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.526 seconds (JVM running for 4.013)
10:52:30.394 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
10:52:30.394 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
10:52:30.400 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
10:52:30.417 [RMI TCP Connection(3)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:52:30.769 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Jakarta Mail version 1.6.5
10:52:30.784 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
10:52:30.784 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Tables of loaded providers
10:52:30.785 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:52:30.785 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:52:30.785 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
10:52:34.436 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:52:34.619 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:52:34.642 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:52:34.749 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:52:34.750 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:52:34.756 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:52:34.799 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item`, ebr.`description`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`phoneAttribute` ->> '$.color' AS `color`, esku.`phoneAttribute` ->> '$.capacity' AS `capacity`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id, ec.`name` AS `clientName`, eb.currency AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) FROM eg WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(*) FROM eg WHERE eg.`won_bid_number` = ebr.`won_id` AND eg.sku_id = esku.`id` AND eg.price IS NOT NULL AND eg.price != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
10:52:34.811 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==> Parameters: 20110401001(String)
10:52:34.870 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId-Inline
### The error occurred while setting parameters
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*)) FROM eg                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*) FROM eg          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId-Inline
### The error occurred while setting parameters
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*)) FROM eg                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*) FROM eg          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy216.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
10:56:18.379 [http-nio-34571-exec-3] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 223508
10:56:18.514 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:56:18.515 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:56:18.525 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:56:18.601 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:56:18.602 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:56:18.612 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:56:18.623 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item`, ebr.`description`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`phoneAttribute` ->> '$.color' AS `color`, esku.`phoneAttribute` ->> '$.capacity' AS `capacity`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id, ec.`name` AS `clientName`, eb.currency AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) FROM eg WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(*) FROM eg WHERE eg.`won_bid_number` = ebr.`won_id` AND eg.sku_id = esku.`id` AND eg.price IS NOT NULL AND eg.price != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
10:56:18.626 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==> Parameters: 20110401001(String)
10:56:18.654 [http-nio-34571-exec-3] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId-Inline
### The error occurred while setting parameters
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*)) FROM eg                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*) FROM eg          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId-Inline
### The error occurred while setting parameters
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*)) FROM eg                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*) FROM eg          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy216.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
10:56:24.986 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
10:56:24.989 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
10:56:24.991 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
10:56:27.095 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
10:56:27.108 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 2393 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
10:56:27.109 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
10:56:27.151 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
10:56:27.151 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
10:56:28.442 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
10:56:28.450 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
10:56:28.450 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
10:56:28.450 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
10:56:28.520 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
10:56:28.520 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1369 ms
10:56:29.147 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
10:56:29.691 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
10:56:29.733 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
10:56:29.816 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
10:56:29.816 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
10:56:29.816 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
10:56:29.816 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
10:56:29.816 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
10:56:29.816 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
10:56:29.816 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
10:56:29.834 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7bf9cd9d, org.springframework.security.web.context.SecurityContextPersistenceFilter@6a7f4921, org.springframework.security.web.header.HeaderWriterFilter@3e829ff2, org.springframework.web.filter.CorsFilter@741bbd13, net.kintex.epsi.user.filter.JwtAuthenticationFilter@3c5af5f0, org.springframework.security.web.authentication.logout.LogoutFilter@79f5950c, net.kintex.epsi.user.filter.AuthenticationFilter@c4f54a2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2527d955, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@418d01aa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2070d76, org.springframework.security.web.access.ExceptionTranslationFilter@388248ac, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1354dab4]
10:56:29.893 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
10:56:29.920 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
10:56:29.974 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
10:56:29.975 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
10:56:29.975 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
10:56:29.975 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
10:56:30.105 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
10:56:30.119 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
10:56:30.120 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
10:56:30.128 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
10:56:30.154 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
10:56:30.338 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
10:56:30.343 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
10:56:30.344 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
10:56:30.369 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
10:56:30.370 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
10:56:30.398 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
10:56:30.423 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
10:56:30.484 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.685 seconds (JVM running for 4.187)
10:56:30.585 [RMI TCP Connection(6)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
10:56:30.585 [RMI TCP Connection(6)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
10:56:30.589 [RMI TCP Connection(6)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
10:56:30.607 [RMI TCP Connection(7)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:56:30.971 [RMI TCP Connection(7)-127.0.0.1] INFO  javax.mail - Jakarta Mail version 1.6.5
10:56:30.984 [RMI TCP Connection(7)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
10:56:30.985 [RMI TCP Connection(7)-127.0.0.1] INFO  javax.mail - Tables of loaded providers
10:56:30.985 [RMI TCP Connection(7)-127.0.0.1] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:56:30.985 [RMI TCP Connection(7)-127.0.0.1] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:56:30.986 [RMI TCP Connection(7)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
10:56:50.972 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:56:51.156 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:56:51.180 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:56:51.287 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:56:51.288 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:56:51.295 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:56:51.334 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item`, ebr.`description`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`phoneAttribute` ->> '$.color' AS `color`, esku.`phoneAttribute` ->> '$.capacity' AS `capacity`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id, ec.`name` AS `clientName`, eb.currency AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) FROM eg WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(*) FROM eg WHERE eg.`won_bid_number` = ebr.`won_id` AND eg.sku_id = esku.`id` AND eg.price IS NOT NULL AND eg.price != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
10:56:51.344 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==> Parameters: 20110401001(String)
10:56:51.399 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId-Inline
### The error occurred while setting parameters
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*)) FROM eg                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*) FROM eg          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId-Inline
### The error occurred while setting parameters
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*)) FROM eg                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*) FROM eg          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy216.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
10:57:43.014 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
10:57:43.018 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
10:57:43.020 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
10:57:45.214 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
10:57:45.225 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 2445 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
10:57:45.226 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
10:57:45.267 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
10:57:45.268 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
10:57:46.585 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
10:57:46.592 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
10:57:46.593 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
10:57:46.593 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
10:57:46.655 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
10:57:46.655 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1387 ms
10:57:47.278 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
10:57:47.767 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
10:57:47.804 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
10:57:47.882 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
10:57:47.882 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
10:57:47.882 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
10:57:47.882 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
10:57:47.882 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
10:57:47.882 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
10:57:47.882 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
10:57:47.901 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@741bbd13, org.springframework.security.web.context.SecurityContextPersistenceFilter@7a8445cf, org.springframework.security.web.header.HeaderWriterFilter@291fc406, org.springframework.web.filter.CorsFilter@2070d76, net.kintex.epsi.user.filter.JwtAuthenticationFilter@7bf9cd9d, org.springframework.security.web.authentication.logout.LogoutFilter@26d48871, net.kintex.epsi.user.filter.AuthenticationFilter@3c5af5f0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@20f598a5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@205766ee, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@69998db3, org.springframework.security.web.access.ExceptionTranslationFilter@31e9f7e1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@30067a79]
10:57:47.967 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
10:57:48.003 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
10:57:48.060 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
10:57:48.060 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
10:57:48.061 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
10:57:48.061 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
10:57:48.190 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
10:57:48.209 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
10:57:48.210 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
10:57:48.220 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
10:57:48.245 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
10:57:48.449 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
10:57:48.454 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
10:57:48.455 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
10:57:48.480 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
10:57:48.480 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
10:57:48.511 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
10:57:48.539 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
10:57:48.593 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.673 seconds (JVM running for 4.178)
10:57:48.699 [RMI TCP Connection(5)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
10:57:48.699 [RMI TCP Connection(5)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
10:57:48.705 [RMI TCP Connection(5)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 6 ms
10:57:48.723 [RMI TCP Connection(6)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:57:49.123 [RMI TCP Connection(6)-127.0.0.1] INFO  javax.mail - Jakarta Mail version 1.6.5
10:57:49.134 [RMI TCP Connection(6)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
10:57:49.134 [RMI TCP Connection(6)-127.0.0.1] INFO  javax.mail - Tables of loaded providers
10:57:49.134 [RMI TCP Connection(6)-127.0.0.1] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:57:49.135 [RMI TCP Connection(6)-127.0.0.1] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:57:49.135 [RMI TCP Connection(6)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
10:57:56.954 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:57:57.141 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:57:57.168 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:57:57.274 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:57:57.274 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:57:57.284 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:57:57.331 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item`, ebr.`description`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`phoneAttribute` ->> '$.color' AS `color`, esku.`phoneAttribute` ->> '$.capacity' AS `capacity`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id, ec.`name` AS `clientName`, eb.currency AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(*) WHERE eg.`won_bid_number` = ebr.`won_id` AND eg.sku_id = esku.`id` AND eg.price IS NOT NULL AND eg.price != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
10:57:57.383 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*)) 
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*) 
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                  WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*)           WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*)) 
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*) 
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*)) 
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*) 
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*)) 
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*) 
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*)) 
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*) 
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                  WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*)           WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*)) 
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*) 
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*)) 
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*) 
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*)) 
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*) 
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*)) 
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*) 
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseFrom(MySqlSelectParser.java:66)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:247)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:785)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:329)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:5427)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:973)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:235)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:124)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:204)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 154 common frames omitted
11:04:21.832 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
11:04:21.837 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
11:04:21.839 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
11:04:23.817 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
11:04:23.828 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 2636 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
11:04:23.828 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
11:04:23.865 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
11:04:23.865 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
11:04:25.113 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
11:04:25.120 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
11:04:25.121 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
11:04:25.121 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
11:04:25.186 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
11:04:25.186 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1321 ms
11:04:25.762 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
11:04:26.237 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
11:04:26.275 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
11:04:26.360 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
11:04:26.360 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
11:04:26.360 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
11:04:26.360 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
11:04:26.360 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
11:04:26.360 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
11:04:26.360 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
11:04:26.376 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5a763173, org.springframework.security.web.context.SecurityContextPersistenceFilter@2065bc19, org.springframework.security.web.header.HeaderWriterFilter@27ca1949, org.springframework.web.filter.CorsFilter@688374b0, net.kintex.epsi.user.filter.JwtAuthenticationFilter@1d69ee54, org.springframework.security.web.authentication.logout.LogoutFilter@4a945797, net.kintex.epsi.user.filter.AuthenticationFilter@3d07693f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5ec1421c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@34446199, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6e4bb60e, org.springframework.security.web.access.ExceptionTranslationFilter@de40ba3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@563613ed]
11:04:26.436 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
11:04:26.461 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
11:04:26.518 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
11:04:26.518 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
11:04:26.519 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
11:04:26.519 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
11:04:26.633 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
11:04:26.647 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
11:04:26.648 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
11:04:26.655 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
11:04:26.686 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
11:04:26.853 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
11:04:26.857 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
11:04:26.858 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
11:04:26.881 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
11:04:26.882 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
11:04:26.909 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
11:04:26.934 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
11:04:26.995 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.466 seconds (JVM running for 4.017)
11:04:27.451 [RMI TCP Connection(2)-192.168.0.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
11:04:27.451 [RMI TCP Connection(2)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
11:04:27.456 [RMI TCP Connection(2)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
11:04:27.473 [RMI TCP Connection(1)-192.168.0.101] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
11:04:27.824 [RMI TCP Connection(1)-192.168.0.101] INFO  javax.mail - Jakarta Mail version 1.6.5
11:04:27.836 [RMI TCP Connection(1)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
11:04:27.836 [RMI TCP Connection(1)-192.168.0.101] INFO  javax.mail - Tables of loaded providers
11:04:27.836 [RMI TCP Connection(1)-192.168.0.101] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
11:04:27.836 [RMI TCP Connection(1)-192.168.0.101] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
11:04:27.837 [RMI TCP Connection(1)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
11:04:30.741 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:04:30.909 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:04:30.954 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:04:31.059 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:04:31.060 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:04:31.067 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:04:31.108 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item`, ebr.`description`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`phoneAttribute` ->> '$.color' AS `color`, esku.`phoneAttribute` ->> '$.capacity' AS `capacity`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id, ec.`name` AS `clientName`, eb.currency AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) FROM epsi_bid_record WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(*) FROM epsi_bid_record WHERE eg.`won_bid_number` = ebr.`won_id` AND eg.sku_id = esku.`id` AND eg.price IS NOT NULL AND eg.price != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
11:04:31.120 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==> Parameters: 20110401001(String)
11:04:31.131 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectManyByWonbidId - <==      Total: 4
11:05:09.667 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.E.selectSymbolByCode - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate WHERE currency_code = ?
11:05:09.669 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.E.selectSymbolByCode - ==> Parameters: USD(String)
11:05:09.675 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.E.selectSymbolByCode - <==      Total: 1
11:05:19.128 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:05:19.129 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:05:19.136 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:05:19.214 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:05:19.214 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:05:19.221 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:05:19.227 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item`, ebr.`description`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`phoneAttribute` ->> '$.color' AS `color`, esku.`phoneAttribute` ->> '$.capacity' AS `capacity`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id, ec.`name` AS `clientName`, eb.currency AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) FROM epsi_bid_record WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(*) FROM epsi_bid_record WHERE eg.`won_bid_number` = ebr.`won_id` AND eg.sku_id = esku.`id` AND eg.price IS NOT NULL AND eg.price != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
11:05:19.229 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==> Parameters: 20110401001(String)
11:05:19.238 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectManyByWonbidId - <==      Total: 4
11:05:54.958 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectSymbolByCode - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate WHERE currency_code = ?
11:05:54.958 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectSymbolByCode - ==> Parameters: USD(String)
11:05:54.964 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectSymbolByCode - <==      Total: 1
11:06:18.162 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:06:18.163 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:06:18.170 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:06:18.246 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:06:18.246 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:06:18.253 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:06:18.260 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item`, ebr.`description`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`phoneAttribute` ->> '$.color' AS `color`, esku.`phoneAttribute` ->> '$.capacity' AS `capacity`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id, ec.`name` AS `clientName`, eb.currency AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) FROM epsi_bid_record WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(*) FROM epsi_bid_record WHERE eg.`won_bid_number` = ebr.`won_id` AND eg.sku_id = esku.`id` AND eg.price IS NOT NULL AND eg.price != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
11:06:18.262 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==> Parameters: 20110401001(String)
11:06:18.271 [http-nio-34571-exec-3] DEBUG n.k.e.p.d.B.selectManyByWonbidId - <==      Total: 4
11:06:22.242 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectSymbolByCode - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate WHERE currency_code = ?
11:06:22.242 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectSymbolByCode - ==> Parameters: USD(String)
11:06:22.248 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectSymbolByCode - <==      Total: 1
11:06:30.832 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:06:30.832 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:06:30.839 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:06:30.914 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:06:30.915 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:06:30.922 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:06:30.929 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item`, ebr.`description`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`phoneAttribute` ->> '$.color' AS `color`, esku.`phoneAttribute` ->> '$.capacity' AS `capacity`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id, ec.`name` AS `clientName`, eb.currency AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) FROM epsi_bid_record WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(*) FROM epsi_bid_record WHERE eg.`won_bid_number` = ebr.`won_id` AND eg.sku_id = esku.`id` AND eg.price IS NOT NULL AND eg.price != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
11:06:30.931 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==> Parameters: 20110401001(String)
11:06:30.942 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectManyByWonbidId - <==      Total: 4
11:06:30.942 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectSymbolByCode - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate WHERE currency_code = ?
11:06:30.943 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectSymbolByCode - ==> Parameters: USD(String)
11:06:30.949 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectSymbolByCode - <==      Total: 1
11:06:50.499 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
11:06:50.503 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
11:06:50.505 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
11:06:52.533 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
11:06:52.545 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 2690 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
11:06:52.546 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
11:06:52.584 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
11:06:52.584 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
11:06:53.866 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
11:06:53.873 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
11:06:53.874 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
11:06:53.874 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
11:06:53.939 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
11:06:53.939 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1355 ms
11:06:54.522 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
11:06:55.021 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
11:06:55.061 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
11:06:55.138 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
11:06:55.138 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
11:06:55.138 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
11:06:55.138 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
11:06:55.138 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
11:06:55.138 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
11:06:55.138 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
11:06:55.154 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a945797, org.springframework.security.web.context.SecurityContextPersistenceFilter@40bb547, org.springframework.security.web.header.HeaderWriterFilter@eb6a40d, org.springframework.web.filter.CorsFilter@7ef24d4e, net.kintex.epsi.user.filter.JwtAuthenticationFilter@ce72b3f, org.springframework.security.web.authentication.logout.LogoutFilter@5077dea7, net.kintex.epsi.user.filter.AuthenticationFilter@a540132, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@10973c64, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@71fca6ea, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54858e33, org.springframework.security.web.access.ExceptionTranslationFilter@69ff83f4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5449565d]
11:06:55.211 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
11:06:55.236 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
11:06:55.301 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
11:06:55.301 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
11:06:55.302 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
11:06:55.302 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
11:06:55.424 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
11:06:55.440 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
11:06:55.441 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
11:06:55.449 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
11:06:55.471 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
11:06:55.673 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
11:06:55.678 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
11:06:55.679 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
11:06:55.705 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
11:06:55.706 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
11:06:55.733 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
11:06:55.760 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
11:06:55.811 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.573 seconds (JVM running for 4.163)
11:06:56.226 [RMI TCP Connection(3)-192.168.0.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
11:06:56.226 [RMI TCP Connection(3)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
11:06:56.231 [RMI TCP Connection(3)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
11:06:56.264 [RMI TCP Connection(2)-192.168.0.101] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
11:06:56.625 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - Jakarta Mail version 1.6.5
11:06:56.650 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
11:06:56.651 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - Tables of loaded providers
11:06:56.651 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
11:06:56.651 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
11:06:56.652 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
11:11:29.193 [http-nio-34571-exec-9] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 272603
11:11:29.293 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:11:29.446 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:11:29.470 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:11:29.575 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:11:29.576 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:11:29.583 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:11:29.606 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item`, ebr.`description`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`phoneAttribute` ->> '$.color' AS `color`, esku.`phoneAttribute` ->> '$.capacity' AS `capacity`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id, ec.`name` AS `clientName`, eb.currency AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) FROM epsi_bid_record WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(*) FROM epsi_bid_record WHERE eg.`won_bid_number` = ebr.`won_id` AND eg.sku_id = esku.`id` AND eg.price IS NOT NULL AND eg.price != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
11:11:29.616 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==> Parameters: 20110401001(String)
11:11:29.627 [http-nio-34571-exec-9] DEBUG n.k.e.p.d.B.selectManyByWonbidId - <==      Total: 4
11:11:29.628 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.E.selectSymbolByCode - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate WHERE currency_code = ?
11:11:29.629 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.E.selectSymbolByCode - ==> Parameters: USD(String)
11:11:29.635 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.E.selectSymbolByCode - <==      Total: 1
11:43:59.159 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
11:43:59.165 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
11:43:59.166 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
11:44:02.301 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
11:44:02.313 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 3474 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
11:44:02.314 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
11:44:02.352 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
11:44:02.352 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
11:44:03.676 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
11:44:03.684 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
11:44:03.685 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
11:44:03.685 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
11:44:03.761 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
11:44:03.762 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1410 ms
11:44:04.351 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
11:44:04.828 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
11:44:04.867 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
11:44:04.944 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
11:44:04.944 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
11:44:04.944 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
11:44:04.944 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
11:44:04.944 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
11:44:04.944 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
11:44:04.944 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
11:44:04.960 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@64d048b3, org.springframework.security.web.context.SecurityContextPersistenceFilter@556b3f61, org.springframework.security.web.header.HeaderWriterFilter@1b29fc8f, org.springframework.web.filter.CorsFilter@2534a7d0, net.kintex.epsi.user.filter.JwtAuthenticationFilter@2951ad8e, org.springframework.security.web.authentication.logout.LogoutFilter@1eb106be, net.kintex.epsi.user.filter.AuthenticationFilter@721fc3b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@11de488b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4c14c1e6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2d7c4769, org.springframework.security.web.access.ExceptionTranslationFilter@78c89412, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7f5944fd]
11:44:05.025 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
11:44:05.049 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
11:44:05.103 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
11:44:05.103 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
11:44:05.103 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
11:44:05.104 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
11:44:05.217 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
11:44:05.234 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
11:44:05.235 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
11:44:05.244 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
11:44:05.265 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
11:44:05.462 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
11:44:05.467 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
11:44:05.469 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
11:44:05.496 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
11:44:05.497 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
11:44:05.529 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
11:44:05.556 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
11:44:05.607 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.594 seconds (JVM running for 4.095)
11:44:05.816 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
11:44:05.816 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
11:44:05.821 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
11:44:05.840 [RMI TCP Connection(1)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
11:44:06.243 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - Jakarta Mail version 1.6.5
11:44:06.252 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
11:44:06.253 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - Tables of loaded providers
11:44:06.253 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
11:44:06.253 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
11:44:06.254 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
11:53:52.121 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
11:53:52.126 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
11:53:52.129 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
11:53:54.517 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
11:53:54.530 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 3703 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
11:53:54.531 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
11:53:54.575 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
11:53:54.575 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
11:53:55.832 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
11:53:55.839 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
11:53:55.839 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
11:53:55.840 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
11:53:55.899 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
11:53:55.900 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1325 ms
11:53:56.510 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
11:53:56.982 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
11:53:57.028 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
11:53:57.106 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
11:53:57.107 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
11:53:57.107 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
11:53:57.107 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
11:53:57.107 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
11:53:57.107 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
11:53:57.107 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
11:53:57.124 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@59f78b9, org.springframework.security.web.context.SecurityContextPersistenceFilter@69ff83f4, org.springframework.security.web.header.HeaderWriterFilter@5129d7a0, org.springframework.web.filter.CorsFilter@394516e8, net.kintex.epsi.user.filter.JwtAuthenticationFilter@4a9f5310, org.springframework.security.web.authentication.logout.LogoutFilter@4b4b0bcf, net.kintex.epsi.user.filter.AuthenticationFilter@2ed0edc5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@eb6a40d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3f8def0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@10d26ac0, org.springframework.security.web.access.ExceptionTranslationFilter@2e4acc42, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2995ca51]
11:53:57.185 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
11:53:57.209 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
11:53:57.264 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
11:53:57.264 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
11:53:57.264 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
11:53:57.264 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
11:53:57.378 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
11:53:57.413 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
11:53:57.414 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
11:53:57.421 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
11:53:57.441 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
11:53:57.610 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
11:53:57.614 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
11:53:57.615 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
11:53:57.638 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
11:53:57.639 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
11:53:57.667 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
11:53:57.691 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
11:53:57.750 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.552 seconds (JVM running for 4.118)
11:53:58.168 [RMI TCP Connection(4)-192.168.0.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
11:53:58.168 [RMI TCP Connection(4)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
11:53:58.172 [RMI TCP Connection(4)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
11:53:58.190 [RMI TCP Connection(5)-192.168.0.101] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
11:53:58.754 [RMI TCP Connection(5)-192.168.0.101] INFO  javax.mail - Jakarta Mail version 1.6.5
11:53:58.764 [RMI TCP Connection(5)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
11:53:58.765 [RMI TCP Connection(5)-192.168.0.101] INFO  javax.mail - Tables of loaded providers
11:53:58.765 [RMI TCP Connection(5)-192.168.0.101] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
11:53:58.765 [RMI TCP Connection(5)-192.168.0.101] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
11:53:58.765 [RMI TCP Connection(5)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
11:54:01.722 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:54:01.914 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:54:01.957 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:54:02.072 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:54:02.073 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:54:02.095 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:54:02.165 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item`, ebr.`description`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`phoneAttribute` ->> '$.color' AS `color`, esku.`phoneAttribute` ->> '$.capacity' AS `capacity`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id, ec.`name` AS `clientName`, eb.currency AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) FROM epsi_bid_record WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(*) FROM epsi_bid_record WHERE eg.`won_bid_number` = ebr.`won_id` AND eg.sku_id = esku.`id` AND eg.price IS NOT NULL AND eg.price != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
11:54:02.178 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==> Parameters: 20110401001(String)
11:54:02.206 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectManyByWonbidId - <==      Total: 4
11:54:02.207 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.E.selectSymbolByCode - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate WHERE currency_code = ?
11:54:02.208 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.E.selectSymbolByCode - ==> Parameters: USD(String)
11:54:02.232 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.E.selectSymbolByCode - <==      Total: 1
11:54:11.866 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:54:11.868 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:54:11.889 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:54:11.970 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:54:11.970 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:54:11.992 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:54:12.015 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item`, ebr.`description`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`phoneAttribute` ->> '$.color' AS `color`, esku.`phoneAttribute` ->> '$.capacity' AS `capacity`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id, ec.`name` AS `clientName`, eb.currency AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) FROM epsi_bid_record WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(*) FROM epsi_bid_record WHERE eg.`won_bid_number` = ebr.`won_id` AND eg.sku_id = esku.`id` AND eg.price IS NOT NULL AND eg.price != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
11:54:12.017 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==> Parameters: 20110401001(String)
11:54:12.105 [http-nio-34571-exec-2] DEBUG n.k.e.p.d.B.selectManyByWonbidId - <==      Total: 4
12:35:17.666 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectSymbolByCode - ==>  Preparing: SELECT currency_symbol FROM epsi_exchange_rate WHERE currency_code = ?
12:35:17.669 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectSymbolByCode - ==> Parameters: USD(String)
12:35:17.679 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectSymbolByCode - <==      Total: 1
12:35:18.974 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
12:35:18.978 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
12:35:18.980 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
16:51:19.724 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
16:51:19.742 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 11618 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
16:51:19.742 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
16:51:19.788 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
16:51:19.788 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
16:51:21.210 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
16:51:21.217 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
16:51:21.218 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
16:51:21.218 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
16:51:21.293 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
16:51:21.293 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1505 ms
16:51:21.885 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
16:51:22.375 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
16:51:22.413 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
16:51:22.493 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
16:51:22.493 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
16:51:22.493 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
16:51:22.493 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
16:51:22.493 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
16:51:22.493 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
16:51:22.493 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
16:51:22.510 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@8b4bc38, org.springframework.security.web.context.SecurityContextPersistenceFilter@395592b4, org.springframework.security.web.header.HeaderWriterFilter@49359cc5, org.springframework.web.filter.CorsFilter@32e6515a, net.kintex.epsi.user.filter.JwtAuthenticationFilter@16b47d20, org.springframework.security.web.authentication.logout.LogoutFilter@3723ea1, net.kintex.epsi.user.filter.AuthenticationFilter@4d469017, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@527abec3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@40f678f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4b59b939, org.springframework.security.web.access.ExceptionTranslationFilter@25964ad9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@61d27919]
16:51:22.569 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
16:51:22.599 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
16:51:22.665 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
16:51:22.665 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
16:51:22.665 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
16:51:22.665 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
16:51:22.791 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
16:51:22.807 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
16:51:22.808 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
16:51:22.817 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
16:51:22.840 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
16:51:23.014 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
16:51:23.018 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
16:51:23.019 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
16:51:23.042 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
16:51:23.043 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
16:51:23.076 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
16:51:23.107 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
16:51:23.156 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.774 seconds (JVM running for 4.359)
16:51:23.399 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
16:51:23.400 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
16:51:23.404 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
16:51:23.424 [RMI TCP Connection(1)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
16:51:23.817 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - Jakarta Mail version 1.6.5
16:51:23.827 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
16:51:23.827 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - Tables of loaded providers
16:51:23.827 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
16:51:23.828 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
16:51:23.828 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
16:52:07.580 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
16:52:07.773 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
16:52:07.799 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
16:52:10.901 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
16:52:10.902 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
16:52:10.912 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
16:52:10.990 [http-nio-34571-exec-3] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 参数校验不通过, Required String parameter 'wonbidId' is not present, msg: wonbidId 不能为空
16:52:36.950 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
16:52:36.951 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
16:52:36.960 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
16:52:37.055 [http-nio-34571-exec-4] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item`, ebr.`description`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`phoneAttribute` ->> '$.color' AS `color`, esku.`phoneAttribute` ->> '$.capacity' AS `capacity`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id AS `saleOrderId`, ec.`name` AS `clientName`, eb.currency AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(*) WHERE eg.`won_bid_number` = ebr.`won_id` AND eg.sku_id = esku.`id` AND eg.price IS NOT NULL AND eg.price != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
16:52:37.110 [http-nio-34571-exec-4] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id                            AS `saleOrderId`,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                (SELECT COUNT(*)                 WHERE eg.`won_bid_number` = ebr.`won_id`                   AND eg.sku_id = esku.`id`                   AND eg.price IS NOT NULL                   AND eg.price != 0                    )                             AS `totalSkuCount`         FROM epsi_bid_record `ebr`                  LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                  LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number                   LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                  LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                  LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                  LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                  LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                  LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                  LEFT JOIN epsi_client ec ON ec.id = eso.client_id         WHERE ebr.`won_id` = ?           and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id                            AS `saleOrderId`,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                (SELECT COUNT(*)                 WHERE eg.`won_bid_number` = ebr.`won_id`                   AND eg.sku_id = esku.`id`                   AND eg.price IS NOT NULL                   AND eg.price != 0                    )                             AS `totalSkuCount`         FROM epsi_bid_record `ebr`                  LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                  LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number                   LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                  LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                  LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                  LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                  LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                  LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                  LEFT JOIN epsi_client ec ON ec.id = eso.client_id         WHERE ebr.`won_id` = ?           and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseFrom(MySqlSelectParser.java:66)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:247)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:785)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:329)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:5427)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:973)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:235)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:124)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:204)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 154 common frames omitted
16:53:54.246 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
16:53:54.250 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
16:53:54.252 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
16:53:56.754 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
16:53:56.770 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 11697 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
16:53:56.771 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
16:53:56.833 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
16:53:56.834 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
16:53:58.241 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
16:53:58.249 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
16:53:58.250 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
16:53:58.250 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
16:53:58.322 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
16:53:58.322 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1488 ms
16:53:58.978 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
16:53:59.511 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
16:53:59.574 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
16:53:59.672 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
16:53:59.672 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
16:53:59.672 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
16:53:59.672 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
16:53:59.672 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
16:53:59.672 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
16:53:59.672 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
16:53:59.696 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@63b4f8b8, org.springframework.security.web.context.SecurityContextPersistenceFilter@63a10c63, org.springframework.security.web.header.HeaderWriterFilter@40465cdb, org.springframework.web.filter.CorsFilter@3343f7a1, net.kintex.epsi.user.filter.JwtAuthenticationFilter@5e9ff4df, org.springframework.security.web.authentication.logout.LogoutFilter@3f15cd0f, net.kintex.epsi.user.filter.AuthenticationFilter@5bd8070b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@30067a79, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c5af5f0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@28b84e9d, org.springframework.security.web.access.ExceptionTranslationFilter@27f07952, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2f0232a3]
16:53:59.772 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
16:53:59.798 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
16:53:59.851 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
16:53:59.852 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
16:53:59.852 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
16:53:59.852 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
16:53:59.993 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
16:54:00.007 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
16:54:00.008 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
16:54:00.017 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
16:54:00.038 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
16:54:00.225 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
16:54:00.229 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
16:54:00.230 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
16:54:00.255 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
16:54:00.256 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
16:54:00.287 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
16:54:00.327 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
16:54:00.377 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 4.028 seconds (JVM running for 4.642)
16:54:00.553 [RMI TCP Connection(4)-192.168.0.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
16:54:00.553 [RMI TCP Connection(4)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
16:54:00.558 [RMI TCP Connection(4)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
16:54:00.577 [RMI TCP Connection(5)-192.168.0.101] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
16:54:00.944 [RMI TCP Connection(5)-192.168.0.101] INFO  javax.mail - Jakarta Mail version 1.6.5
16:54:00.957 [RMI TCP Connection(5)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
16:54:00.958 [RMI TCP Connection(5)-192.168.0.101] INFO  javax.mail - Tables of loaded providers
16:54:00.958 [RMI TCP Connection(5)-192.168.0.101] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
16:54:00.958 [RMI TCP Connection(5)-192.168.0.101] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
16:54:00.959 [RMI TCP Connection(5)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
16:54:04.575 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
16:54:04.776 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
16:54:04.799 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
16:54:04.950 [http-nio-34571-exec-1] DEBUG n.k.e.p.d.B.selectManyByWonbidId - ==>  Preparing: SELECT ebr.won_id, ebr.`item`, ebr.`description`, ebr.`grade`, ebr.`sku_id`, ebr.`quantity`, ebr.`won_qty`, ebr.`hkd`, ebr.`won_hkd`, ebr.`tag`, ewb.`exchange_rate` AS `exchangeRate`, ebr.`won_price` AS `wonPrice`, esku.`phoneAttribute` ->> '$.color' AS `color`, esku.`phoneAttribute` ->> '$.capacity' AS `capacity`, espu.`spu_brand` AS `brand`, espu.`spu_name` AS `modelName`, ei.`inventory_quantity` AS `inventory`, eg.`price` AS `singlePrice`, eso.`salesman` AS `salesman`, eso.id AS `saleOrderId`, ec.`name` AS `clientName`, eb.currency AS `currency`, (SELECT IF(COUNT(*) = eg.price IS NULL OR eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00', COUNT(*) = 0, COUNT(*)) WHERE eg.`sku_id` = esku.`id` AND eg.`won_bid_number` = ebr.`won_id` AND eg.sale_order = eso.id ) AS `saleQuantity` , (SELECT COUNT(*) WHERE eg.`won_bid_number` = ebr.`won_id` AND eg.sku_id = esku.`id` AND eg.price IS NOT NULL AND eg.price != 0 ) AS `totalSkuCount` FROM epsi_bid_record `ebr` LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id` LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id` LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id` LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id` LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number` LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id LEFT JOIN epsi_client ec ON ec.id = eso.client_id WHERE ebr.`won_id` = ? and eg.sku_id = esku.`id`
16:54:04.996 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id                            AS `saleOrderId`,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                (SELECT COUNT(*)                 WHERE eg.`won_bid_number` = ebr.`won_id`                   AND eg.sku_id = esku.`id`                   AND eg.price IS NOT NULL                   AND eg.price != 0                    )                             AS `totalSkuCount`         FROM epsi_bid_record `ebr`                  LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                  LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number                   LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                  LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                  LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                  LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                  LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                  LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                  LEFT JOIN epsi_client ec ON ec.id = eso.client_id         WHERE ebr.`won_id` = ?           and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id                            AS `saleOrderId`,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                (SELECT COUNT(*)                 WHERE eg.`won_bid_number` = ebr.`won_id`                   AND eg.sku_id = esku.`id`                   AND eg.price IS NOT NULL                   AND eg.price != 0                    )                             AS `totalSkuCount`         FROM epsi_bid_record `ebr`                  LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                  LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number                   LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                  LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                  LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                  LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                  LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                  LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                  LEFT JOIN epsi_client ec ON ec.id = eso.client_id         WHERE ebr.`won_id` = ?           and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseFrom(MySqlSelectParser.java:66)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:247)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:785)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:329)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:5427)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:973)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:235)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:124)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:204)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 154 common frames omitted
