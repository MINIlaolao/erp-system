10:43:55.841 [http-nio-34571-exec-2] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                  (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                  (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseFrom(MySqlSelectParser.java:66)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:247)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:785)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:329)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:5427)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:973)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:235)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:124)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:204)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 154 common frames omitted
10:44:39.644 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                  (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                  (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseFrom(MySqlSelectParser.java:66)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:247)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:785)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:329)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:5427)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:973)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:235)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:124)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:204)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 154 common frames omitted
10:45:07.275 [http-nio-34571-exec-2] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                  (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                  (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseFrom(MySqlSelectParser.java:66)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:247)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:785)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:329)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:5427)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:973)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:235)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:124)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:204)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 154 common frames omitted
10:45:14.139 [http-nio-34571-exec-3] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                  (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                  (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect FROM, actual WHERE, pos 1488, line 33, column 11, token WHERE
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseFrom(MySqlSelectParser.java:66)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:247)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:785)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:329)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:5427)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:973)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:235)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:124)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:204)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 154 common frames omitted
10:46:11.607 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseFrom(MySqlSelectParser.java:66)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:247)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:785)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:329)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:5427)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:973)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:235)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:124)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:204)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 154 common frames omitted
10:49:49.126 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*)          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*)
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect FROM, actual WHERE, pos 1479, line 32, column 11, token WHERE
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseFrom(MySqlSelectParser.java:66)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:247)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:785)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:329)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:5427)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:973)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:235)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:124)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:204)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 154 common frames omitted
10:52:34.870 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId-Inline
### The error occurred while setting parameters
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*)) FROM eg                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*) FROM eg          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId-Inline
### The error occurred while setting parameters
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*)) FROM eg                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*) FROM eg          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy216.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
10:56:18.379 [http-nio-34571-exec-3] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 223508
10:56:18.654 [http-nio-34571-exec-3] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId-Inline
### The error occurred while setting parameters
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*)) FROM eg                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*) FROM eg          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId-Inline
### The error occurred while setting parameters
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*)) FROM eg                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*) FROM eg          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy216.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
10:56:51.399 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId-Inline
### The error occurred while setting parameters
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*)) FROM eg                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*) FROM eg          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId-Inline
### The error occurred while setting parameters
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*)) FROM eg                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*) FROM eg          WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLSyntaxErrorException: Table 'sppsi_test.eg' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy216.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
10:57:57.383 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*)) 
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*) 
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                  WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*)           WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*)) 
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*) 
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*)) 
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*) 
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*)) 
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*) 
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*)) 
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*) 
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                  WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,         (SELECT COUNT(*)           WHERE eg.`won_bid_number` = ebr.`won_id`            AND eg.sku_id = esku.`id`            AND eg.price IS NOT NULL            AND eg.price != 0             ) AS `totalSkuCount`             FROM epsi_bid_record `ebr`                      LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                      LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                      LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id                      LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                      LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                      LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                      LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                      LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                      LEFT JOIN epsi_client ec ON ec.id = eso.client_id             WHERE ebr.`won_id` = ?               and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*)) 
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*) 
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*)) 
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*) 
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*)) 
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*) 
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*)) 
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
        (SELECT COUNT(*) 
         WHERE eg.`won_bid_number` = ebr.`won_id`
           AND eg.sku_id = esku.`id`
           AND eg.price IS NOT NULL
           AND eg.price != 0
            ) AS `totalSkuCount`
            FROM epsi_bid_record `ebr`
                     LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                     LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                     LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_id
                     LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                     LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                     LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                     LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                     LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                     LEFT JOIN epsi_client ec ON ec.id = eso.client_id
            WHERE ebr.`won_id` = ?
              and eg.sku_id = esku.`id`
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect FROM, actual WHERE, pos 1481, line 32, column 11, token WHERE
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseFrom(MySqlSelectParser.java:66)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:247)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:785)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:329)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:5427)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:973)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:235)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:124)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:204)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 154 common frames omitted
11:05:09.689 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - null
java.lang.NullPointerException: null
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.createSalesList(SalesListServiceImpl.java:149)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:73)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
11:06:05.464 [http-nio-34571-exec-2] ERROR n.k.e.c.h.ExceptionHandlerAdvice - null
java.lang.NullPointerException: null
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.createSalesList(SalesListServiceImpl.java:149)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:73)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
11:06:22.260 [http-nio-34571-exec-3] ERROR n.k.e.c.h.ExceptionHandlerAdvice - null
java.lang.NullPointerException: null
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.createSalesList(SalesListServiceImpl.java:149)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:73)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
11:06:38.161 [http-nio-34571-exec-4] ERROR n.k.e.c.h.ExceptionHandlerAdvice - null
java.lang.NullPointerException: null
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.createSalesList(SalesListServiceImpl.java:149)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:73)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
11:11:29.193 [http-nio-34571-exec-9] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 272603
11:11:34.685 [http-nio-34571-exec-9] ERROR n.k.e.c.h.ExceptionHandlerAdvice - null
java.lang.NullPointerException: null
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.createSalesList(SalesListServiceImpl.java:149)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:73)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
11:54:02.279 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - null
java.lang.NullPointerException: null
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.createSalesList(SalesListServiceImpl.java:149)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:73)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
12:35:17.698 [http-nio-34571-exec-2] ERROR n.k.e.c.h.ExceptionHandlerAdvice - null
java.lang.NullPointerException: null
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.createSalesList(SalesListServiceImpl.java:149)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:73)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
16:52:10.990 [http-nio-34571-exec-3] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 参数校验不通过, Required String parameter 'wonbidId' is not present, msg: wonbidId 不能为空
16:52:37.110 [http-nio-34571-exec-4] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id                            AS `saleOrderId`,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                (SELECT COUNT(*)                 WHERE eg.`won_bid_number` = ebr.`won_id`                   AND eg.sku_id = esku.`id`                   AND eg.price IS NOT NULL                   AND eg.price != 0                    )                             AS `totalSkuCount`         FROM epsi_bid_record `ebr`                  LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                  LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number                   LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                  LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                  LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                  LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                  LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                  LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                  LEFT JOIN epsi_client ec ON ec.id = eso.client_id         WHERE ebr.`won_id` = ?           and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id                            AS `saleOrderId`,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                (SELECT COUNT(*)                 WHERE eg.`won_bid_number` = ebr.`won_id`                   AND eg.sku_id = esku.`id`                   AND eg.price IS NOT NULL                   AND eg.price != 0                    )                             AS `totalSkuCount`         FROM epsi_bid_record `ebr`                  LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                  LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number                   LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                  LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                  LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                  LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                  LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                  LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                  LEFT JOIN epsi_client ec ON ec.id = eso.client_id         WHERE ebr.`won_id` = ?           and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseFrom(MySqlSelectParser.java:66)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:247)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:785)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:329)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:5427)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:973)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:235)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:124)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:204)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 154 common frames omitted
16:54:04.996 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id                            AS `saleOrderId`,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                (SELECT COUNT(*)                 WHERE eg.`won_bid_number` = ebr.`won_id`                   AND eg.sku_id = esku.`id`                   AND eg.price IS NOT NULL                   AND eg.price != 0                    )                             AS `totalSkuCount`         FROM epsi_bid_record `ebr`                  LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                  LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number                   LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                  LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                  LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                  LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                  LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                  LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                  LEFT JOIN epsi_client ec ON ec.id = eso.client_id         WHERE ebr.`won_id` = ?           and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/BidRecordMapper.xml]
### The error may involve net.kintex.epsi.purchasing.dao.BidRecordDao.selectManyByWonbidId
### The error occurred while executing a query
### SQL: SELECT ebr.won_id,                ebr.`item`,                ebr.`description`,                ebr.`grade`,                ebr.`sku_id`,                ebr.`quantity`,                ebr.`won_qty`,                ebr.`hkd`,                ebr.`won_hkd`,                ebr.`tag`,                ewb.`exchange_rate`               AS `exchangeRate`,                ebr.`won_price`                   AS `wonPrice`,                esku.`phoneAttribute` ->> '$.color'    AS `color`,                esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,                espu.`spu_brand`                  AS `brand`,                espu.`spu_name`                   AS `modelName`,                ei.`inventory_quantity`           AS `inventory`,                eg.`price`                        AS `singlePrice`,                eso.`salesman`                    AS `salesman`,                eso.id                            AS `saleOrderId`,                ec.`name`                         AS `clientName`,                eb.currency                       AS `currency`,                (SELECT IF(COUNT(*) = eg.price IS NULL OR                           eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',                           COUNT(*) = 0, COUNT(*))                 WHERE eg.`sku_id` = esku.`id`                   AND eg.`won_bid_number` = ebr.`won_id`                   AND eg.sale_order = eso.id                    )                             AS `saleQuantity`             ,                (SELECT COUNT(*)                 WHERE eg.`won_bid_number` = ebr.`won_id`                   AND eg.sku_id = esku.`id`                   AND eg.price IS NOT NULL                   AND eg.price != 0                    )                             AS `totalSkuCount`         FROM epsi_bid_record `ebr`                  LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`                  LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number                   LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id                  LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`                  LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`                  LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`                  LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`                  LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id                  LEFT JOIN epsi_client ec ON ec.id = eso.client_id         WHERE ebr.`won_id` = ?           and eg.sku_id = esku.`id`
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy142.selectManyByWonbidId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectManyByWonbidId(Unknown Source)
	at net.kintex.epsi.information.service.impl.SalesListServiceImpl.selectSalesList(SalesListServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy146.selectSalesList(Unknown Source)
	at net.kintex.epsi.information.controller.SalesListController.getSalesList(SalesListController.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE : SELECT ebr.won_id,
               ebr.`item`,
               ebr.`description`,
               ebr.`grade`,
               ebr.`sku_id`,
               ebr.`quantity`,
               ebr.`won_qty`,
               ebr.`hkd`,
               ebr.`won_hkd`,
               ebr.`tag`,
               ewb.`exchange_rate`               AS `exchangeRate`,
               ebr.`won_price`                   AS `wonPrice`,
               esku.`phoneAttribute` ->> '$.color'    AS `color`,
               esku.`phoneAttribute` ->> '$.capacity' AS `capacity`,
               espu.`spu_brand`                  AS `brand`,
               espu.`spu_name`                   AS `modelName`,
               ei.`inventory_quantity`           AS `inventory`,
               eg.`price`                        AS `singlePrice`,
               eso.`salesman`                    AS `salesman`,
               eso.id                            AS `saleOrderId`,
               ec.`name`                         AS `clientName`,
               eb.currency                       AS `currency`,
               (SELECT IF(COUNT(*) = eg.price IS NULL OR
                          eg.price = 0.0000 AND eso.pay_money_date = '1970-01-01 00:00:00',
                          COUNT(*) = 0, COUNT(*))
                WHERE eg.`sku_id` = esku.`id`
                  AND eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sale_order = eso.id
                   )                             AS `saleQuantity`
            ,
               (SELECT COUNT(*)
                WHERE eg.`won_bid_number` = ebr.`won_id`
                  AND eg.sku_id = esku.`id`
                  AND eg.price IS NOT NULL
                  AND eg.price != 0
                   )                             AS `totalSkuCount`
        FROM epsi_bid_record `ebr`
                 LEFT JOIN epsi_vendor_sku `evsku` ON evsku.`sku_id` = ebr.`sku_id`
                 LEFT JOIN epsi_won_bid `ewb` ON ebr.won_id = ewb.won_number

                 LEFT JOIN epsi_bid eb ON eb.bid_id = ebr.bid_id
                 LEFT JOIN epsi_sku `esku` ON esku.`id` = evsku.`k_sku_id`
                 LEFT JOIN epsi_spu `espu` ON espu.`spu_id` = esku.`spu_id`
                 LEFT JOIN epsi_inventory `ei` ON ebr.`sku_id` = ei.`sku_id`
                 LEFT JOIN epsi_goods `eg` ON ebr.`won_id` = eg.`won_bid_number`
                 LEFT JOIN epsi_sale_order eso ON eg.sale_order = eso.id
                 LEFT JOIN epsi_client ec ON ec.id = eso.client_id
        WHERE ebr.`won_id` = ?
          and eg.sku_id = esku.`id`
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 126 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect FROM, actual WHERE, pos 1537, line 32, column 18, token WHERE
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseFrom(MySqlSelectParser.java:66)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:247)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:785)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:329)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:95)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:5427)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:973)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:235)
	at com.alibaba.druid.sql.parser.SQLSelectParser.query(SQLSelectParser.java:372)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:61)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:124)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:204)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 154 common frames omitted
