<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kintexgroup.hkpsi.inventory.dao.StageDao">
    <resultMap id="stage" type="com.kintexgroup.hkpsi.inventory.entity.Stage">
        <id column="id" jdbcType="BIGINT" property="id" javaType="string"/>
        <result property="wonId" column="won_id" jdbcType="BIGINT" javaType="string"/>
        <result property="imei" column="imei" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="vendorSku" column="vendor_sku" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="tag" column="tag" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="bidId" column="bidId"/>
        <result property="text" column="sku_text"/>
        <result property="vendorGrade" column="vendor_grade"/>
        <result property="color" column="color"/>
        <result property="capacity" column="capacity"/>
        <result property="model" column="model"/>
        <result property="brand" column="spu_brand"/>
        <result property="modelName" column="spu_name"/>
        <result column="created_by" jdbcType="INTEGER" property="createdBy"/>
        <result column="updated_by" jdbcType="INTEGER" property="updatedBy"/>
    </resultMap>

    <delete id="deleteOne" parameterType="java.lang.String">
        DELETE
        FROM `hkpsi_stage`
        WHERE imei = #{imei,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteMany" parameterType="java.util.List">
        DELETE
        FROM `hkpsi_stage`
            WHERE imei IN
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>
    </delete>
    <insert id="insertOne" parameterType="com.kintexgroup.hkpsi.inventory.entity.Stage"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO `hkpsi_stage` (won_id, imei,
                                  vendor_sku, tag, created_by, updated_by)
        values (#{wonId,jdbcType=BIGINT},
                #{imei,jdbcType=VARCHAR},
                #{vendorSku,jdbcType=VARCHAR}, #{tag,jdbcType=VARCHAR},
                #{createdBy,jdbcType=INTEGER}, #{updatedBy,jdbcType=INTEGER})
    </insert>
    <update id="updateOne" parameterType="com.kintexgroup.hkpsi.inventory.entity.Stage">
        UPDATE `hkpsi_stage`
        SET won_id     = #{wonId,jdbcType=BIGINT},

            imei       = #{imei,jdbcType=VARCHAR},
            vendor_sku = #{vendorSku,jdbcType=VARCHAR},
            tag        = #{tag,jdbcType=VARCHAR},
            updated_by = #{updatedBy,jdbcType=INTEGER}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectOne" parameterType="java.lang.String" resultType="com.kintexgroup.hkpsi.inventory.model.StageVO">
        SELECT hkpsi_stage.id                                          as id,
               hkpsi_stage.won_id                                      as wonId,

               hkpsi_stage.imei                                        as imei,
               hkpsi_stage.vendor_sku                                  as vendorSku,
               hkpsi_stage.tag                                         as tag,
               (SELECT JSON_ARRAYAGG(
                           JSON_OBJECT('text', sku_text, 'vendor', vendor_id, 'sku', k_sku_id, 'skuTag', sku_tag))
                FROM `hkpsi_vendor_sku`
                WHERE hkpsi_stage.vendor_sku = hkpsi_vendor_sku.sku_id) as vendorSkus
        FROM `hkpsi_stage`
        WHERE id = #{id,jdbcType=BIGINT}
    </select>
    <select id="checkDuplicate" parameterType="String" resultType="boolean">
        SELECT COUNT(*)
        FROM `hkpsi_stage`
        WHERE imei = #{imei,jdbcType=VARCHAR}
    </select>
    <select id="selectAll" resultMap="stage">
        SELECT id,
               won_id,

               imei,
               vendor_sku,
               tag
        FROM `hkpsi_stage`
    </select>
    <insert id="insert" parameterType="String">
        INSERT INTO `hkpsi_goods` (sale_order, won_bid_number, sku_id, imei1, device_in_time, device_out_time,
                                  created_by, updated_by)
        SELECT 0,
               won_id,
               (SELECT k_sku_id FROM `hkpsi_vendor_sku` WHERE sku_id = hkpsi_stage.vendor_sku) as vendor_sku,
               imei,
               created_at,
               updated_at,
               created_by,
               updated_by
        from `hkpsi_stage`
        WHERE imei = #{imei,jdbcType=VARCHAR}
    </insert>

    <insert id="insertMany" parameterType="java.util.List">
        INSERT INTO `hkpsi_goods` (sale_order, won_bid_number, sku_id, imei1, created_by, updated_by) VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.saleOrder, jdbcType=VARCHAR},
             #{item.wonBidNumber,jdbcType=BIGINT},
             #{item.skuId,jdbcType=VARCHAR},
             #{item.imei1,jdbcType=VARCHAR},
             #{item.createdBy,jdbcType=INTEGER},
             #{item.updatedBy,jdbcType=INTEGER})
        </foreach>
    </insert>

    <select id="selectSkuId" parameterType="String" resultType="java.lang.String">
        SELECT sku_id
        FROM `hkpsi_goods`
        WHERE imei1 = #{item1,jdbcType=VARCHAR}
    </select>

    <insert id="insertInventory" parameterType="String">
        INSERT INTO `hkpsi_inventory`(sku_id, inventory_quantity, created_by, updated_by)
        SELECT sku_id,
               (SELECT COUNT(*) FROM `hkpsi_goods` WHERE sku_id = #{skuId,jdbcType=BIGINT}),
               created_by,
               updated_by
        FROM `hkpsi_goods`
        WHERE sku_id = #{skuId,jdbcType=BIGINT}
    </insert>

    <update id="updateInventory" parameterType="java.lang.String">
        UPDATE `hkpsi_inventory`
        SET inventory_quantity = inventory_quantity +
                                 (SELECT count(*) FROM `hkpsi_goods` WHERE hkpsi_goods.sku_id = #{skuId,jdbcType=BIGINT})
        WHERE sku_id = #{skuId,jdbcType=BIGINT}
    </update>

    <select id="check" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM `hkpsi_inventory`
        WHERE sku_id = #{skuId,jdbcType=BIGINT}
    </select>

    <select id="selectById" resultMap="stage">
        SELECT won_id,
               (SELECT k_sku_id WHERE evs.sku_id = hkpsi_stage.vendor_sku) as vendor_sku,
               imei,
               hkpsi_stage.created_at,
               hkpsi_stage.updated_at,
               hkpsi_stage.created_by,
               hkpsi_stage.updated_by
        from `hkpsi_stage`
                 LEFT JOIN hkpsi_vendor_sku evs ON evs.sku_id = hkpsi_stage.vendor_sku
            WHERE imei IN
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>
    </select>

    <select id="selectOneOrMany" parameterType="com.kintexgroup.hkpsi.inventory.model.StagePageDTO"
            resultMap="stage">
        SELECT `hkpsi_stage`.imei,
               ewb.bid_id                      as `bidId`,
               evs.sku_text,
               hkpsi_stage.vendor_grade         as `vendor_grade`,
               es.`attribute` ->> '$.color'    as color,
               es.`attribute` ->> '$.capacity' as capacity,
               es.`attribute` ->> '$.model'    as model,
               spu.spu_brand,
               spu.spu_name
        FROM hkpsi_stage
                 LEFT JOIN hkpsi_won_bid ewb on ewb.won_number = hkpsi_stage.won_id
                 LEFT JOIN hkpsi_vendor_sku evs on evs.sku_id = `hkpsi_stage`.vendor_sku
                 LEFT JOIN hkpsi_sku es on es.id = evs.k_sku_id
                 LEFT JOIN hkpsi_spu spu on spu.spu_id = es.spu_id
        <where>
            <if test="imei != null and imei != ''">
                `hkpsi_stage`.imei LIKE CONCAT('%', #{imei,jdbcType=VARCHAR}, '%')
            </if>
            <if test="bidId != null and bidId != ''">
                AND ewb.bid_id LIKE CONCAT('%', #{bidId,jdbcType=BIGINT}, '%')
            </if>
            <if test="text != null and text != ''">
                AND evs.sku_text LIKE CONCAT('%', #{text,jdbcType=VARCHAR}, '%')
            </if>
            <if test="grade != null and grade != ''">
                AND evs.sku_grade LIKE CONCAT('%', #{grade,jdbcType=VARCHAR}, '%')
            </if>
            <if test="color != null and color != '' != null">
                AND attribute -> '$.color' LIKE CONCAT('%', #{color,jdbcType=VARCHAR}, '%')
            </if>
            <if test="capacity != null and capacity != ''">
                AND attribute -> '$.capacity' LIKE CONCAT('%', #{capacity,jdbcType=INTEGER}, '%')
            </if>
            <if test="model != null and model != ''">
                AND attribute -> '$.model' LIKE CONCAT('%', #{model,jdbcType=VARCHAR}, '%')
            </if>
            <if test="brand != null and brand != ''">
                AND spu.spu_brand LIKE CONCAT('%', #{brand,jdbcType=VARCHAR}, '%')
            </if>
            <if test="modelName != null and modelName != ''">
                AND spu.spu_name LIKE CONCAT('%', #{modelName,jdbcType=VARCHAR}, '%')
            </if>
        </where>
    </select>

    <insert id="batchInsertStageRecord">
        INSERT hkpsi_stage
            (id, won_id, imei, vendor_sku, tag, vendor_grade, created_by, updated_by)
            VALUES
        <foreach collection="stages" item="stage" separator=",">
            (#{stage.id,jdbcType=VARCHAR},
             #{stage.wonId,jdbcType=VARCHAR}, #{stage.imei,jdbcType=VARCHAR},
             #{stage.vendorSku,jdbcType=VARCHAR}, #{stage.tag,jdbcType=VARCHAR}, #{stage.vendorGrade,jdbcType=VARCHAR},
             #{stage.createdBy,jdbcType=INTEGER},
             #{stage.updatedBy,jdbcType=INTEGER})
        </foreach>
    </insert>
</mapper>