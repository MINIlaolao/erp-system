10:02:47.556 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.SkuDao.batchInsert - <==    Updates: 6349
10:02:47.615 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'batchAddSpu' parameter -1
10:02:47.616 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:32:52.544 [http-nio-34571-exec-3] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 1804927
10:32:52.645 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:32:52.647 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:32:52.655 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:32:52.730 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:32:52.731 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:32:52.737 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:32:52.777 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
10:32:52.778 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
10:32:52.786 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
10:32:52.787 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`,`currency_code`,`currency_name`,`currency_symbol`,`exchange_rate`,`disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
10:32:52.789 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 20(Integer)
10:32:52.799 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 20
10:32:52.816 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
10:32:52.816 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:33:47.456 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
10:33:47.460 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
10:33:47.462 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
10:34:26.295 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
10:34:26.316 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 18681 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
10:34:26.317 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
10:34:26.368 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
10:34:26.369 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
10:34:27.821 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
10:34:27.828 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
10:34:27.829 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
10:34:27.829 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
10:34:27.892 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
10:34:27.892 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1523 ms
10:34:28.483 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
10:34:28.953 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
10:34:28.991 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
10:34:29.067 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
10:34:29.067 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
10:34:29.067 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
10:34:29.067 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
10:34:29.067 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
10:34:29.067 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
10:34:29.067 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
10:34:29.084 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6eb821d2, org.springframework.security.web.context.SecurityContextPersistenceFilter@2416ca49, org.springframework.security.web.header.HeaderWriterFilter@5967ad7d, org.springframework.web.filter.CorsFilter@7fe38293, net.kintex.epsi.user.filter.JwtAuthenticationFilter@6766e2ec, org.springframework.security.web.authentication.logout.LogoutFilter@6c5ef062, net.kintex.epsi.user.filter.AuthenticationFilter@4e3b8353, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@9bd3b63, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@25f2a746, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6d50b727, org.springframework.security.web.access.ExceptionTranslationFilter@20462b7f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@16a591c2]
10:34:29.149 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
10:34:29.173 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
10:34:29.228 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
10:34:29.228 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
10:34:29.229 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
10:34:29.229 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
10:34:29.343 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
10:34:29.358 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
10:34:29.359 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
10:34:29.366 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
10:34:29.397 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
10:34:29.569 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
10:34:29.573 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
10:34:29.574 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
10:34:29.592 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
10:34:29.593 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
10:34:29.618 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
10:34:29.653 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
10:34:29.709 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.863 seconds (JVM running for 4.397)
10:34:30.231 [RMI TCP Connection(2)-192.168.0.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
10:34:30.231 [RMI TCP Connection(2)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
10:34:30.236 [RMI TCP Connection(2)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
10:34:30.257 [RMI TCP Connection(1)-192.168.0.101] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:34:30.661 [RMI TCP Connection(1)-192.168.0.101] INFO  javax.mail - Jakarta Mail version 1.6.5
10:34:30.671 [RMI TCP Connection(1)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
10:34:30.672 [RMI TCP Connection(1)-192.168.0.101] INFO  javax.mail - Tables of loaded providers
10:34:30.672 [RMI TCP Connection(1)-192.168.0.101] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:34:30.672 [RMI TCP Connection(1)-192.168.0.101] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:34:30.672 [RMI TCP Connection(1)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
10:34:36.908 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:34:37.024 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:34:37.093 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:34:37.093 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:34:37.119 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:34:37.119 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:34:37.223 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:34:37.223 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:34:37.223 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:34:37.223 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:34:37.230 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:34:37.233 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:34:37.319 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client` WHERE `name` LIKE CONCAT('%', ?, '%')
10:34:37.319 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client` WHERE `name` LIKE CONCAT('%', ?, '%')
10:34:37.321 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: bu(String)
10:34:37.321 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: b(String)
10:34:37.328 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
10:34:37.330 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` WHERE `name` LIKE CONCAT('%',?,'%') LIMIT ?
10:34:37.331 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
10:34:37.331 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: b(String), 30(Integer)
10:34:37.331 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` WHERE `name` LIKE CONCAT('%',?,'%') LIMIT ?
10:34:37.332 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: bu(String), 30(Integer)
10:34:37.342 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
10:34:37.342 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 8
10:34:37.358 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:34:37.359 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:34:37.363 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
10:34:37.363 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
10:34:37.364 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:34:37.364 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:34:37.365 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:34:37.443 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:34:37.443 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:34:37.450 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:34:37.458 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client` WHERE `name` LIKE CONCAT('%', ?, '%')
10:34:37.459 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: b(String)
10:34:37.466 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
10:34:37.466 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` WHERE `name` LIKE CONCAT('%',?,'%') LIMIT ?
10:34:37.467 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: b(String), 30(Integer)
10:34:37.475 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
10:34:37.487 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
10:34:37.488 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:34:51.771 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:34:51.772 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:34:51.778 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:34:51.867 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
10:34:51.872 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
10:34:51.879 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 0
10:34:56.257 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:34:56.258 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:34:56.265 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:34:56.347 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
10:34:56.348 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
10:34:56.356 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 0
10:35:00.190 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:35:00.191 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:35:00.198 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:35:00.279 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
10:35:00.280 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 1234556(Long)
10:35:00.287 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 0
10:35:14.837 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:35:14.838 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:35:14.845 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:35:14.927 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
10:35:14.928 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
10:35:14.935 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 0
10:35:57.692 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:35:57.692 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:35:57.699 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:35:57.794 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
10:35:57.794 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
10:35:57.803 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
10:35:57.817 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
10:35:57.817 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:36:01.798 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:36:01.799 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:36:01.806 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:36:01.891 [http-nio-34571-exec-9] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? )
10:36:01.893 [http-nio-34571-exec-9] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 541(String)
10:36:01.900 [http-nio-34571-exec-9] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 1
10:36:01.913 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
10:36:01.913 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:36:09.555 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:36:09.556 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:36:09.563 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:36:09.653 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
10:36:09.654 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
10:36:09.664 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
10:36:09.665 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`,`currency_code`,`currency_name`,`currency_symbol`,`exchange_rate`,`disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
10:36:09.667 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 20(Integer)
10:36:09.676 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 20
10:36:09.688 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
10:36:09.688 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:37:14.668 [http-nio-34571-exec-1] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 64976
10:37:14.678 [http-nio-34571-exec-1] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 157317
10:37:14.798 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:37:14.799 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:37:14.809 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:37:14.908 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
10:37:14.908 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
10:37:14.921 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
10:37:14.940 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
10:37:14.940 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:37:15.314 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:37:15.315 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:37:15.325 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:37:15.406 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:37:15.406 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:37:15.417 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:37:15.427 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
10:37:15.428 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
10:37:15.439 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
10:37:15.457 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
10:37:15.457 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:37:15.872 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:37:15.872 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:37:15.883 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:37:15.962 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:37:15.962 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:37:15.972 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:37:15.984 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
10:37:15.984 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
10:37:15.994 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
10:37:15.994 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
10:37:15.995 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
10:37:16.006 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
10:37:16.024 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
10:37:16.024 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:37:28.799 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:37:28.799 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:37:28.808 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:37:28.892 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
10:37:28.893 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
10:37:28.903 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
10:37:28.922 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
10:37:28.922 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:37:30.759 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:37:30.759 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:37:30.768 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:37:30.853 [http-nio-34571-exec-5] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? )
10:37:30.853 [http-nio-34571-exec-5] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 541(String)
10:37:30.863 [http-nio-34571-exec-5] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 1
10:37:30.882 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
10:37:30.882 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:37:34.347 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:37:34.348 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:37:34.358 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:37:34.446 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
10:37:34.446 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
10:37:34.455 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
10:37:34.456 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`,`currency_code`,`currency_name`,`currency_symbol`,`exchange_rate`,`disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
10:37:34.456 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 20(Integer)
10:37:34.477 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 20
10:37:34.495 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
10:37:34.495 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:37:47.862 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:37:47.862 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:37:47.872 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:37:48.012 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==>  Preparing: INSERT INTO `epsi_sale_order` ( `client_id`, `salesman`, `count_price`, `handling_charge`, `other_price`, `date`, `disabled`, created_by, updated_by ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
10:37:48.020 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==> Parameters: 4(Integer), 00(String), 50.0(Double), 0.03(Double), null, 2020-11-20 08:00:00.0(Timestamp), false(Boolean), 0(Integer), 0(Integer)
10:37:48.038 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - <==    Updates: 1
10:37:48.041 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==>  Preparing: SELECT sku_id, inventory_quantity FROM `epsi_inventory` WHERE `sku_id` IN ( ? )
10:37:48.041 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==> Parameters: 541(String)
10:37:48.051 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - <==      Total: 1
10:37:48.052 [http-nio-34571-exec-7] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - ==>  Preparing: update `epsi_inventory` SET inventory_quantity = ? where sku_id in ( ? )
10:37:48.055 [http-nio-34571-exec-7] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - ==> Parameters: 177(Integer), 541(String)
10:37:48.073 [http-nio-34571-exec-7] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - <==    Updates: 1
10:37:48.074 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.G.updateBatchInvoiceSelective - ==>  Preparing: UPDATE epsi_goods SET sale_order = price = WHERE imei1 IN
10:37:48.121 [http-nio-34571-exec-7] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/GoodsMapper.xml]
### The error may involve net.kintex.epsi.sales.dao.GoodsDao.updateBatchInvoiceSelective
### The error occurred while executing an update
### SQL: UPDATE epsi_goods          SET sale_order =                          price =           WHERE imei1 IN
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/GoodsMapper.xml]
### The error may involve net.kintex.epsi.sales.dao.GoodsDao.updateBatchInvoiceSelective
### The error occurred while executing an update
### SQL: UPDATE epsi_goods          SET sale_order =                          price =           WHERE imei1 IN
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy175.updateBatchInvoiceSelective(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getBill(GoodsServiceImpl.java:170)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getBill(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getBill(GoodsController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at jdk.internal.reflect.GeneratedMethodAccessor148.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy214.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 114 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: ERROR. pos 92, line 5, column 11, token WHERE
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:1128)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.bitXor(SQLExprParser.java:129)
	at com.alibaba.druid.sql.parser.SQLExprParser.multiplicative(SQLExprParser.java:225)
	at com.alibaba.druid.sql.parser.SQLExprParser.additive(SQLExprParser.java:2733)
	at com.alibaba.druid.sql.parser.SQLExprParser.shift(SQLExprParser.java:2779)
	at com.alibaba.druid.sql.parser.SQLExprParser.bitAnd(SQLExprParser.java:2539)
	at com.alibaba.druid.sql.parser.SQLExprParser.bitOr(SQLExprParser.java:2558)
	at com.alibaba.druid.sql.parser.SQLExprParser.relationalRest(SQLExprParser.java:3034)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:101)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseUpdateSetItem(SQLExprParser.java:2534)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseUpdateStatment(MySqlSelectParser.java:572)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseUpdateStatement(MySqlStatementParser.java:134)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:243)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 142 common frames omitted
10:40:12.736 [http-nio-34571-exec-8] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 144616
10:40:12.866 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:40:12.866 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:40:12.876 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:40:12.961 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==>  Preparing: INSERT INTO `epsi_sale_order` ( `client_id`, `salesman`, `count_price`, `handling_charge`, `other_price`, `date`, `disabled`, created_by, updated_by ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
10:40:12.962 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==> Parameters: 4(Integer), 00(String), 50.0(Double), 0.03(Double), null, 2020-11-20 08:00:00.0(Timestamp), false(Boolean), 0(Integer), 0(Integer)
10:40:12.980 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - <==    Updates: 1
10:40:12.980 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==>  Preparing: SELECT sku_id, inventory_quantity FROM `epsi_inventory` WHERE `sku_id` IN ( ? )
10:40:12.980 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==> Parameters: 541(String)
10:40:12.989 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - <==      Total: 1
10:40:12.990 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - ==>  Preparing: update `epsi_inventory` SET inventory_quantity = ? where sku_id in ( ? )
10:40:12.990 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - ==> Parameters: 177(Integer), 541(String)
10:40:13.008 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - <==    Updates: 1
10:41:13.327 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.G.updateBatchInvoiceSelective - ==>  Preparing: UPDATE epsi_goods SET sale_order = price = WHERE imei1 IN
10:41:13.358 [http-nio-34571-exec-8] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/GoodsMapper.xml]
### The error may involve net.kintex.epsi.sales.dao.GoodsDao.updateBatchInvoiceSelective
### The error occurred while executing an update
### SQL: UPDATE epsi_goods          SET sale_order =                          price =           WHERE imei1 IN
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/GoodsMapper.xml]
### The error may involve net.kintex.epsi.sales.dao.GoodsDao.updateBatchInvoiceSelective
### The error occurred while executing an update
### SQL: UPDATE epsi_goods          SET sale_order =                          price =           WHERE imei1 IN
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy175.updateBatchInvoiceSelective(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getBill(GoodsServiceImpl.java:170)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getBill(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getBill(GoodsController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at jdk.internal.reflect.GeneratedMethodAccessor148.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy214.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 114 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: ERROR. pos 92, line 5, column 11, token WHERE
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:1128)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.bitXor(SQLExprParser.java:129)
	at com.alibaba.druid.sql.parser.SQLExprParser.multiplicative(SQLExprParser.java:225)
	at com.alibaba.druid.sql.parser.SQLExprParser.additive(SQLExprParser.java:2733)
	at com.alibaba.druid.sql.parser.SQLExprParser.shift(SQLExprParser.java:2779)
	at com.alibaba.druid.sql.parser.SQLExprParser.bitAnd(SQLExprParser.java:2539)
	at com.alibaba.druid.sql.parser.SQLExprParser.bitOr(SQLExprParser.java:2558)
	at com.alibaba.druid.sql.parser.SQLExprParser.relationalRest(SQLExprParser.java:3034)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:101)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseUpdateSetItem(SQLExprParser.java:2534)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseUpdateStatment(MySqlSelectParser.java:572)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseUpdateStatement(MySqlStatementParser.java:134)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:243)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 142 common frames omitted
10:41:18.376 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:41:18.377 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:41:18.386 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:41:18.471 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==>  Preparing: INSERT INTO `epsi_sale_order` ( `client_id`, `salesman`, `count_price`, `handling_charge`, `other_price`, `date`, `disabled`, created_by, updated_by ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
10:41:18.472 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==> Parameters: 4(Integer), 00(String), 50.0(Double), 0.03(Double), null, 2020-11-20 08:00:00.0(Timestamp), false(Boolean), 0(Integer), 0(Integer)
10:41:18.491 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - <==    Updates: 1
10:41:46.741 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==>  Preparing: SELECT sku_id, inventory_quantity FROM `epsi_inventory` WHERE `sku_id` IN ( ? )
10:41:46.741 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==> Parameters: 541(String)
10:41:46.750 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - <==      Total: 1
10:41:46.751 [http-nio-34571-exec-9] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - ==>  Preparing: update `epsi_inventory` SET inventory_quantity = ? where sku_id in ( ? )
10:41:46.751 [http-nio-34571-exec-9] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - ==> Parameters: 177(Integer), 541(String)
10:41:46.769 [http-nio-34571-exec-9] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - <==    Updates: 1
10:41:48.802 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.G.updateBatchInvoiceSelective - ==>  Preparing: UPDATE epsi_goods SET sale_order = price = WHERE imei1 IN
10:41:48.823 [http-nio-34571-exec-9] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/GoodsMapper.xml]
### The error may involve net.kintex.epsi.sales.dao.GoodsDao.updateBatchInvoiceSelective
### The error occurred while executing an update
### SQL: UPDATE epsi_goods          SET sale_order =                          price =           WHERE imei1 IN
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/GoodsMapper.xml]
### The error may involve net.kintex.epsi.sales.dao.GoodsDao.updateBatchInvoiceSelective
### The error occurred while executing an update
### SQL: UPDATE epsi_goods          SET sale_order =                          price =           WHERE imei1 IN
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy175.updateBatchInvoiceSelective(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getBill(GoodsServiceImpl.java:170)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getBill(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getBill(GoodsController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at jdk.internal.reflect.GeneratedMethodAccessor148.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy214.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 114 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: ERROR. pos 92, line 5, column 11, token WHERE
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:1128)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.bitXor(SQLExprParser.java:129)
	at com.alibaba.druid.sql.parser.SQLExprParser.multiplicative(SQLExprParser.java:225)
	at com.alibaba.druid.sql.parser.SQLExprParser.additive(SQLExprParser.java:2733)
	at com.alibaba.druid.sql.parser.SQLExprParser.shift(SQLExprParser.java:2779)
	at com.alibaba.druid.sql.parser.SQLExprParser.bitAnd(SQLExprParser.java:2539)
	at com.alibaba.druid.sql.parser.SQLExprParser.bitOr(SQLExprParser.java:2558)
	at com.alibaba.druid.sql.parser.SQLExprParser.relationalRest(SQLExprParser.java:3034)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:101)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseUpdateSetItem(SQLExprParser.java:2534)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseUpdateStatment(MySqlSelectParser.java:572)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseUpdateStatement(MySqlStatementParser.java:134)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:243)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 142 common frames omitted
10:41:50.134 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:41:50.135 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:41:50.144 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:41:50.229 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==>  Preparing: INSERT INTO `epsi_sale_order` ( `client_id`, `salesman`, `count_price`, `handling_charge`, `other_price`, `date`, `disabled`, created_by, updated_by ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
10:41:50.230 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==> Parameters: 4(Integer), 00(String), 50.0(Double), 0.03(Double), null, 2020-11-20 08:00:00.0(Timestamp), false(Boolean), 0(Integer), 0(Integer)
10:41:50.248 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - <==    Updates: 1
10:50:07.294 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==>  Preparing: SELECT sku_id, inventory_quantity FROM `epsi_inventory` WHERE `sku_id` IN ( ? )
10:50:07.294 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==> Parameters: 541(String)
10:50:07.303 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - <==      Total: 1
10:50:07.304 [http-nio-34571-exec-10] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - ==>  Preparing: update `epsi_inventory` SET inventory_quantity = ? where sku_id in ( ? )
10:50:07.304 [http-nio-34571-exec-10] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - ==> Parameters: 177(Integer), 541(String)
10:50:07.322 [http-nio-34571-exec-10] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - <==    Updates: 1
10:50:07.322 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.updateBatchInvoiceSelective - ==>  Preparing: UPDATE epsi_goods SET sale_order = price = WHERE imei1 IN
10:50:07.341 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:50:07.342 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:50:07.342 [http-nio-34571-exec-10] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/GoodsMapper.xml]
### The error may involve net.kintex.epsi.sales.dao.GoodsDao.updateBatchInvoiceSelective
### The error occurred while executing an update
### SQL: UPDATE epsi_goods          SET sale_order =                          price =           WHERE imei1 IN
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/GoodsMapper.xml]
### The error may involve net.kintex.epsi.sales.dao.GoodsDao.updateBatchInvoiceSelective
### The error occurred while executing an update
### SQL: UPDATE epsi_goods          SET sale_order =                          price =           WHERE imei1 IN
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy175.updateBatchInvoiceSelective(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getBill(GoodsServiceImpl.java:170)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getBill(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getBill(GoodsController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: ERROR. pos 92, line 5, column 11, token WHERE : UPDATE epsi_goods
         SET sale_order =
            
            price = 
         WHERE imei1 IN
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at jdk.internal.reflect.GeneratedMethodAccessor148.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy214.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 114 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: ERROR. pos 92, line 5, column 11, token WHERE
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:1128)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:503)
	at com.alibaba.druid.sql.parser.SQLExprParser.bitXor(SQLExprParser.java:129)
	at com.alibaba.druid.sql.parser.SQLExprParser.multiplicative(SQLExprParser.java:225)
	at com.alibaba.druid.sql.parser.SQLExprParser.additive(SQLExprParser.java:2733)
	at com.alibaba.druid.sql.parser.SQLExprParser.shift(SQLExprParser.java:2779)
	at com.alibaba.druid.sql.parser.SQLExprParser.bitAnd(SQLExprParser.java:2539)
	at com.alibaba.druid.sql.parser.SQLExprParser.bitOr(SQLExprParser.java:2558)
	at com.alibaba.druid.sql.parser.SQLExprParser.relationalRest(SQLExprParser.java:3034)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:101)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseUpdateSetItem(SQLExprParser.java:2534)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseUpdateStatment(MySqlSelectParser.java:572)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseUpdateStatement(MySqlStatementParser.java:134)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:243)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 142 common frames omitted
10:50:07.352 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:50:07.427 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
10:50:07.427 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
10:50:07.436 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
10:50:07.446 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, count(sale_order) as quantity, (count(sale_order)*price) as amount, sum(price)as countPrice FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark
10:50:07.450 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: 3(String)
10:50:07.462 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 1
10:50:07.462 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==>  Preparing: SELECT convert(count_price*(handling_charge/100),decimal(8,2)) as handlingCharge from epsi_sale_order where id= ?
10:50:07.463 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==> Parameters: 3(String)
10:50:07.473 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - <==      Total: 1
10:50:07.490 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsByOrder' parameter -1
10:50:07.490 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
10:50:08.457 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
10:50:08.460 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
10:50:08.462 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
10:50:12.870 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
10:50:12.881 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 18910 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
10:50:12.882 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
10:50:12.918 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
10:50:12.918 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
10:50:14.116 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
10:50:14.123 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
10:50:14.124 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
10:50:14.124 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
10:50:14.187 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
10:50:14.187 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1269 ms
10:50:14.787 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
10:50:15.252 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
10:50:15.290 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
10:50:15.364 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
10:50:15.364 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
10:50:15.364 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
10:50:15.364 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
10:50:15.364 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
10:50:15.364 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
10:50:15.364 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
10:50:15.381 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@43f67d79, org.springframework.security.web.context.SecurityContextPersistenceFilter@6ce4c3d2, org.springframework.security.web.header.HeaderWriterFilter@5c871910, org.springframework.web.filter.CorsFilter@4ed8aef8, net.kintex.epsi.user.filter.JwtAuthenticationFilter@41d46951, org.springframework.security.web.authentication.logout.LogoutFilter@1781d273, net.kintex.epsi.user.filter.AuthenticationFilter@6ba322c4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@72c20a67, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6a91143e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c9f00e5, org.springframework.security.web.access.ExceptionTranslationFilter@3e6bacbf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3b28793f]
10:50:15.449 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
10:50:15.477 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
10:50:15.543 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
10:50:15.544 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
10:50:15.544 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
10:50:15.544 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
10:50:15.672 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
10:50:15.687 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
10:50:15.688 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
10:50:15.696 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
10:50:15.716 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
10:50:15.899 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
10:50:15.904 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
10:50:15.905 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
10:50:15.923 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
10:50:15.924 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
10:50:15.951 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
10:50:15.974 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
10:50:16.024 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.433 seconds (JVM running for 3.94)
10:50:16.538 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
10:50:16.538 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
10:50:16.543 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
10:50:16.560 [RMI TCP Connection(1)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:50:16.939 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - Jakarta Mail version 1.6.5
10:50:16.952 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
10:50:16.953 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - Tables of loaded providers
10:50:16.953 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:50:16.953 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:50:16.953 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
10:58:51.180 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
10:58:51.184 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
10:58:51.186 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
10:58:53.591 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
10:58:53.601 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 19020 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
10:58:53.602 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
10:58:53.639 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
10:58:53.640 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
10:58:54.871 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
10:58:54.878 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
10:58:54.879 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
10:58:54.879 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
10:58:54.945 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
10:58:54.945 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1305 ms
10:58:55.505 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
10:58:55.971 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
10:58:56.009 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
10:58:56.094 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
10:58:56.094 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
10:58:56.094 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
10:58:56.094 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
10:58:56.094 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
10:58:56.094 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
10:58:56.094 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
10:58:56.111 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@9f0d9, org.springframework.security.web.context.SecurityContextPersistenceFilter@8414c2e, org.springframework.security.web.header.HeaderWriterFilter@fd235f5, org.springframework.web.filter.CorsFilter@68ab0080, net.kintex.epsi.user.filter.JwtAuthenticationFilter@16a591c2, org.springframework.security.web.authentication.logout.LogoutFilter@51b4d03b, net.kintex.epsi.user.filter.AuthenticationFilter@453b9a78, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ba322c4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7c1ee566, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@71dabfb7, org.springframework.security.web.access.ExceptionTranslationFilter@492e29b4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1f38142a]
10:58:56.172 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
10:58:56.197 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
10:58:56.252 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
10:58:56.253 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
10:58:56.253 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
10:58:56.253 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
10:58:56.379 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
10:58:56.393 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
10:58:56.394 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
10:58:56.401 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
10:58:56.421 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
10:58:56.594 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
10:58:56.598 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
10:58:56.599 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
10:58:56.620 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
10:58:56.621 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
10:58:56.648 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
10:58:56.684 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
10:58:56.734 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.425 seconds (JVM running for 3.921)
10:58:57.223 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
10:58:57.223 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
10:58:57.228 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
10:58:57.245 [RMI TCP Connection(2)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:58:57.644 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Jakarta Mail version 1.6.5
10:58:57.653 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
10:58:57.653 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Tables of loaded providers
10:58:57.653 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:58:57.653 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
10:58:57.654 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
11:03:00.971 [http-nio-34571-exec-1] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 243366
11:03:01.109 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:03:01.298 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:03:01.326 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:03:01.430 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:03:01.430 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:03:01.441 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:03:01.509 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
11:03:01.510 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
11:03:01.526 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
11:03:01.549 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
11:03:01.549 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:03:02.083 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:03:02.083 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:03:02.093 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:03:02.209 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
11:03:02.212 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
11:03:02.221 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
11:03:02.223 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
11:03:02.224 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
11:03:02.236 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 6
11:03:02.257 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
11:03:02.258 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:04:05.358 [http-nio-34571-exec-3] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 63106
11:04:05.503 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:04:05.504 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:04:05.514 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:04:05.588 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:04:05.589 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:04:05.599 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:04:05.615 [http-nio-34571-exec-3] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
11:04:05.619 [http-nio-34571-exec-3] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
11:04:05.631 [http-nio-34571-exec-3] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
11:04:05.651 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
11:04:05.651 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:05:06.644 [http-nio-34571-exec-4] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 60994
11:05:06.732 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:05:06.733 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:05:06.739 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:05:06.823 [http-nio-34571-exec-4] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? )
11:05:06.824 [http-nio-34571-exec-4] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 541(String)
11:05:06.831 [http-nio-34571-exec-4] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 1
11:05:06.843 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
11:05:06.843 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:06:18.984 [http-nio-34571-exec-5] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 72140
11:06:19.119 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:06:19.120 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:06:19.133 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:06:19.247 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
11:06:19.248 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
11:06:19.258 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
11:06:19.258 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`,`currency_code`,`currency_name`,`currency_symbol`,`exchange_rate`,`disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
11:06:19.260 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 20(Integer)
11:06:19.273 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 20
11:06:19.292 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
11:06:19.292 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:06:44.145 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:06:44.145 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:06:44.156 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:06:44.289 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==>  Preparing: INSERT INTO `epsi_sale_order` ( `client_id`, `salesman`, `count_price`, `handling_charge`, `other_price`, `date`, `disabled`, `exchange_rate`, created_by, updated_by ) values ( ?, ?, ?, ?, ?, ?, ?, ? ?, ? )
11:06:44.340 [http-nio-34571-exec-6] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/SaleOrderMapper.xml]
### The error may involve net.kintex.epsi.sales.dao.SaleOrderDao.creat
### The error occurred while executing an update
### SQL: INSERT INTO `epsi_sale_order`          ( `client_id`, `salesman`, `count_price`, `handling_charge`,                          `other_price`,                                       `date`,                              `disabled`,                                           `exchange_rate`,                          created_by, updated_by )          values          ( ?,             ?,             ?,             ?,                          ?,                                       ?,                              ?,                                           ?                          ?,                 ? )
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? ); nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/SaleOrderMapper.xml]
### The error may involve net.kintex.epsi.sales.dao.SaleOrderDao.creat
### The error occurred while executing an update
### SQL: INSERT INTO `epsi_sale_order`          ( `client_id`, `salesman`, `count_price`, `handling_charge`,                          `other_price`,                                       `date`,                              `disabled`,                                           `exchange_rate`,                          created_by, updated_by )          values          ( ?,             ?,             ?,             ?,                          ?,                                       ?,                              ?,                                           ?                          ?,                 ? )
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? ); nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:271)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy176.creat(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy177.creat(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getBill(GoodsServiceImpl.java:113)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getBill(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getBill(GoodsController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:375)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:681)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:365)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:487)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:83)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy214.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 125 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error. pos 582, line 31, column 14, token ?
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseValueClause(SQLStatementParser.java:6055)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseInsert(MySqlStatementParser.java:4904)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseInsert(MySqlStatementParser.java:53)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:255)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 155 common frames omitted
11:09:53.480 [http-nio-34571-exec-7] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 189142
11:09:53.576 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:09:53.587 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:09:53.594 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:09:53.669 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:09:53.670 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:09:53.677 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:09:53.685 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
11:09:53.686 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
11:09:53.693 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
11:09:53.706 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
11:09:53.706 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:09:59.476 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:09:59.477 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:09:59.483 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:09:59.565 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? )
11:09:59.566 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 541(String)
11:09:59.573 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 1
11:09:59.587 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
11:09:59.587 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:14:43.530 [http-nio-34571-exec-9] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 283943
11:14:43.629 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:14:43.630 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:14:43.636 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:14:43.711 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:14:43.712 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:14:43.719 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:14:43.727 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
11:14:43.728 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
11:14:43.734 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
11:14:43.744 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
11:14:43.744 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:15:00.259 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:15:00.259 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:15:00.265 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:15:00.346 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
11:15:00.347 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
11:15:00.354 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
11:15:00.366 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
11:15:00.366 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:15:03.010 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:15:03.010 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:15:03.017 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:15:03.100 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? )
11:15:03.101 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 541(String)
11:15:03.107 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 1
11:15:03.118 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
11:15:03.118 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:15:40.768 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:15:40.768 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:15:40.776 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:15:40.851 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:15:40.851 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:15:40.858 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:15:40.871 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
11:15:40.871 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
11:15:40.877 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
11:15:40.877 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
11:15:40.878 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
11:15:40.886 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 6
11:15:40.898 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
11:15:40.898 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:15:43.289 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:15:43.289 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:15:43.296 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:15:43.376 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, count(sale_order) as quantity, (count(sale_order)*price) as amount, sum(price)as countPrice FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark
11:15:43.382 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: 3(String)
11:15:43.390 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 1
11:15:43.391 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==>  Preparing: SELECT convert(count_price*(handling_charge/100),decimal(8,2)) as handlingCharge from epsi_sale_order where id= ?
11:15:43.392 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==> Parameters: 3(String)
11:15:43.398 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - <==      Total: 1
11:15:43.409 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsByOrder' parameter -1
11:15:43.409 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:16:36.402 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:16:36.402 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:16:36.409 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:16:36.486 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:16:36.486 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:16:36.492 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:16:36.503 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
11:16:36.503 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
11:16:36.509 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
11:16:36.510 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
11:16:36.510 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
11:16:36.530 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 6
11:16:36.541 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
11:16:36.541 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:16:37.405 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:16:37.406 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:16:37.412 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:16:37.494 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, count(sale_order) as quantity, (count(sale_order)*price) as amount, sum(price)as countPrice FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark
11:16:37.494 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: 3(String)
11:16:37.501 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 1
11:16:37.502 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==>  Preparing: SELECT convert(count_price*(handling_charge/100),decimal(8,2)) as handlingCharge from epsi_sale_order where id= ?
11:16:37.503 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==> Parameters: 3(String)
11:16:37.508 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - <==      Total: 1
11:16:37.519 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsByOrder' parameter -1
11:16:37.519 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:17:26.061 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:17:26.062 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:17:26.068 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:17:26.152 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
11:17:26.152 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
11:17:26.158 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
11:17:26.158 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
11:17:26.158 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
11:17:26.166 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 6
11:17:26.176 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
11:17:26.176 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:17:27.254 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:17:27.255 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:17:27.261 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:17:27.342 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, count(sale_order) as quantity, (count(sale_order)*price) as amount, sum(price)as countPrice FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark
11:17:27.343 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: 3(String)
11:17:27.350 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 1
11:17:27.350 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==>  Preparing: SELECT convert(count_price*(handling_charge/100),decimal(8,2)) as handlingCharge from epsi_sale_order where id= ?
11:17:27.350 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==> Parameters: 3(String)
11:17:27.356 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - <==      Total: 1
11:17:27.366 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsByOrder' parameter -1
11:17:27.366 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:17:53.678 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:17:53.678 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:17:53.684 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:17:53.767 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, count(sale_order) as quantity, (count(sale_order)*price) as amount, sum(price)as countPrice FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark
11:17:53.768 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: 25(String)
11:17:53.774 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 1
11:17:53.774 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==>  Preparing: SELECT convert(count_price*(handling_charge/100),decimal(8,2)) as handlingCharge from epsi_sale_order where id= ?
11:17:53.774 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==> Parameters: 25(String)
11:17:53.780 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - <==      Total: 1
11:17:53.789 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsByOrder' parameter -1
11:17:53.789 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:17:57.587 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:17:57.588 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:17:57.594 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:17:57.677 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, count(sale_order) as quantity, (count(sale_order)*price) as amount, sum(price)as countPrice FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark
11:17:57.678 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: 24(String)
11:17:57.684 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 0
11:17:57.685 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==>  Preparing: SELECT convert(count_price*(handling_charge/100),decimal(8,2)) as handlingCharge from epsi_sale_order where id= ?
11:17:57.685 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==> Parameters: 24(String)
11:17:57.691 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - <==      Total: 1
11:17:57.701 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsByOrder' parameter -1
11:17:57.701 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:18:00.579 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:18:00.580 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:18:00.586 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:18:00.666 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, count(sale_order) as quantity, (count(sale_order)*price) as amount, sum(price)as countPrice FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark
11:18:00.667 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: 25(String)
11:18:00.673 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 1
11:18:00.673 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==>  Preparing: SELECT convert(count_price*(handling_charge/100),decimal(8,2)) as handlingCharge from epsi_sale_order where id= ?
11:18:00.674 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==> Parameters: 25(String)
11:18:00.679 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - <==      Total: 1
11:18:00.689 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsByOrder' parameter -1
11:18:00.689 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:19:43.624 [http-nio-34571-exec-1] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 102935
11:19:43.767 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:19:43.767 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:19:43.778 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:19:43.867 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
11:19:43.867 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
11:19:43.877 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
11:19:43.877 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
11:19:43.878 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
11:19:43.889 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 6
11:19:43.907 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
11:19:43.908 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:19:44.844 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:19:44.845 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:19:44.855 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:19:44.940 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, count(sale_order) as quantity, (count(sale_order)*price) as amount, sum(price)as countPrice FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark
11:19:44.941 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: 3(String)
11:19:44.952 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 1
11:19:44.953 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==>  Preparing: SELECT convert(count_price*(handling_charge/100),decimal(8,2)) as handlingCharge from epsi_sale_order where id= ?
11:19:44.953 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==> Parameters: 3(String)
11:19:44.963 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - <==      Total: 1
11:19:44.981 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsByOrder' parameter -1
11:19:44.981 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:20:15.306 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:20:15.306 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:20:15.316 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:20:15.399 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, count(sale_order) as quantity, (count(sale_order)*price) as amount, sum(price)as countPrice FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark
11:20:15.400 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: 3(String)
11:20:15.410 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 1
11:20:15.410 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==>  Preparing: SELECT convert(count_price*(handling_charge/100),decimal(8,2)) as handlingCharge from epsi_sale_order where id= ?
11:20:15.411 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==> Parameters: 3(String)
11:20:15.420 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - <==      Total: 1
11:20:15.439 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsByOrder' parameter -1
11:20:15.439 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:20:22.127 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:20:22.128 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:20:22.137 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:20:22.221 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, count(sale_order) as quantity, (count(sale_order)*price) as amount, sum(price)as countPrice FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark
11:20:22.222 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: 19(String)
11:20:22.231 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 0
11:20:22.232 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==>  Preparing: SELECT convert(count_price*(handling_charge/100),decimal(8,2)) as handlingCharge from epsi_sale_order where id= ?
11:20:22.232 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==> Parameters: 19(String)
11:20:22.241 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - <==      Total: 1
11:20:22.259 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsByOrder' parameter -1
11:20:22.259 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:20:25.474 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:20:25.474 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:20:25.484 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:20:25.569 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, count(sale_order) as quantity, (count(sale_order)*price) as amount, sum(price)as countPrice FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark
11:20:25.570 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: 21(String)
11:20:25.580 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 1
11:20:25.581 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==>  Preparing: SELECT convert(count_price*(handling_charge/100),decimal(8,2)) as handlingCharge from epsi_sale_order where id= ?
11:20:25.581 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==> Parameters: 21(String)
11:20:25.591 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - <==      Total: 1
11:20:25.608 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsByOrder' parameter -1
11:20:25.609 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:22:38.224 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
11:22:38.228 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
11:22:38.230 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
11:29:30.399 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
11:29:30.413 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 19523 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
11:29:30.414 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
11:29:30.468 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
11:29:30.469 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
11:29:31.758 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
11:29:31.766 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
11:29:31.766 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
11:29:31.767 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
11:29:31.833 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
11:29:31.833 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1364 ms
11:29:32.429 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
11:29:32.927 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
11:29:32.968 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
11:29:33.045 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
11:29:33.045 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
11:29:33.045 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
11:29:33.045 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
11:29:33.045 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
11:29:33.045 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
11:29:33.045 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
11:29:33.062 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@400b3773, org.springframework.security.web.context.SecurityContextPersistenceFilter@180212e7, org.springframework.security.web.header.HeaderWriterFilter@401dc068, org.springframework.web.filter.CorsFilter@5fc02bff, net.kintex.epsi.user.filter.JwtAuthenticationFilter@5107f3ff, org.springframework.security.web.authentication.logout.LogoutFilter@d75dc97, net.kintex.epsi.user.filter.AuthenticationFilter@5967ad7d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3d3b2b73, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ea751df, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3b28793f, org.springframework.security.web.access.ExceptionTranslationFilter@3c9adf17, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@f658f93]
11:29:33.126 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
11:29:33.153 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
11:29:33.217 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
11:29:33.217 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
11:29:33.217 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
11:29:33.217 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
11:29:33.347 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
11:29:33.363 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
11:29:33.364 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
11:29:33.372 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
11:29:33.405 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
11:29:33.580 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
11:29:33.585 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
11:29:33.586 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
11:29:33.607 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
11:29:33.607 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
11:29:33.636 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
11:29:33.661 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
11:29:33.714 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.663 seconds (JVM running for 4.761)
11:29:34.245 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
11:29:34.246 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
11:29:34.251 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
11:29:34.269 [RMI TCP Connection(1)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
11:29:34.671 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - Jakarta Mail version 1.6.5
11:29:34.684 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
11:29:34.685 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - Tables of loaded providers
11:29:34.685 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
11:29:34.685 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
11:29:34.686 [RMI TCP Connection(1)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
11:29:52.969 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:29:53.150 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:29:53.174 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:29:53.275 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:29:53.275 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:29:53.285 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:29:53.344 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
11:29:53.344 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
11:29:53.360 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
11:29:53.383 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
11:29:53.383 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:29:53.590 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:29:53.591 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:29:53.601 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:29:53.715 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
11:29:53.718 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
11:29:53.727 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
11:29:53.729 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
11:29:53.731 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
11:29:53.744 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 6
11:29:53.767 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
11:29:53.767 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:29:55.672 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:29:55.673 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:29:55.682 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:29:55.769 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, count(sale_order) as quantity, (count(sale_order)*price) as amount, sum(price)as countPrice FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark
11:29:55.774 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: 3(String)
11:29:55.786 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 1
11:29:55.787 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==>  Preparing: SELECT convert(count_price*(handling_charge/100),decimal(8,2)) as handlingCharge from epsi_sale_order where id= ?
11:29:55.789 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==> Parameters: 3(String)
11:29:55.799 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - <==      Total: 1
11:29:55.817 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsByOrder' parameter -1
11:29:55.817 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:30:12.546 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:30:12.547 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:30:12.557 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:30:12.631 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:30:12.632 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:30:12.642 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:30:12.663 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id
11:30:12.663 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectOneOrMany_COUNT - ==> Parameters: 
11:30:12.672 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectOneOrMany_COUNT - <==      Total: 1
11:30:12.673 [http-nio-34571-exec-4] DEBUG n.k.e.s.dao.GoodsDao.selectOneOrMany - ==>  Preparing: SELECT goods.imei1, spu.category, spu.spu_brand, spu.spu_name, sku.phoneAttribute, goods.sale_order, goods.price, goods.locked, goods.device_in_time, goods.icloud, goods.device_out_time, goods.disabled FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LIMIT ?
11:30:12.674 [http-nio-34571-exec-4] DEBUG n.k.e.s.dao.GoodsDao.selectOneOrMany - ==> Parameters: 20(Integer)
11:30:12.692 [http-nio-34571-exec-4] DEBUG n.k.e.s.dao.GoodsDao.selectOneOrMany - <==      Total: 16
11:30:12.710 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyGoods' parameter -1
11:30:12.710 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:30:16.352 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:30:16.352 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:30:16.362 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:30:16.436 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:30:16.437 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:30:16.447 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:30:16.460 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
11:30:16.461 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
11:30:16.471 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
11:30:16.472 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
11:30:16.473 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
11:30:16.484 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 6
11:30:16.502 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
11:30:16.502 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:30:46.241 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:30:46.242 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:30:46.251 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:30:46.326 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:30:46.327 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:30:46.336 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:30:46.348 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
11:30:46.351 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
11:30:46.361 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
11:30:46.379 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
11:30:46.379 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:30:47.840 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:30:47.841 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:30:47.850 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:30:47.936 [http-nio-34571-exec-7] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? )
11:30:47.938 [http-nio-34571-exec-7] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 541(String)
11:30:47.947 [http-nio-34571-exec-7] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 1
11:30:47.966 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
11:30:47.966 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:33:45.989 [http-nio-34571-exec-8] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 178018
11:33:46.091 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:33:46.092 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:33:46.099 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:33:46.175 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:33:46.175 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:33:46.183 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:33:46.192 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
11:33:46.192 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
11:33:46.201 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
11:33:46.214 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
11:33:46.214 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:33:46.346 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:33:46.347 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:33:46.354 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:33:46.440 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
11:33:46.440 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
11:33:46.449 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
11:33:46.449 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
11:33:46.450 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
11:33:46.458 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
11:33:46.472 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
11:33:46.472 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:33:52.181 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:33:52.182 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:33:52.189 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:33:52.270 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
11:33:52.271 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
11:33:52.279 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
11:33:52.292 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
11:33:52.292 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:33:53.752 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:33:53.753 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:33:53.762 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:33:53.845 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? )
11:33:53.845 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 541(String)
11:33:53.853 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 1
11:33:53.866 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
11:33:53.866 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:34:33.760 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:34:33.760 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:34:33.771 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:34:33.854 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
11:34:33.854 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123000038(Long)
11:34:33.862 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
11:34:33.874 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
11:34:33.875 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:34:37.202 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:34:37.202 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:34:37.210 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:34:37.292 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? )
11:34:37.292 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 13(String)
11:34:37.299 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 1
11:34:37.313 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
11:34:37.313 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:37:33.495 [http-nio-34571-exec-4] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 176181
11:37:33.595 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:37:33.595 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:37:33.602 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:37:33.678 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:37:33.679 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:37:33.686 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:37:33.694 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
11:37:33.694 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
11:37:33.702 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
11:37:33.714 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
11:37:33.715 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:37:35.298 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:37:35.298 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:37:35.305 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:37:35.392 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
11:37:35.392 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
11:37:35.399 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
11:37:35.399 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
11:37:35.399 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
11:37:35.408 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 6
11:37:35.419 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
11:37:35.419 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:42:29.269 [http-nio-34571-exec-6] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 293849
11:42:29.371 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:42:29.372 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:42:29.380 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:42:29.454 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:42:29.455 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:42:29.462 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:42:29.471 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
11:42:29.472 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
11:42:29.481 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
11:42:29.494 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
11:42:29.494 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:42:29.639 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:42:29.640 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:42:29.647 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:42:29.729 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
11:42:29.729 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
11:42:29.737 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
11:42:29.737 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
11:42:29.737 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
11:42:29.746 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
11:42:29.760 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
11:42:29.760 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:42:37.278 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:42:37.279 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:42:37.286 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:42:37.369 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
11:42:37.369 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
11:42:37.378 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
11:42:37.391 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
11:42:37.391 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:42:40.375 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:42:40.375 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:42:40.383 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:42:40.465 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
11:42:40.466 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 2(Long)
11:42:40.473 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 0
11:42:47.184 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:42:47.184 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:42:47.192 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:42:47.278 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
11:42:47.279 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123000038(Long)
11:42:47.287 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
11:42:47.299 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
11:42:47.299 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:42:49.675 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:42:49.676 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:42:49.683 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:42:49.766 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
11:42:49.766 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 13(String), 541(String)
11:42:49.774 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
11:42:49.797 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
11:42:49.797 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:49:12.526 [http-nio-34571-exec-2] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 382729
11:49:12.653 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:49:12.654 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:49:12.663 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:49:12.738 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:49:12.738 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:49:12.748 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:49:12.770 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
11:49:12.770 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
11:49:12.781 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
11:49:12.798 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
11:49:12.799 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:49:12.897 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:49:12.897 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:49:12.906 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:49:12.990 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
11:49:12.991 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
11:49:13.000 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
11:49:13.001 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
11:49:13.001 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
11:49:13.011 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
11:49:13.028 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
11:49:13.028 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:49:18.929 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:49:18.930 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:49:18.939 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:49:19.024 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
11:49:19.025 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
11:49:19.035 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
11:49:19.053 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
11:49:19.053 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:49:23.395 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:49:23.395 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:49:23.404 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:49:23.487 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
11:49:23.488 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123000038(Long)
11:49:23.497 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
11:49:23.515 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
11:49:23.515 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:49:25.124 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:49:25.125 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:49:25.134 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:49:25.218 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
11:49:25.218 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 13(String), 541(String)
11:49:25.228 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
11:49:25.246 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
11:49:25.246 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:57:55.796 [http-nio-34571-exec-7] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 510551
11:57:55.922 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:57:55.923 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:57:55.932 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:57:56.008 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:57:56.008 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:57:56.023 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:57:56.038 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
11:57:56.039 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
11:57:56.048 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
11:57:56.065 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
11:57:56.065 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:57:56.160 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:57:56.160 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:57:56.170 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:57:56.255 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
11:57:56.255 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
11:57:56.264 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
11:57:56.276 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
11:57:56.276 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
11:57:56.286 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
11:57:56.304 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
11:57:56.304 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:58:06.170 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:58:06.170 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:58:06.180 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:58:06.264 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
11:58:06.265 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
11:58:06.275 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
11:58:06.292 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
11:58:06.292 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:58:10.131 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:58:10.132 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:58:10.141 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:58:10.224 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
11:58:10.225 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123000038(Long)
11:58:10.234 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 0
11:58:18.234 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:58:18.235 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:58:18.244 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:58:18.327 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
11:58:18.328 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123000038(Long)
11:58:18.337 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 0
11:58:53.465 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:58:53.466 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:58:53.475 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:58:53.558 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
11:58:53.559 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 34567234(Long)
11:58:53.568 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
11:58:53.586 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
11:58:53.586 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:58:58.262 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:58:58.263 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:58:58.272 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:58:58.355 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
11:58:58.356 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
11:58:58.366 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
11:58:58.384 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
11:58:58.384 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:59:54.494 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:59:54.495 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:59:54.504 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:59:54.578 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:59:54.578 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:59:54.587 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:59:54.598 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
11:59:54.598 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
11:59:54.608 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
11:59:54.625 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
11:59:54.625 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
11:59:54.875 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
11:59:54.875 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
11:59:54.884 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
11:59:54.968 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
11:59:54.968 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
11:59:54.978 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
11:59:54.978 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
11:59:54.979 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
11:59:54.988 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
11:59:55.005 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
11:59:55.005 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:00:00.430 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:00:00.430 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:00:00.439 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:00:00.523 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
12:00:00.523 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
12:00:00.532 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
12:00:00.549 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
12:00:00.549 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:00:04.969 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:00:04.970 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:00:04.979 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:00:05.063 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
12:00:05.064 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 34567234(Long)
12:00:05.073 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
12:00:05.090 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
12:00:05.090 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:00:06.483 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:00:06.484 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:00:06.493 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:00:06.576 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
12:00:06.577 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
12:00:06.586 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
12:00:06.603 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
12:00:06.603 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:01:56.089 [http-nio-34571-exec-9] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 109486
12:01:56.321 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:01:56.321 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:01:56.339 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:01:56.414 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:01:56.414 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:01:56.431 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:01:56.449 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
12:01:56.449 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
12:01:56.686 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:01:56.687 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:01:56.691 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
12:01:56.705 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:01:56.724 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
12:01:56.724 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:01:56.778 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:01:56.779 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:01:56.798 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:01:56.827 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
12:01:56.827 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
12:01:56.848 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
12:01:56.848 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
12:01:56.848 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
12:01:56.866 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
12:01:56.902 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
12:01:56.902 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:02:04.191 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:02:04.191 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:02:04.209 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:02:04.309 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
12:02:04.310 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
12:02:04.328 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
12:02:04.360 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
12:02:04.360 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:02:08.958 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:02:08.959 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:02:08.984 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:02:09.075 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
12:02:09.075 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 34567234(Long)
12:02:09.097 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
12:02:09.129 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
12:02:09.129 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:02:12.003 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:02:12.004 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:02:12.023 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:02:12.114 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
12:02:12.115 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
12:02:12.129 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
12:02:12.156 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
12:02:12.156 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:03:33.312 [http-nio-34571-exec-4] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 81156
12:03:33.319 [http-nio-34571-exec-4] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 96614
12:03:33.448 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:03:33.449 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:03:33.458 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:03:33.533 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:03:33.533 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:03:33.543 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:03:33.554 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
12:03:33.554 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
12:03:33.565 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
12:03:33.584 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
12:03:33.584 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:03:33.673 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:03:33.674 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:03:33.683 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:03:33.766 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
12:03:33.766 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
12:03:33.776 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
12:03:33.776 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
12:03:33.776 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
12:03:33.786 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
12:03:33.805 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
12:03:33.805 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:03:42.140 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:03:42.140 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:03:42.150 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:03:42.234 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
12:03:42.234 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
12:03:42.244 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
12:03:42.261 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
12:03:42.261 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:03:47.294 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:03:47.295 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:03:47.305 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:03:47.389 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
12:03:47.389 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 34567234(Long)
12:03:47.399 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
12:03:47.417 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
12:03:47.417 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:03:48.623 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:03:48.624 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:03:48.633 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:03:48.717 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
12:03:48.717 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
12:03:48.727 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
12:03:48.744 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
12:03:48.744 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:07:25.210 [http-nio-34571-exec-9] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 216466
12:07:25.351 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:07:25.351 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:07:25.362 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:07:25.438 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:07:25.438 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:07:25.448 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:07:25.460 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
12:07:25.460 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
12:07:25.471 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
12:07:25.490 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
12:07:25.490 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:07:25.684 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:07:25.684 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:07:25.694 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:07:25.779 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
12:07:25.779 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
12:07:25.790 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
12:07:25.802 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
12:07:25.802 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
12:07:25.812 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
12:07:25.832 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
12:07:25.832 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:07:33.432 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:07:33.433 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:07:33.443 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:07:33.528 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
12:07:33.529 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
12:07:33.539 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
12:07:33.559 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
12:07:33.559 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:07:37.940 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:07:37.940 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:07:37.951 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:07:38.037 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
12:07:38.037 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 34567234(Long)
12:07:38.049 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
12:07:38.069 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
12:07:38.069 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:07:39.497 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:07:39.498 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:07:39.508 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:07:39.592 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
12:07:39.592 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
12:07:39.602 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
12:07:39.621 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
12:07:39.621 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:16:01.311 [http-nio-34571-exec-4] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 501691
12:16:01.436 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:16:01.437 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:16:01.446 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:16:01.520 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:16:01.521 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:16:01.530 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:16:01.540 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
12:16:01.540 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
12:16:01.550 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
12:16:01.566 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
12:16:01.566 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:16:01.796 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:16:01.796 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:16:01.805 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:16:01.890 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
12:16:01.890 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
12:16:01.899 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
12:16:01.900 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
12:16:01.900 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
12:16:01.909 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
12:16:01.926 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
12:16:01.926 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:16:12.690 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:16:12.690 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:16:12.699 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:16:12.781 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
12:16:12.782 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
12:16:12.791 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
12:16:12.809 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
12:16:12.809 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:16:16.668 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:16:16.668 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:16:16.677 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:16:16.760 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
12:16:16.761 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 34567234(Long)
12:16:16.770 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
12:16:16.787 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
12:16:16.787 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
12:16:18.067 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
12:16:18.068 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
12:16:18.077 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
12:16:18.160 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
12:16:18.160 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
12:16:18.169 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
12:16:18.186 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
12:16:18.186 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:38:10.235 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:38:10.236 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:38:10.243 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:38:10.318 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:38:10.318 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:38:10.325 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:38:10.333 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
13:38:10.333 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
13:38:10.341 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
13:38:10.353 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
13:38:10.353 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:38:10.815 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:38:10.816 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:38:10.823 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:38:10.896 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:38:10.897 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:38:10.903 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:38:10.911 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
13:38:10.911 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
13:38:10.918 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
13:38:10.918 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
13:38:10.918 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
13:38:10.925 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
13:38:10.937 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
13:38:10.937 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:38:27.401 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:38:27.401 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:38:27.408 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:38:27.487 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
13:38:27.487 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
13:38:27.494 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
13:38:27.506 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
13:38:27.506 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:38:32.656 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:38:32.656 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:38:32.663 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:38:32.743 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
13:38:32.744 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 34567234(Long)
13:38:32.750 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
13:38:32.762 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
13:38:32.763 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:38:34.365 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:38:34.365 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:38:34.372 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:38:34.453 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
13:38:34.453 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
13:38:34.460 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
13:38:34.472 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
13:38:34.472 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:39:34.958 [http-nio-34571-exec-4] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 60486
13:39:35.060 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:39:35.061 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:39:35.069 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:39:35.163 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
13:39:35.164 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
13:39:35.172 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
13:39:35.172 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`,`currency_code`,`currency_name`,`currency_symbol`,`exchange_rate`,`disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
13:39:35.176 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 20(Integer)
13:39:35.185 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 20
13:39:35.200 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
13:39:35.200 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:43:17.840 [http-nio-34571-exec-5] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 222640
13:43:18.001 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:43:18.001 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:43:18.010 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:43:18.084 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:43:18.084 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:43:18.093 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:43:18.104 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
13:43:18.104 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 12(Long)
13:43:18.114 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 0
13:43:24.186 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:43:24.187 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:43:24.196 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:43:24.280 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
13:43:24.280 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 1234567(Long)
13:43:24.289 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 0
13:43:34.866 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:43:34.867 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:43:34.876 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:43:34.962 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
13:43:34.963 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
13:43:34.972 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
13:43:34.989 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
13:43:34.989 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:43:41.770 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:43:41.771 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:43:41.791 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:43:41.881 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
13:43:41.882 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 34567234(Long)
13:43:41.902 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
13:43:41.923 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
13:43:41.923 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:43:43.706 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:43:43.707 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:43:43.729 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:43:44.042 [http-nio-34571-exec-9] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
13:43:44.042 [http-nio-34571-exec-9] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
13:43:44.065 [http-nio-34571-exec-9] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
13:43:44.109 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
13:43:44.109 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:44:13.165 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:44:13.165 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:44:13.174 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:44:13.258 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
13:44:13.258 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
13:44:13.268 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
13:44:13.268 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`,`currency_code`,`currency_name`,`currency_symbol`,`exchange_rate`,`disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
13:44:13.268 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 20(Integer)
13:44:13.278 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 20
13:44:13.295 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
13:44:13.295 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:44:37.501 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:44:37.501 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:44:37.510 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:44:37.595 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
13:44:37.595 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
13:44:37.605 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
13:44:37.622 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
13:44:37.622 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:46:59.305 [http-nio-34571-exec-2] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 141683
13:46:59.401 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:46:59.402 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:46:59.407 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:46:59.480 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:46:59.481 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:46:59.487 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:46:59.494 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
13:46:59.494 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
13:46:59.501 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
13:46:59.512 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
13:46:59.512 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:46:59.797 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:46:59.798 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:46:59.804 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:46:59.886 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
13:46:59.886 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
13:46:59.894 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
13:46:59.894 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
13:46:59.894 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
13:46:59.901 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
13:46:59.912 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
13:46:59.912 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:47:06.167 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:47:06.167 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:47:06.174 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:47:06.256 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
13:47:06.256 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
13:47:06.263 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
13:47:06.275 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
13:47:06.275 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:47:12.352 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:47:12.352 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:47:12.358 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:47:12.438 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
13:47:12.438 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 34567234(Long)
13:47:12.444 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
13:47:12.456 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
13:47:12.456 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
13:47:13.885 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
13:47:13.886 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
13:47:13.892 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
13:47:13.971 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
13:47:13.972 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
13:47:13.978 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
13:47:13.989 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
13:47:13.990 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:02:53.146 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
14:02:53.150 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
14:02:53.152 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
14:04:53.139 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
14:04:53.150 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 21780 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
14:04:53.151 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
14:04:53.189 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
14:04:53.189 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
14:04:54.403 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
14:04:54.410 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
14:04:54.410 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
14:04:54.411 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
14:04:54.477 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
14:04:54.477 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1288 ms
14:04:55.071 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
14:04:55.549 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
14:04:55.587 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
14:04:55.662 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
14:04:55.662 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
14:04:55.662 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
14:04:55.662 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
14:04:55.662 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
14:04:55.662 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
14:04:55.662 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
14:04:55.679 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2dffd653, org.springframework.security.web.context.SecurityContextPersistenceFilter@1236bd6b, org.springframework.security.web.header.HeaderWriterFilter@3e288056, org.springframework.web.filter.CorsFilter@172f906, net.kintex.epsi.user.filter.JwtAuthenticationFilter@68359afb, org.springframework.security.web.authentication.logout.LogoutFilter@b7fadc, net.kintex.epsi.user.filter.AuthenticationFilter@640c8c66, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@48befcf5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ee378c6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@19d3af2, org.springframework.security.web.access.ExceptionTranslationFilter@72716017, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6138b4b4]
14:04:55.735 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
14:04:55.760 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
14:04:55.814 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
14:04:55.815 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
14:04:55.815 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
14:04:55.815 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
14:04:55.931 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
14:04:55.945 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
14:04:55.946 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
14:04:55.954 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
14:04:55.974 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
14:04:56.159 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
14:04:56.164 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
14:04:56.165 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
14:04:56.185 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
14:04:56.186 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
14:04:56.214 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
14:04:56.238 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
14:04:56.291 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.438 seconds (JVM running for 4.418)
14:04:56.543 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
14:04:56.543 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
14:04:56.548 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
14:04:56.565 [RMI TCP Connection(2)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
14:04:56.969 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Jakarta Mail version 1.6.5
14:04:56.981 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
14:04:56.982 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Tables of loaded providers
14:04:56.982 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
14:04:56.982 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
14:04:56.983 [RMI TCP Connection(2)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
14:05:00.492 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:05:00.681 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:05:00.704 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:05:00.805 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:05:00.806 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:05:00.815 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:05:00.875 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
14:05:00.876 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
14:05:00.891 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
14:05:00.912 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:05:00.913 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:05:01.121 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:05:01.121 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:05:01.131 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:05:01.248 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
14:05:01.251 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
14:05:01.260 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
14:05:01.262 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
14:05:01.264 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
14:05:01.277 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 6
14:05:01.300 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
14:05:01.300 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:05:03.322 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:05:03.322 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:05:03.332 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:05:03.406 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:05:03.407 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:05:03.418 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:05:03.435 [http-nio-34571-exec-3] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:05:03.438 [http-nio-34571-exec-3] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
14:05:03.450 [http-nio-34571-exec-3] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:05:03.468 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:05:03.468 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:05:03.735 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:05:03.735 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:05:03.745 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:05:03.831 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, count(sale_order) as quantity, (count(sale_order)*price) as amount, sum(price)as countPrice FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark
14:05:03.835 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: 3(String)
14:05:03.848 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 1
14:05:03.849 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==>  Preparing: SELECT convert(count_price*(handling_charge/100),decimal(8,2)) as handlingCharge from epsi_sale_order where id= ?
14:05:03.850 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==> Parameters: 3(String)
14:05:03.859 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - <==      Total: 1
14:05:03.877 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsByOrder' parameter -1
14:05:03.877 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:05:08.209 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:05:08.210 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:05:08.220 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:05:08.305 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:05:08.306 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 34567234(Long)
14:05:08.316 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:05:08.334 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:05:08.334 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:05:10.011 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:05:10.011 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:05:10.021 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:05:10.107 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
14:05:10.109 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
14:05:10.120 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
14:05:10.138 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
14:05:10.138 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:06:02.134 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:06:02.135 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:06:02.144 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:06:02.219 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:06:02.220 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:06:02.229 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:06:02.239 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
14:06:02.239 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
14:06:02.250 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
14:06:02.268 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:06:02.268 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:06:02.663 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:06:02.663 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:06:02.674 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:06:02.749 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:06:02.749 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:06:02.759 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:06:02.773 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:06:02.773 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:06:02.783 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:06:02.784 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:06:02.784 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
14:06:02.795 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
14:06:02.814 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:06:02.814 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:06:07.912 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:06:07.913 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:06:07.923 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:06:08.006 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:06:08.007 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
14:06:08.017 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:06:08.034 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:06:08.035 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:06:11.930 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:06:11.930 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:06:11.940 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:06:12.025 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:06:12.026 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 34567234(Long)
14:06:12.036 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:06:12.053 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:06:12.053 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:06:13.167 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:06:13.167 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:06:13.177 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:06:13.263 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
14:06:13.263 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
14:06:13.273 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
14:06:13.291 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
14:06:13.291 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:06:22.618 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:06:22.619 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:06:22.630 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:06:22.722 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:06:22.723 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:06:22.732 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:06:22.733 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`,`currency_code`,`currency_name`,`currency_symbol`,`exchange_rate`,`disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:06:22.736 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 20(Integer)
14:06:22.748 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 20
14:06:22.766 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:06:22.766 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:06:43.952 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:06:43.952 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:06:43.962 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:06:44.043 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:06:44.043 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:06:44.052 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:06:44.071 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id
14:06:44.072 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectOneOrMany_COUNT - ==> Parameters: 
14:06:44.081 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectOneOrMany_COUNT - <==      Total: 1
14:06:44.081 [http-nio-34571-exec-3] DEBUG n.k.e.s.dao.GoodsDao.selectOneOrMany - ==>  Preparing: SELECT goods.imei1, spu.category, spu.spu_brand, spu.spu_name, sku.phoneAttribute, goods.sale_order, goods.price, goods.locked, goods.device_in_time, goods.icloud, goods.device_out_time, goods.disabled FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LIMIT ?
14:06:44.082 [http-nio-34571-exec-3] DEBUG n.k.e.s.dao.GoodsDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:06:44.096 [http-nio-34571-exec-3] DEBUG n.k.e.s.dao.GoodsDao.selectOneOrMany - <==      Total: 16
14:06:44.114 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyGoods' parameter -1
14:06:44.114 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:06:50.889 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:06:50.889 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:06:50.898 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:06:50.979 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:06:50.979 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:06:50.988 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:06:51.000 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:06:51.001 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:06:51.010 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:06:51.011 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`,`currency_code`,`currency_name`,`currency_symbol`,`exchange_rate`,`disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:06:51.012 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 20(Integer)
14:06:51.031 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 20
14:06:51.048 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:06:51.048 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:11:26.056 [http-nio-34571-exec-5] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 275002
14:11:26.184 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:11:26.184 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:11:26.194 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:11:26.269 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:11:26.269 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:11:26.278 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:11:26.289 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:11:26.290 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
14:11:26.300 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:11:26.317 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:11:26.317 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:11:30.923 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:11:30.924 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:11:30.933 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:11:31.017 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:11:31.018 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 34567234(Long)
14:11:31.028 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:11:31.045 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:11:31.045 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:11:32.439 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:11:32.439 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:11:32.449 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:11:32.533 [http-nio-34571-exec-7] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
14:11:32.533 [http-nio-34571-exec-7] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
14:11:32.543 [http-nio-34571-exec-7] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
14:11:32.560 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
14:11:32.560 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:11:37.196 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:11:37.197 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:11:37.206 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:11:37.280 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:11:37.281 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:11:37.289 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:11:37.300 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
14:11:37.300 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
14:11:37.311 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
14:11:37.328 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:11:37.328 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:11:37.701 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:11:37.702 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:11:37.711 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:11:37.785 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:11:37.786 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:11:37.795 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:11:37.807 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:11:37.807 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:11:37.815 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:11:37.816 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:11:37.816 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
14:11:37.825 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
14:11:37.842 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:11:37.842 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:11:45.556 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:11:45.556 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:11:45.565 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:11:45.712 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:11:45.712 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:11:45.721 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:11:46.789 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:11:46.790 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:11:46.799 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:11:46.882 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
14:11:46.882 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
14:11:46.893 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
14:11:46.909 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:11:46.909 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:11:50.548 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:11:50.549 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:11:50.558 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:11:50.645 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
14:11:50.645 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
14:11:50.654 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
14:11:50.655 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
14:11:50.655 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
14:11:50.666 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 6
14:11:50.684 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
14:11:50.684 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:11:59.659 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:11:59.660 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:11:59.669 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:11:59.752 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:11:59.753 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
14:11:59.763 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:11:59.779 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:11:59.779 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:12:09.371 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:12:09.371 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:12:09.381 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:12:09.465 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:12:09.466 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 34567234(Long)
14:12:09.476 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:12:09.492 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:12:09.492 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:12:10.689 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:12:10.689 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:12:10.698 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:12:10.782 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
14:12:10.782 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
14:12:10.791 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
14:12:10.808 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
14:12:10.808 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:12:26.253 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:12:26.253 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:12:26.262 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:12:26.347 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:12:26.347 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:12:26.355 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:12:26.356 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`,`currency_code`,`currency_name`,`currency_symbol`,`exchange_rate`,`disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:12:26.356 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 20(Integer)
14:12:26.366 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 20
14:12:26.381 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:12:26.381 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:14:08.545 [http-nio-34571-exec-8] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 102164
14:14:08.675 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:14:08.675 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:14:08.684 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:14:08.758 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:14:08.759 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:14:08.767 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:14:08.777 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:14:08.778 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
14:14:08.787 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:14:08.802 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:14:08.802 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:14:14.760 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:14:14.761 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:14:14.770 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:14:14.853 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:14:14.854 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 34567234(Long)
14:14:14.863 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:14:14.880 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:14:14.880 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:14:16.052 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:14:16.053 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:14:16.062 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:14:16.145 [http-nio-34571-exec-10] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
14:14:16.146 [http-nio-34571-exec-10] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
14:14:16.155 [http-nio-34571-exec-10] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
14:14:16.171 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
14:14:16.171 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:14:21.588 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:14:21.589 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:14:21.598 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:14:21.674 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:14:21.675 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:14:21.683 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:14:21.693 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
14:14:21.693 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
14:14:21.702 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
14:14:21.718 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:14:21.718 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:14:22.084 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:14:22.084 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:14:22.094 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:14:22.168 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:14:22.168 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:14:22.177 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:14:22.187 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:14:22.187 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:14:22.195 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:14:22.197 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:14:22.197 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
14:14:22.205 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
14:14:22.222 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:14:22.222 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:14:29.064 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:14:29.064 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:14:29.073 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:14:29.158 [http-nio-34571-exec-3] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:14:29.159 [http-nio-34571-exec-3] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
14:14:29.167 [http-nio-34571-exec-3] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:14:29.183 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:14:29.183 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:14:34.314 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:14:34.314 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:14:34.323 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:14:34.407 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:14:34.408 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 3456234(Long)
14:14:34.416 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 0
14:14:39.960 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:14:39.960 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:14:39.969 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:14:40.053 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:14:40.054 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 34567234(Long)
14:14:40.064 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:14:40.081 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:14:40.081 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:14:41.028 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:14:41.028 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:14:41.037 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:14:41.123 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
14:14:41.123 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
14:14:41.133 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
14:14:41.150 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
14:14:41.150 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:14:56.262 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:14:56.262 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:14:56.271 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:14:56.354 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:14:56.355 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:14:56.363 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:14:56.363 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`,`currency_code`,`currency_name`,`currency_symbol`,`exchange_rate`,`disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:14:56.364 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 20(Integer)
14:14:56.373 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 20
14:14:56.389 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:14:56.389 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:15:35.367 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:15:35.367 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:15:35.376 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:15:35.503 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==>  Preparing: INSERT INTO `epsi_sale_order` ( `client_id`, `salesman`, `count_price`, `handling_charge`, `other_price`, `date`, `disabled`, `exchange_rate`, created_by, updated_by ) values ( ?, ?, ?, ?, ?, ?, ?, ? ?, ? )
14:15:35.552 [http-nio-34571-exec-8] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/SaleOrderMapper.xml]
### The error may involve net.kintex.epsi.sales.dao.SaleOrderDao.creat
### The error occurred while executing an update
### SQL: INSERT INTO `epsi_sale_order`          ( `client_id`, `salesman`, `count_price`, `handling_charge`,                          `other_price`,                                       `date`,                              `disabled`,                                           `exchange_rate`,                          created_by, updated_by )          values          ( ?,             ?,             ?,             ?,                          ?,                                       ?,                              ?,                                           ?                          ?,                 ? )
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? ); nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/SaleOrderMapper.xml]
### The error may involve net.kintex.epsi.sales.dao.SaleOrderDao.creat
### The error occurred while executing an update
### SQL: INSERT INTO `epsi_sale_order`          ( `client_id`, `salesman`, `count_price`, `handling_charge`,                          `other_price`,                                       `date`,                              `disabled`,                                           `exchange_rate`,                          created_by, updated_by )          values          ( ?,             ?,             ?,             ?,                          ?,                                       ?,                              ?,                                           ?                          ?,                 ? )
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? ); nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:271)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy176.creat(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy177.creat(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getBill(GoodsServiceImpl.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getBill(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getBill(GoodsController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:375)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:681)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:365)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:487)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:83)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy214.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 125 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error. pos 582, line 31, column 14, token ?
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseValueClause(SQLStatementParser.java:6055)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseInsert(MySqlStatementParser.java:4904)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseInsert(MySqlStatementParser.java:53)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:255)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 155 common frames omitted
14:18:44.420 [http-nio-34571-exec-9] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 188868
14:18:44.554 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:18:44.555 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:18:44.564 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:18:44.639 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:18:44.640 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:18:44.649 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:18:44.660 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
14:18:44.661 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
14:18:44.671 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
14:18:44.689 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:18:44.689 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:18:44.930 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:18:44.930 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:18:44.939 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:18:45.024 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:18:45.025 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:18:45.034 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:18:45.035 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:18:45.035 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
14:18:45.045 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
14:18:45.063 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:18:45.063 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:18:53.139 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:18:53.140 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:18:53.150 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:18:53.234 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:18:53.235 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
14:18:53.245 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:18:53.263 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:18:53.263 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:18:58.908 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:18:58.909 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:18:58.918 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:18:59.003 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:18:59.004 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 34567234(Long)
14:18:59.013 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:18:59.032 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:18:59.032 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:19:00.121 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:19:00.122 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:19:00.131 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:19:00.215 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
14:19:00.216 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
14:19:00.225 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
14:19:00.244 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
14:19:00.244 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:19:12.386 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:19:12.386 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:19:12.397 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:19:12.481 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:19:12.482 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:19:12.491 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:19:12.492 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`,`currency_code`,`currency_name`,`currency_symbol`,`exchange_rate`,`disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:19:12.492 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 20(Integer)
14:19:12.502 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 20
14:19:12.521 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:19:12.521 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:21:18.752 [http-nio-34571-exec-5] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 126232
14:21:18.844 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:21:18.844 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:21:18.851 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:21:18.926 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:21:18.926 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:21:18.933 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:21:18.943 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
14:21:18.943 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
14:21:18.950 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
14:21:18.950 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
14:21:18.950 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
14:21:18.970 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 6
14:21:18.982 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
14:21:18.982 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:24:34.741 [http-nio-34571-exec-6] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 195760
14:24:34.836 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:24:34.836 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:24:34.843 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:24:34.918 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:24:34.918 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:24:34.925 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:24:34.933 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:24:34.934 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
14:24:34.941 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:24:34.953 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:24:34.953 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:24:39.060 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:24:39.061 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:24:39.068 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:24:39.149 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:24:39.149 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 34567234(Long)
14:24:39.156 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:24:39.169 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:24:39.169 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:24:40.460 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:24:40.461 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:24:40.467 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:24:40.552 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
14:24:40.552 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
14:24:40.561 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
14:24:40.578 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
14:24:40.578 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:24:47.434 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:24:47.434 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:24:47.441 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:24:47.515 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:24:47.515 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:24:47.521 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:24:47.529 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
14:24:47.529 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
14:24:47.536 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
14:24:47.547 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:24:47.547 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:24:47.957 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:24:47.957 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:24:47.964 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:24:48.040 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:24:48.040 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:24:48.047 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:24:48.055 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:24:48.055 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:24:48.062 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:24:48.062 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:24:48.062 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
14:24:48.069 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
14:24:48.081 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:24:48.081 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:24:53.559 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:24:53.559 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:24:53.566 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:24:53.647 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:24:53.647 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
14:24:53.655 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:24:53.667 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:24:53.667 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:24:57.648 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:24:57.648 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:24:57.655 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:24:57.737 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:24:57.738 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 34567234(Long)
14:24:57.744 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:24:57.756 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:24:57.756 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:24:58.728 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:24:58.728 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:24:58.735 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:24:58.817 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
14:24:58.818 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
14:24:58.824 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
14:24:58.837 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
14:24:58.837 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:25:09.966 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:25:09.967 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:25:09.974 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:25:10.057 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:25:10.057 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:25:10.063 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:25:10.063 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`,`currency_code`,`currency_name`,`currency_symbol`,`exchange_rate`,`disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:25:10.064 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 20(Integer)
14:25:10.070 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 20
14:25:10.082 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:25:10.082 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:26:07.038 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:26:07.038 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:26:07.045 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:26:07.118 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:26:07.118 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:26:07.125 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:26:07.133 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.G.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id
14:26:07.134 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.G.selectOneOrMany_COUNT - ==> Parameters: 
14:26:07.140 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.G.selectOneOrMany_COUNT - <==      Total: 1
14:26:07.140 [http-nio-34571-exec-5] DEBUG n.k.e.s.dao.GoodsDao.selectOneOrMany - ==>  Preparing: SELECT goods.imei1, spu.category, spu.spu_brand, spu.spu_name, sku.phoneAttribute, goods.sale_order, goods.price, goods.locked, goods.device_in_time, goods.icloud, goods.device_out_time, goods.disabled FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LIMIT ?
14:26:07.150 [http-nio-34571-exec-5] DEBUG n.k.e.s.dao.GoodsDao.selectOneOrMany - ==> Parameters: 20(Integer)
14:26:07.161 [http-nio-34571-exec-5] DEBUG n.k.e.s.dao.GoodsDao.selectOneOrMany - <==      Total: 16
14:26:07.173 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyGoods' parameter -1
14:26:07.173 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:26:08.309 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:26:08.309 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:26:08.316 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:26:08.391 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:26:08.391 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:26:08.397 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:26:08.407 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
14:26:08.407 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
14:26:08.413 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
14:26:08.413 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
14:26:08.414 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
14:26:08.420 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 6
14:26:08.432 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
14:26:08.432 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:29:43.215 [http-nio-34571-exec-7] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 214782
14:29:43.378 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:29:43.378 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:29:43.389 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:29:43.463 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:29:43.463 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:29:43.474 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:29:43.487 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
14:29:43.487 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
14:29:43.499 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
14:29:43.519 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:29:43.519 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:29:43.751 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:29:43.751 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:29:43.762 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:29:43.849 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:29:43.849 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:29:43.860 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:29:43.860 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:29:43.860 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
14:29:43.871 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
14:29:43.891 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:29:43.891 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:29:48.970 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:29:48.971 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:29:48.981 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:29:49.065 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:29:49.066 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
14:29:49.077 [http-nio-34571-exec-9] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:29:49.098 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:29:49.098 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:29:53.164 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:29:53.164 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:29:53.175 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:29:53.261 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:29:53.261 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 34567234(Long)
14:29:53.272 [http-nio-34571-exec-10] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:29:53.293 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:29:53.293 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:29:54.607 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:29:54.607 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:29:54.617 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:29:54.702 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? , ? )
14:29:54.703 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 3(String), 541(String)
14:29:54.714 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 2
14:29:54.735 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
14:29:54.735 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:30:14.764 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:30:14.764 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:30:14.775 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:30:14.860 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:30:14.860 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:30:14.871 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:30:14.871 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`,`currency_code`,`currency_name`,`currency_symbol`,`exchange_rate`,`disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:30:14.871 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 20(Integer)
14:30:14.883 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 20
14:30:14.904 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:30:14.904 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:30:39.650 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:30:39.651 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:30:39.662 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:30:39.747 [http-nio-34571-exec-3] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==>  Preparing: INSERT INTO `epsi_sale_order` ( `client_id`, `salesman`, `count_price`, `handling_charge`, `other_price`, `date`, `disabled`, `exchange_rate`, created_by, updated_by ) values ( ?, ?, ?, ?, ?, ?, ?, ? ?, ? )
14:30:39.759 [http-nio-34571-exec-3] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/SaleOrderMapper.xml]
### The error may involve net.kintex.epsi.sales.dao.SaleOrderDao.creat
### The error occurred while executing an update
### SQL: INSERT INTO `epsi_sale_order`          ( `client_id`, `salesman`, `count_price`, `handling_charge`,                          `other_price`,                                       `date`,                              `disabled`,                                           `exchange_rate`,                          created_by, updated_by )          values          ( ?,             ?,             ?,             ?,                          ?,                                       ?,                              ?,                                           ?                          ?,                 ? )
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? ); nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/SaleOrderMapper.xml]
### The error may involve net.kintex.epsi.sales.dao.SaleOrderDao.creat
### The error occurred while executing an update
### SQL: INSERT INTO `epsi_sale_order`          ( `client_id`, `salesman`, `count_price`, `handling_charge`,                          `other_price`,                                       `date`,                              `disabled`,                                           `exchange_rate`,                          created_by, updated_by )          values          ( ?,             ?,             ?,             ?,                          ?,                                       ?,                              ?,                                           ?                          ?,                 ? )
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? ); nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:271)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy176.creat(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy177.creat(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getBill(GoodsServiceImpl.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getBill(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getBill(GoodsController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:375)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:681)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:365)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:487)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:83)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy214.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 125 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error. pos 582, line 31, column 14, token ?
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseValueClause(SQLStatementParser.java:6055)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseInsert(MySqlStatementParser.java:4904)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseInsert(MySqlStatementParser.java:53)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:255)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 155 common frames omitted
14:35:14.443 [http-nio-34571-exec-4] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 274685
14:35:14.593 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:35:14.593 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:35:14.602 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:35:14.685 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:35:14.685 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:35:14.694 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:35:14.704 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
14:35:14.705 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
14:35:14.714 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
14:35:14.731 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
14:35:14.731 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:35:15.399 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:35:15.399 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:35:15.408 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:35:15.492 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
14:35:15.492 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
14:35:15.501 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
14:35:15.501 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
14:35:15.502 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
14:35:15.511 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 6
14:35:15.527 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
14:35:15.527 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:35:19.261 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:35:19.262 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:35:19.271 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:35:19.349 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:35:19.349 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:35:19.358 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:35:19.368 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
14:35:19.368 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
14:35:19.377 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
14:35:19.378 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
14:35:19.378 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
14:35:19.389 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
14:35:19.405 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
14:35:19.405 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:35:26.646 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:35:26.646 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:35:26.656 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:35:26.740 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:35:26.741 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: null
14:35:26.751 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 0
14:35:37.585 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:35:37.586 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:35:37.595 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:35:37.678 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
14:35:37.679 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
14:35:37.688 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
14:35:37.706 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
14:35:37.706 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:35:39.635 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:35:39.636 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:35:39.645 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:35:39.729 [http-nio-34571-exec-9] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? )
14:35:39.729 [http-nio-34571-exec-9] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 541(String)
14:35:39.738 [http-nio-34571-exec-9] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 1
14:35:39.756 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
14:35:39.756 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:35:52.436 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:35:52.436 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:35:52.445 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:35:52.531 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
14:35:52.531 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
14:35:52.541 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
14:35:52.552 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`,`currency_code`,`currency_name`,`currency_symbol`,`exchange_rate`,`disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
14:35:52.553 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 20(Integer)
14:35:52.562 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 20
14:35:52.578 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
14:35:52.579 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
14:36:26.304 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:36:26.305 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:36:26.314 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:36:26.398 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==>  Preparing: INSERT INTO `epsi_sale_order` ( `client_id`, `salesman`, `count_price`, `handling_charge`, `other_price`, `date`, `disabled`, `exchange_rate`, created_by, updated_by ) values ( ?, ?, ?, ?, ?, ?, ?, ? ?, ? )
14:36:26.407 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/SaleOrderMapper.xml]
### The error may involve net.kintex.epsi.sales.dao.SaleOrderDao.creat
### The error occurred while executing an update
### SQL: INSERT INTO `epsi_sale_order`          ( `client_id`, `salesman`, `count_price`, `handling_charge`,                          `other_price`,                                       `date`,                              `disabled`,                                           `exchange_rate`,                          created_by, updated_by )          values          ( ?,             ?,             ?,             ?,                          ?,                                       ?,                              ?,                                           ?                          ?,                 ? )
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? ); nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/SaleOrderMapper.xml]
### The error may involve net.kintex.epsi.sales.dao.SaleOrderDao.creat
### The error occurred while executing an update
### SQL: INSERT INTO `epsi_sale_order`          ( `client_id`, `salesman`, `count_price`, `handling_charge`,                          `other_price`,                                       `date`,                              `disabled`,                                           `exchange_rate`,                          created_by, updated_by )          values          ( ?,             ?,             ?,             ?,                          ?,                                       ?,                              ?,                                           ?                          ?,                 ? )
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? ); nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:271)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy176.creat(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy177.creat(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getBill(GoodsServiceImpl.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getBill(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getBill(GoodsController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:375)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:681)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:365)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:487)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:83)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy214.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 125 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error. pos 582, line 31, column 14, token ?
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseValueClause(SQLStatementParser.java:6055)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseInsert(MySqlStatementParser.java:4904)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseInsert(MySqlStatementParser.java:53)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:255)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 155 common frames omitted
14:37:45.980 [http-nio-34571-exec-2] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 79574
14:37:46.100 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT user_id, user_account, user_password, disabled, created_at, created_by, updated_at, updated_by FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
14:37:46.100 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
14:37:46.109 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
14:52:31.841 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==>  Preparing: INSERT INTO `epsi_sale_order` ( `client_id`, `salesman`, `count_price`, `handling_charge`, `other_price`, `date`, `disabled`, `exchange_rate`, created_by, updated_by ) values ( ?, ?, ?, ?, ?, ?, ?, ? ?, ? )
14:52:31.850 [http-nio-34571-exec-2] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/SaleOrderMapper.xml]
### The error may involve net.kintex.epsi.sales.dao.SaleOrderDao.creat
### The error occurred while executing an update
### SQL: INSERT INTO `epsi_sale_order`          ( `client_id`, `salesman`, `count_price`, `handling_charge`,                          `other_price`,                                       `date`,                              `disabled`,                                           `exchange_rate`,                          created_by, updated_by )          values          ( ?,             ?,             ?,             ?,                          ?,                                       ?,                              ?,                                           ?                          ?,                 ? )
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? ); nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/SaleOrderMapper.xml]
### The error may involve net.kintex.epsi.sales.dao.SaleOrderDao.creat
### The error occurred while executing an update
### SQL: INSERT INTO `epsi_sale_order`          ( `client_id`, `salesman`, `count_price`, `handling_charge`,                          `other_price`,                                       `date`,                              `disabled`,                                           `exchange_rate`,                          created_by, updated_by )          values          ( ?,             ?,             ?,             ?,                          ?,                                       ?,                              ?,                                           ?                          ?,                 ? )
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? ); nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:271)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy176.creat(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy177.creat(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getBill(GoodsServiceImpl.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getBill(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getBill(GoodsController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error. pos 582, line 31, column 14, token ? : INSERT INTO `epsi_sale_order`
         ( `client_id`, `salesman`, `count_price`, `handling_charge`,
            
            `other_price`,
            
            
            `date`,
            
                `disabled`,
            
            
                `exchange_rate`,
            
            created_by, updated_by ) 
        values
         ( ?,
            ?,
            ?,
            ?,
            
            ?,
            
            
            ?,
            
                ?,
            
            
                ?
            
            ?,
                ? )
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:375)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:681)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:365)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:487)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:83)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy214.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 125 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error. pos 582, line 31, column 14, token ?
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseValueClause(SQLStatementParser.java:6055)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseInsert(MySqlStatementParser.java:4904)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseInsert(MySqlStatementParser.java:53)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:255)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 155 common frames omitted
14:52:38.564 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
14:52:38.567 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
14:52:38.569 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
15:20:46.415 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
15:20:46.426 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 22915 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
15:20:46.428 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
15:20:46.473 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
15:20:46.473 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
15:20:47.772 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
15:20:47.779 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
15:20:47.780 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
15:20:47.780 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
15:20:47.853 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
15:20:47.853 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1380 ms
15:20:48.438 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
15:20:48.915 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
15:20:48.952 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
15:20:49.035 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
15:20:49.035 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
15:20:49.035 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
15:20:49.035 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
15:20:49.035 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
15:20:49.036 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
15:20:49.036 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
15:20:49.054 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@45c28f2d, org.springframework.security.web.context.SecurityContextPersistenceFilter@15fb7f79, org.springframework.security.web.header.HeaderWriterFilter@4f16adad, org.springframework.web.filter.CorsFilter@15d5b45f, net.kintex.epsi.user.filter.JwtAuthenticationFilter@9587074, org.springframework.security.web.authentication.logout.LogoutFilter@61b77d3c, net.kintex.epsi.user.filter.AuthenticationFilter@4293bb3e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1a17a156, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@777446ba, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4ac0a790, org.springframework.security.web.access.ExceptionTranslationFilter@9bd3b63, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@16f9f2f0]
15:20:49.116 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
15:20:49.142 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
15:20:49.198 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
15:20:49.199 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
15:20:49.199 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
15:20:49.199 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
15:20:49.336 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
15:20:49.352 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
15:20:49.353 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
15:20:49.361 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
15:20:49.383 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
15:20:49.566 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
15:20:49.571 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
15:20:49.572 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
15:20:49.593 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
15:20:49.594 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
15:20:49.622 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
15:20:49.646 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
15:20:49.707 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.597 seconds (JVM running for 4.154)
15:20:50.142 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
15:20:50.142 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
15:20:50.147 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
15:20:50.165 [RMI TCP Connection(3)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
15:20:50.505 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Jakarta Mail version 1.6.5
15:20:50.549 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
15:20:50.550 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Tables of loaded providers
15:20:50.550 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
15:20:50.550 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
15:20:50.551 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
16:08:12.513 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
16:08:12.517 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
16:08:12.518 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
16:08:17.188 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
16:08:17.199 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 23693 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
16:08:17.199 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
16:08:17.236 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
16:08:17.236 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
16:08:18.482 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
16:08:18.490 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
16:08:18.491 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
16:08:18.491 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
16:08:18.573 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
16:08:18.573 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1337 ms
16:08:19.168 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
16:08:19.717 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
16:08:19.764 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
16:08:19.855 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
16:08:19.856 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
16:08:19.856 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
16:08:19.856 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
16:08:19.856 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
16:08:19.856 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
16:08:19.856 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
16:08:19.877 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@57292d67, org.springframework.security.web.context.SecurityContextPersistenceFilter@1781d273, org.springframework.security.web.header.HeaderWriterFilter@168f98c0, org.springframework.web.filter.CorsFilter@509e9eb4, net.kintex.epsi.user.filter.JwtAuthenticationFilter@20eb0449, org.springframework.security.web.authentication.logout.LogoutFilter@d87d6c9, net.kintex.epsi.user.filter.AuthenticationFilter@1093598a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6b369b7b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@50ce0e76, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5a4bd224, org.springframework.security.web.access.ExceptionTranslationFilter@44c922dc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@44a854fc]
16:08:19.944 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
16:08:19.968 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
16:08:20.023 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
16:08:20.023 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
16:08:20.024 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
16:08:20.024 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
16:08:20.149 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
16:08:20.164 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
16:08:20.165 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
16:08:20.172 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
16:08:20.192 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
16:08:20.370 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
16:08:20.374 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
16:08:20.375 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
16:08:20.396 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
16:08:20.396 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
16:08:20.426 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
16:08:20.453 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
16:08:20.506 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.609 seconds (JVM running for 4.103)
16:08:20.905 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
16:08:20.905 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
16:08:20.911 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 6 ms
16:08:20.929 [RMI TCP Connection(3)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
16:08:21.314 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Jakarta Mail version 1.6.5
16:08:21.333 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
16:08:21.334 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Tables of loaded providers
16:08:21.334 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
16:08:21.335 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
16:08:21.335 [RMI TCP Connection(3)-127.0.0.1] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
16:33:42.112 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
16:33:42.117 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
16:33:42.119 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
16:33:44.216 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
16:33:44.227 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Starting EpsiApplication on developer01deiMac.local with PID 24104 (/Users/developer01/Projects/epsi/build/classes/java/main started by developer01 in /Users/developer01/Projects/epsi)
16:33:44.228 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - No active profile set, falling back to default profiles: default
16:33:44.270 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
16:33:44.270 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
16:33:45.548 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 34571 (http)
16:33:45.555 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-34571"]
16:33:45.556 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
16:33:45.556 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.37]
16:33:45.621 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
16:33:45.621 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1351 ms
16:33:46.269 [restartedMain] INFO  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!
16:33:46.773 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
16:33:46.817 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
16:33:46.894 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs', GET], []
16:33:46.894 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources', GET], []
16:33:46.894 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**', GET], []
16:33:46.894 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/ui', GET], []
16:33:46.894 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/configuration/security', GET], []
16:33:46.894 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html/**', GET], []
16:33:46.894 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**', GET], []
16:33:46.910 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@34a04ee8, org.springframework.security.web.context.SecurityContextPersistenceFilter@27df142f, org.springframework.security.web.header.HeaderWriterFilter@5141d7b5, org.springframework.web.filter.CorsFilter@1a3cdaa9, net.kintex.epsi.user.filter.JwtAuthenticationFilter@1d2f8cc, org.springframework.security.web.authentication.logout.LogoutFilter@4ed7146d, net.kintex.epsi.user.filter.AuthenticationFilter@69b721b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4af16914, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4626ec02, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@476a785f, org.springframework.security.web.access.ExceptionTranslationFilter@388f5ef9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@152caaef]
16:33:46.968 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
16:33:46.994 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
16:33:47.050 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
16:33:47.051 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
16:33:47.051 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
16:33:47.051 [restartedMain] INFO  t.m.m.a.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
16:33:47.179 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-34571"]
16:33:47.194 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 34571 (http) with context path ''
16:33:47.195 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
16:33:47.203 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
16:33:47.223 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
16:33:47.392 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_1
16:33:47.396 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: removeUsingPOST_1
16:33:47.397 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_1
16:33:47.417 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_1
16:33:47.418 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: handleUsingGET_2
16:33:47.445 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: updateUsingPOST_2
16:33:47.474 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: addUsingPOST_2
16:33:47.530 [restartedMain] INFO  net.kintex.epsi.EpsiApplication - Started EpsiApplication in 3.616 seconds (JVM running for 4.113)
16:33:47.707 [RMI TCP Connection(3)-192.168.0.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
16:33:47.707 [RMI TCP Connection(3)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
16:33:47.712 [RMI TCP Connection(3)-192.168.0.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
16:33:47.730 [RMI TCP Connection(2)-192.168.0.101] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
16:33:48.154 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - Jakarta Mail version 1.6.5
16:33:48.164 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.providers
16:33:48.165 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - Tables of loaded providers
16:33:48.165 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - Providers Listed By Class Name: {com.sun.mail.smtp.SMTPTransport=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], com.sun.mail.imap.IMAPSSLStore=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], com.sun.mail.pop3.POP3Store=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], com.sun.mail.smtp.SMTPSSLTransport=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], com.sun.mail.imap.IMAPStore=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], com.sun.mail.pop3.POP3SSLStore=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
16:33:48.165 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - Providers Listed By Protocol: {imap=javax.mail.Provider[STORE,imap,com.sun.mail.imap.IMAPStore,Oracle], smtp=javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle], pop3=javax.mail.Provider[STORE,pop3,com.sun.mail.pop3.POP3Store,Oracle], imaps=javax.mail.Provider[STORE,imaps,com.sun.mail.imap.IMAPSSLStore,Oracle], smtps=javax.mail.Provider[TRANSPORT,smtps,com.sun.mail.smtp.SMTPSSLTransport,Oracle], pop3s=javax.mail.Provider[STORE,pop3s,com.sun.mail.pop3.POP3SSLStore,Oracle]}
16:33:48.165 [RMI TCP Connection(2)-192.168.0.101] INFO  javax.mail - successfully loaded resource: /META-INF/javamail.default.address.map
17:31:27.260 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:31:27.415 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:31:27.475 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:31:27.580 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:31:27.581 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:31:27.591 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:31:27.658 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
17:31:27.659 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
17:31:27.675 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
17:31:27.698 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:31:27.698 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:31:27.699 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
17:31:27.699 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:31:27.708 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:31:27.782 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:31:27.783 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:31:27.793 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:31:27.834 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
17:31:27.837 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
17:31:27.846 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
17:31:27.847 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
17:31:27.849 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
17:31:27.863 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 8
17:31:27.885 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
17:31:27.885 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:31:29.519 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:31:29.519 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:31:29.530 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:31:29.618 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, saleOrder.exchange_rate, count(sale_order) as quantity, exchangeRate.currency_symbol FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order LEFT JOIN epsi_exchange_rate exchangeRate ON saleOrder.exchange_rate = exchangeRate.exchange_rate WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark,exchangeRate.currency_symbol
17:31:29.623 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: undefined(String)
17:31:29.634 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 0
17:31:29.635 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectExchangeRate - ==>  Preparing: SELECT exchange_rate from epsi_sale_order where id= ?
17:31:29.635 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectExchangeRate - ==> Parameters: undefined(String)
17:31:29.644 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.G.selectExchangeRate - <==      Total: 0
17:31:29.665 [http-nio-34571-exec-3] ERROR n.k.e.c.h.ExceptionHandlerAdvice - Mapper method 'net.kintex.epsi.sales.dao.GoodsDao.selectExchangeRate attempted to return null from a method with a primitive return type (double).
org.apache.ibatis.binding.BindingException: Mapper method 'net.kintex.epsi.sales.dao.GoodsDao.selectExchangeRate attempted to return null from a method with a primitive return type (double).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:102)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy175.selectExchangeRate(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getOneGoodsBySaleOrderId(GoodsServiceImpl.java:200)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getOneGoodsBySaleOrderId(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getGoodsByOrder(GoodsController.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
17:34:01.833 [http-nio-34571-exec-4] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 152165
17:34:01.972 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:34:01.972 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:34:01.981 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:34:02.057 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:34:02.057 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:34:02.067 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:34:02.078 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
17:34:02.078 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
17:34:02.090 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
17:34:02.107 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
17:34:02.107 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:34:02.166 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:34:02.167 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:34:02.177 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:34:02.263 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
17:34:02.263 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
17:34:02.272 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
17:34:02.273 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
17:34:02.273 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
17:34:02.286 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 8
17:34:02.304 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
17:34:02.304 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:34:02.557 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:34:02.557 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:34:02.567 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:34:02.641 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:34:02.642 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:34:02.651 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:34:02.662 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
17:34:02.662 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
17:34:02.674 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
17:34:02.690 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
17:34:02.690 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:34:03.229 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:34:03.230 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:34:03.241 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:34:03.315 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:34:03.316 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:34:03.325 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:34:03.342 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
17:34:03.342 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
17:34:03.351 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
17:34:03.352 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
17:34:03.352 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
17:34:03.363 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 8
17:34:03.381 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
17:34:03.381 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:34:05.053 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:34:05.054 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:34:05.063 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:34:05.147 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, saleOrder.exchange_rate, count(sale_order) as quantity, exchangeRate.currency_symbol FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order LEFT JOIN epsi_exchange_rate exchangeRate ON saleOrder.exchange_rate = exchangeRate.exchange_rate WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark,exchangeRate.currency_symbol
17:34:05.149 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: undefined(String)
17:34:05.157 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 0
17:34:05.158 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.G.selectExchangeRate - ==>  Preparing: SELECT exchange_rate from epsi_sale_order where id= ?
17:34:05.158 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.G.selectExchangeRate - ==> Parameters: undefined(String)
17:34:05.167 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.G.selectExchangeRate - <==      Total: 0
17:34:05.184 [http-nio-34571-exec-8] ERROR n.k.e.c.h.ExceptionHandlerAdvice - Mapper method 'net.kintex.epsi.sales.dao.GoodsDao.selectExchangeRate attempted to return null from a method with a primitive return type (double).
org.apache.ibatis.binding.BindingException: Mapper method 'net.kintex.epsi.sales.dao.GoodsDao.selectExchangeRate attempted to return null from a method with a primitive return type (double).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:102)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy175.selectExchangeRate(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getOneGoodsBySaleOrderId(GoodsServiceImpl.java:200)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getOneGoodsBySaleOrderId(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getGoodsByOrder(GoodsController.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
17:34:23.095 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:34:23.096 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:34:23.105 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:34:23.180 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:34:23.181 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:34:23.190 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:34:23.200 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
17:34:23.200 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
17:34:23.210 [http-nio-34571-exec-9] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
17:34:23.228 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
17:34:23.228 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:34:23.270 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:34:23.271 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:34:23.281 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:34:23.356 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:34:23.356 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:34:23.365 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:34:23.376 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
17:34:23.377 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
17:34:23.385 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
17:34:23.386 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
17:34:23.386 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
17:34:23.396 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 8
17:34:23.414 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
17:34:23.414 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:34:23.777 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:34:23.777 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:34:23.787 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:34:23.861 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:34:23.861 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:34:23.870 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:34:23.883 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
17:34:23.883 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
17:34:23.891 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
17:34:23.891 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
17:34:23.892 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
17:34:23.903 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 8
17:34:23.919 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
17:34:23.919 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:34:25.602 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:34:25.603 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:34:25.611 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:34:25.694 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, saleOrder.exchange_rate, count(sale_order) as quantity, exchangeRate.currency_symbol FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order LEFT JOIN epsi_exchange_rate exchangeRate ON saleOrder.exchange_rate = exchangeRate.exchange_rate WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark,exchangeRate.currency_symbol
17:34:25.695 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: undefined(String)
17:34:25.703 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 0
17:34:25.704 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.G.selectExchangeRate - ==>  Preparing: SELECT exchange_rate from epsi_sale_order where id= ?
17:34:25.704 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.G.selectExchangeRate - ==> Parameters: undefined(String)
17:34:25.712 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.G.selectExchangeRate - <==      Total: 0
17:34:25.727 [http-nio-34571-exec-2] ERROR n.k.e.c.h.ExceptionHandlerAdvice - Mapper method 'net.kintex.epsi.sales.dao.GoodsDao.selectExchangeRate attempted to return null from a method with a primitive return type (double).
org.apache.ibatis.binding.BindingException: Mapper method 'net.kintex.epsi.sales.dao.GoodsDao.selectExchangeRate attempted to return null from a method with a primitive return type (double).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:102)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy175.selectExchangeRate(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getOneGoodsBySaleOrderId(GoodsServiceImpl.java:200)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getOneGoodsBySaleOrderId(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getGoodsByOrder(GoodsController.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
17:38:31.765 [http-nio-34571-exec-3] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 246038
17:38:31.930 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:38:31.931 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:38:31.940 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:38:32.016 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:38:32.016 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:38:32.026 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:38:32.036 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
17:38:32.037 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
17:38:32.047 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
17:38:32.065 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
17:38:32.065 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:38:32.171 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:38:32.171 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:38:32.181 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:38:32.254 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:38:32.254 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:38:32.264 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:38:32.277 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
17:38:32.277 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
17:38:32.286 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
17:38:32.286 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
17:38:32.286 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
17:38:32.307 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 8
17:38:32.324 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
17:38:32.324 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:38:32.447 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:38:32.447 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:38:32.457 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:38:32.544 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
17:38:32.544 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
17:38:32.553 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
17:38:32.553 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
17:38:32.554 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
17:38:32.564 [http-nio-34571-exec-5] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 8
17:38:32.582 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
17:38:32.582 [http-nio-34571-exec-5] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:38:34.260 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:38:34.260 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:38:34.270 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:38:34.355 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, saleOrder.exchange_rate, count(sale_order) as quantity, exchangeRate.currency_symbol FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order LEFT JOIN epsi_exchange_rate exchangeRate ON saleOrder.exchange_rate = exchangeRate.exchange_rate WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark,exchangeRate.currency_symbol
17:38:34.356 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: undefined(String)
17:38:34.366 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 0
17:38:34.366 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.G.selectExchangeRate - ==>  Preparing: SELECT exchange_rate from epsi_sale_order where id= ?
17:38:34.367 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.G.selectExchangeRate - ==> Parameters: undefined(String)
17:38:34.375 [http-nio-34571-exec-6] DEBUG n.k.e.s.d.G.selectExchangeRate - <==      Total: 0
17:38:34.393 [http-nio-34571-exec-6] ERROR n.k.e.c.h.ExceptionHandlerAdvice - Mapper method 'net.kintex.epsi.sales.dao.GoodsDao.selectExchangeRate attempted to return null from a method with a primitive return type (double).
org.apache.ibatis.binding.BindingException: Mapper method 'net.kintex.epsi.sales.dao.GoodsDao.selectExchangeRate attempted to return null from a method with a primitive return type (double).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:102)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy175.selectExchangeRate(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getOneGoodsBySaleOrderId(GoodsServiceImpl.java:200)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getOneGoodsBySaleOrderId(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getGoodsByOrder(GoodsController.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
17:39:04.171 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:39:04.172 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:39:04.467 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:39:04.468 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:39:04.475 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:39:04.549 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:39:04.550 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:39:04.556 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:39:04.564 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
17:39:04.564 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
17:39:04.572 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
17:39:04.584 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
17:39:04.584 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:39:05.067 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:39:05.067 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:39:05.074 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:39:05.157 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
17:39:05.157 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
17:39:05.163 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
17:39:05.165 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
17:39:05.165 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
17:39:05.173 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 8
17:39:05.185 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
17:39:05.186 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:39:06.887 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:39:06.888 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:39:06.895 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:39:06.975 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, saleOrder.exchange_rate, count(sale_order) as quantity, exchangeRate.currency_symbol FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order LEFT JOIN epsi_exchange_rate exchangeRate ON saleOrder.exchange_rate = exchangeRate.exchange_rate WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark,exchangeRate.currency_symbol
17:39:06.976 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: undefined(String)
17:39:06.984 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 0
17:39:06.984 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectExchangeRate - ==>  Preparing: SELECT exchange_rate from epsi_sale_order where id= ?
17:39:06.984 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectExchangeRate - ==> Parameters: undefined(String)
17:39:06.990 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectExchangeRate - <==      Total: 0
17:39:07.002 [http-nio-34571-exec-10] ERROR n.k.e.c.h.ExceptionHandlerAdvice - Mapper method 'net.kintex.epsi.sales.dao.GoodsDao.selectExchangeRate attempted to return null from a method with a primitive return type (double).
org.apache.ibatis.binding.BindingException: Mapper method 'net.kintex.epsi.sales.dao.GoodsDao.selectExchangeRate attempted to return null from a method with a primitive return type (double).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:102)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy175.selectExchangeRate(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getOneGoodsBySaleOrderId(GoodsServiceImpl.java:200)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getOneGoodsBySaleOrderId(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getGoodsByOrder(GoodsController.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
17:39:22.368 [http-nio-34571-exec-7] ERROR c.a.druid.pool.DruidPooledStatement - CommunicationsException, druid version 1.2.1, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, testWhileIdle true, idle millis 47976, minIdle 0, poolingCount 1, timeBetweenEvictionRunsMillis 60000, lastValidIdleMillis 47976, driver com.mysql.cj.jdbc.Driver, exceptionSorter com.alibaba.druid.pool.vendor.MySqlExceptionSorter
17:39:22.369 [http-nio-34571-exec-7] ERROR c.alibaba.druid.pool.DruidDataSource - discard connection
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 47,973 milliseconds ago. The last packet sent successfully to the server was 47,981 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at jdk.internal.reflect.GeneratedMethodAccessor146.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy216.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy113.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy114.selectOneByName(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor179.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy115.selectOneByName(Unknown Source)
	at net.kintex.epsi.user.service.JwtUserServiceImpl.loadUserByUsername(JwtUserServiceImpl.java:79)
	at net.kintex.epsi.user.service.JwtUserServiceImpl.getUserLoginInfo(JwtUserServiceImpl.java:44)
	at net.kintex.epsi.user.service.JwtAuthenticationProvider.authenticate(JwtAuthenticationProvider.java:39)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:199)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:219)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 47,973 milliseconds ago. The last packet sent successfully to the server was 47,981 milliseconds ago.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:538)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:702)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:641)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:940)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:1075)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:930)
	... 101 common frames omitted
Caused by: java.io.EOFException: Can not read response from server. Expected to read 4 bytes, read 0 bytes before connection was unexpectedly lost.
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:67)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:532)
	... 106 common frames omitted
17:39:22.411 [http-nio-34571-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.dao.RecoverableDataAccessException: 
### Error querying database.  Cause: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 47,973 milliseconds ago. The last packet sent successfully to the server was 47,981 milliseconds ago.
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/UserMapper.xml]
### The error may involve net.kintex.epsi.user.dao.UserDao.selectOneByName-Inline
### The error occurred while setting parameters
### SQL: SELECT `user_id`,         `user_account`,         `user_password`,         `access`,         `disabled`,         `created_at`,         `created_by`,         `updated_at`,         `updated_by`         FROM `epsi_user`         WHERE `disabled` = 0 AND `user_account` = ?;
### Cause: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 47,973 milliseconds ago. The last packet sent successfully to the server was 47,981 milliseconds ago.
; Communications link failure

The last packet successfully received from the server was 47,973 milliseconds ago. The last packet sent successfully to the server was 47,981 milliseconds ago.; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 47,973 milliseconds ago. The last packet sent successfully to the server was 47,981 milliseconds ago.
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:100)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy114.selectOneByName(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor179.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy115.selectOneByName(Unknown Source)
	at net.kintex.epsi.user.service.JwtUserServiceImpl.loadUserByUsername(JwtUserServiceImpl.java:79)
	at net.kintex.epsi.user.service.JwtUserServiceImpl.getUserLoginInfo(JwtUserServiceImpl.java:44)
	at net.kintex.epsi.user.service.JwtAuthenticationProvider.authenticate(JwtAuthenticationProvider.java:39)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:199)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:219)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 47,973 milliseconds ago. The last packet sent successfully to the server was 47,981 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at jdk.internal.reflect.GeneratedMethodAccessor146.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy216.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy214.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 74 common frames omitted
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 47,973 milliseconds ago. The last packet sent successfully to the server was 47,981 milliseconds ago.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:538)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:702)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:641)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:940)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:1075)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:930)
	... 101 common frames omitted
Caused by: java.io.EOFException: Can not read response from server. Expected to read 4 bytes, read 0 bytes before connection was unexpectedly lost.
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:67)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:532)
	... 106 common frames omitted
17:39:34.943 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:39:34.943 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:39:34.950 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:39:35.023 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:39:35.024 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:39:35.031 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:39:35.038 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
17:39:35.039 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
17:39:35.046 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
17:39:35.058 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
17:39:35.058 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:39:35.201 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:39:35.201 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:39:35.208 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:39:35.282 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:39:35.282 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:39:35.289 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:39:35.299 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
17:39:35.300 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
17:39:35.306 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
17:39:35.306 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
17:39:35.306 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
17:39:35.314 [http-nio-34571-exec-2] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 8
17:39:35.325 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
17:39:35.325 [http-nio-34571-exec-2] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:39:35.636 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:39:35.636 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:39:35.642 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:39:35.716 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:39:35.716 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:39:35.723 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:39:35.733 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
17:39:35.733 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
17:39:35.739 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
17:39:35.740 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
17:39:35.740 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
17:39:35.747 [http-nio-34571-exec-3] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 8
17:39:35.759 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
17:39:35.759 [http-nio-34571-exec-3] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:39:37.456 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:39:37.456 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:39:37.463 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:39:37.542 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, saleOrder.exchange_rate, count(sale_order) as quantity, exchangeRate.currency_symbol FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order LEFT JOIN epsi_exchange_rate exchangeRate ON saleOrder.exchange_rate = exchangeRate.exchange_rate WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark,exchangeRate.currency_symbol
17:39:37.543 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: undefined(String)
17:39:37.550 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 0
17:39:37.550 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectExchangeRate - ==>  Preparing: SELECT exchange_rate from epsi_sale_order where id= ?
17:39:37.550 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectExchangeRate - ==> Parameters: undefined(String)
17:39:37.557 [http-nio-34571-exec-4] DEBUG n.k.e.s.d.G.selectExchangeRate - <==      Total: 0
17:39:37.568 [http-nio-34571-exec-4] ERROR n.k.e.c.h.ExceptionHandlerAdvice - Mapper method 'net.kintex.epsi.sales.dao.GoodsDao.selectExchangeRate attempted to return null from a method with a primitive return type (double).
org.apache.ibatis.binding.BindingException: Mapper method 'net.kintex.epsi.sales.dao.GoodsDao.selectExchangeRate attempted to return null from a method with a primitive return type (double).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:102)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy175.selectExchangeRate(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getOneGoodsBySaleOrderId(GoodsServiceImpl.java:200)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getOneGoodsBySaleOrderId(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getGoodsByOrder(GoodsController.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
17:42:14.102 [http-nio-34571-exec-5] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 146143
17:42:14.108 [http-nio-34571-exec-5] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 187106
17:42:14.113 [http-nio-34571-exec-5] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 156545
17:42:14.192 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:42:14.193 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:42:14.200 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:42:14.277 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:42:14.278 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:42:14.285 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:42:14.306 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
17:42:14.310 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 1234563(Long)
17:42:14.316 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 0
17:42:54.609 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:42:54.609 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:42:54.616 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:42:54.691 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:42:54.691 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:42:54.698 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:42:54.705 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
17:42:54.705 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
17:42:54.712 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
17:42:54.724 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
17:42:54.724 [http-nio-34571-exec-6] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:42:55.232 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:42:55.232 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:42:55.239 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:42:55.293 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:42:55.293 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:42:55.300 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:42:55.314 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:42:55.315 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:42:55.321 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:42:55.330 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
17:42:55.330 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
17:42:55.336 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
17:42:55.336 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
17:42:55.336 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
17:42:55.343 [http-nio-34571-exec-8] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 8
17:42:55.355 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
17:42:55.355 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:42:55.374 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:42:55.374 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:42:55.381 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:42:55.391 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
17:42:55.392 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
17:42:55.398 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
17:42:55.398 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
17:42:55.399 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
17:42:55.406 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 8
17:42:55.418 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
17:42:55.418 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:42:57.119 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:42:57.120 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:42:57.127 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:42:57.207 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, saleOrder.exchange_rate, count(sale_order) as quantity, exchangeRate.currency_symbol FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order LEFT JOIN epsi_exchange_rate exchangeRate ON saleOrder.exchange_rate = exchangeRate.exchange_rate WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark,exchangeRate.currency_symbol
17:42:57.208 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: 72(String)
17:42:57.217 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 2
17:42:57.218 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectExchangeRate - ==>  Preparing: SELECT exchange_rate from epsi_sale_order where id= ?
17:42:57.218 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectExchangeRate - ==> Parameters: 72(String)
17:42:57.224 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectExchangeRate - <==      Total: 1
17:42:57.225 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==>  Preparing: SELECT convert(count_price*(handling_charge/100),decimal(8,2)) as handlingCharge from epsi_sale_order where id= ?
17:42:57.227 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==> Parameters: 72(String)
17:42:57.233 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - <==      Total: 1
17:42:57.245 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsByOrder' parameter -1
17:42:57.245 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:43:33.153 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:43:33.154 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:43:33.160 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:43:33.235 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:43:33.235 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:43:33.241 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:43:33.249 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==>  Preparing: SELECT vendor_id, vendor_code, vendor_name, disabled FROM `epsi_vendor`
17:43:33.249 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - ==> Parameters: 
17:43:33.255 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.V.selectOneOrManyVendor - <==      Total: 50
17:43:33.266 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyVendor' parameter -1
17:43:33.266 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:43:36.943 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:43:36.944 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:43:36.950 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:43:37.025 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:43:37.025 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:43:37.032 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:43:37.045 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_client`
17:43:37.045 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - ==> Parameters: 
17:43:37.051 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.C.selectOneOrMany_COUNT - <==      Total: 1
17:43:37.051 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==>  Preparing: SELECT `id`,`name`,`contact`,`disabled` FROM `epsi_client` LIMIT ?
17:43:37.052 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - ==> Parameters: 30(Integer)
17:43:37.059 [http-nio-34571-exec-1] DEBUG n.k.e.s.d.ClientDao.selectOneOrMany - <==      Total: 30
17:43:37.070 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyClient' parameter -1
17:43:37.071 [http-nio-34571-exec-1] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:43:48.246 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:43:48.247 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:43:48.253 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:43:48.334 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
17:43:48.335 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 123456(Long)
17:43:48.341 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 0
17:43:57.875 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:43:57.875 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:43:57.881 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:43:57.964 [http-nio-34571-exec-3] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
17:43:57.964 [http-nio-34571-exec-3] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 12345(Long)
17:43:57.970 [http-nio-34571-exec-3] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 0
17:45:51.010 [http-nio-34571-exec-4] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 113028
17:45:51.156 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:45:51.156 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:45:51.166 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:45:51.251 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
17:45:51.252 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 356573083079877(Long)
17:45:51.263 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
17:45:51.283 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
17:45:51.283 [http-nio-34571-exec-4] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:46:29.960 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:46:29.961 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:46:29.971 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:46:30.055 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
17:46:30.055 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 358608070723430(Long)
17:46:30.065 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 0
17:46:31.938 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:46:31.938 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:46:31.948 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:46:32.030 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
17:46:32.030 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 353323070529382(Long)
17:46:32.040 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 0
17:46:33.328 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:46:33.328 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:46:33.338 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:46:33.422 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==>  Preparing: SELECT goods.device_id AS `id`, goods.price AS `price`, goods.sale_order AS `saleOrder`, goods.imei1 AS `imei`, goods.sku_id AS `sku`, goods.locked AS `isSimLocked`, goods.icloud AS `isCloudLocked`, goods.won_bid_number AS `wonBidNumber`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id WHERE imei1 = ? AND price IS NULL OR price = 0 AND sale_order = 0
17:46:33.423 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - ==> Parameters: 355732073237181(Long)
17:46:33.433 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.GoodsDao.selectGoods - <==      Total: 1
17:46:33.451 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoods' parameter -1
17:46:33.451 [http-nio-34571-exec-8] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:46:45.578 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:46:45.578 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:46:45.588 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:46:45.674 [http-nio-34571-exec-9] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==>  Preparing: SELECT sku.id AS `skuId`, sku.phoneAttribute AS `phoneAttribute`, sku.disabled AS `disabled`, sku.phoneAttribute AS `phoneAttribute`, spu.spu_id AS `spuId`, spu.spu_name AS `modelName`, spu.spu_brand AS `brandName`, spu.category AS `category` FROM `epsi_sku` AS `sku` JOIN epsi_spu spu on sku.spu_id = spu.spu_id WHERE id in ( ? )
17:46:45.674 [http-nio-34571-exec-9] DEBUG n.k.e.i.dao.SkuDao.batchSelect - ==> Parameters: 8(String)
17:46:45.684 [http-nio-34571-exec-9] DEBUG n.k.e.i.dao.SkuDao.batchSelect - <==      Total: 1
17:46:45.702 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsSku' parameter -1
17:46:45.702 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:48:18.045 [http-nio-34571-exec-10] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 92342
17:48:18.177 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:48:18.177 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:48:18.187 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:48:18.288 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_exchange_rate`
17:48:18.289 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - ==> Parameters: 
17:48:18.298 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany_COUNT - <==      Total: 1
17:48:18.298 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany - ==>  Preparing: SELECT `id`,`currency_code`,`currency_name`,`currency_symbol`,`exchange_rate`,`disabled` from `epsi_exchange_rate` order by disabled ASC LIMIT ?
17:48:18.300 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany - ==> Parameters: 20(Integer)
17:48:18.310 [http-nio-34571-exec-10] DEBUG n.k.e.i.d.E.selectOneOrMany - <==      Total: 20
17:48:18.328 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManyExchangeRate' parameter -1
17:48:18.328 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:48:41.148 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:48:41.148 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:48:41.157 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:48:41.231 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:48:41.231 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:48:41.241 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:48:41.299 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==>  Preparing: INSERT INTO `epsi_sale_order` ( `client_id`, `salesman`, `count_price`, `handling_charge`, `deposit`, `other_price`, `date`, `disabled`, `exchange_rate`, created_by, updated_by ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
17:48:41.307 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==> Parameters: 1(Integer), test(String), 246.0(Double), 0.03(Double), 1.0(Double), 1.0(Double), 2020-11-20 08:00:00.0(Timestamp), false(Boolean), 10.1872(Double), 0(Integer), 0(Integer)
17:48:41.325 [http-nio-34571-exec-7] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - <==    Updates: 1
17:48:41.329 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==>  Preparing: SELECT sku_id, inventory_quantity FROM `epsi_inventory` WHERE `sku_id` IN ( ? )
17:48:41.329 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==> Parameters: 8(String)
17:48:41.338 [http-nio-34571-exec-7] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - <==      Total: 0
17:48:41.339 [http-nio-34571-exec-7] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - ==>  Preparing: update `epsi_inventory` where sku_id in
17:48:41.363 [http-nio-34571-exec-7] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/InventoryMapper.xml]
### The error may involve net.kintex.epsi.inventory.dao.InventoryDao.updateBatch
### The error occurred while executing an update
### SQL: update `epsi_inventory`                    where sku_id in
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/InventoryMapper.xml]
### The error may involve net.kintex.epsi.inventory.dao.InventoryDao.updateBatch
### The error occurred while executing an update
### SQL: update `epsi_inventory`                    where sku_id in
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy163.updateBatch(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getBill(GoodsServiceImpl.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getBill(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getBill(GoodsController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at jdk.internal.reflect.GeneratedMethodAccessor145.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy214.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 114 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:558)
	at com.alibaba.druid.sql.parser.SQLParser.accept(SQLParser.java:566)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseUpdateStatment(MySqlSelectParser.java:569)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseUpdateStatement(MySqlStatementParser.java:134)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:243)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 142 common frames omitted
17:48:45.246 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:48:45.247 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:48:45.256 [http-nio-34571-exec-1] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:48:45.340 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==>  Preparing: INSERT INTO `epsi_sale_order` ( `client_id`, `salesman`, `count_price`, `handling_charge`, `deposit`, `other_price`, `date`, `disabled`, `exchange_rate`, created_by, updated_by ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
17:48:45.341 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==> Parameters: 1(Integer), test(String), 246.0(Double), 0.03(Double), 1.0(Double), 1.0(Double), 2020-11-20 08:00:00.0(Timestamp), false(Boolean), 10.1872(Double), 0(Integer), 0(Integer)
17:48:45.358 [http-nio-34571-exec-1] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - <==    Updates: 1
17:48:45.358 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==>  Preparing: SELECT sku_id, inventory_quantity FROM `epsi_inventory` WHERE `sku_id` IN ( ? )
17:48:45.359 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==> Parameters: 8(String)
17:48:45.367 [http-nio-34571-exec-1] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - <==      Total: 0
17:48:45.368 [http-nio-34571-exec-1] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - ==>  Preparing: update `epsi_inventory` where sku_id in
17:48:45.387 [http-nio-34571-exec-1] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/InventoryMapper.xml]
### The error may involve net.kintex.epsi.inventory.dao.InventoryDao.updateBatch
### The error occurred while executing an update
### SQL: update `epsi_inventory`                    where sku_id in
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/InventoryMapper.xml]
### The error may involve net.kintex.epsi.inventory.dao.InventoryDao.updateBatch
### The error occurred while executing an update
### SQL: update `epsi_inventory`                    where sku_id in
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy163.updateBatch(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getBill(GoodsServiceImpl.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getBill(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getBill(GoodsController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at jdk.internal.reflect.GeneratedMethodAccessor145.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy214.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 114 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:558)
	at com.alibaba.druid.sql.parser.SQLParser.accept(SQLParser.java:566)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseUpdateStatment(MySqlSelectParser.java:569)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseUpdateStatement(MySqlStatementParser.java:134)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:243)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 142 common frames omitted
17:48:52.344 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:48:52.344 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:48:52.354 [http-nio-34571-exec-2] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:48:52.437 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==>  Preparing: INSERT INTO `epsi_sale_order` ( `client_id`, `salesman`, `count_price`, `handling_charge`, `deposit`, `other_price`, `date`, `disabled`, `exchange_rate`, created_by, updated_by ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
17:48:52.439 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==> Parameters: 1(Integer), test(String), 246.0(Double), 0.03(Double), 1.0(Double), 1.0(Double), 2020-11-20 08:00:00.0(Timestamp), false(Boolean), 10.1872(Double), 0(Integer), 0(Integer)
17:48:52.456 [http-nio-34571-exec-2] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - <==    Updates: 1
17:48:52.457 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==>  Preparing: SELECT sku_id, inventory_quantity FROM `epsi_inventory` WHERE `sku_id` IN ( ? )
17:48:52.457 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==> Parameters: 8(String)
17:48:52.466 [http-nio-34571-exec-2] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - <==      Total: 0
17:48:52.466 [http-nio-34571-exec-2] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - ==>  Preparing: update `epsi_inventory` where sku_id in
17:48:52.486 [http-nio-34571-exec-2] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/InventoryMapper.xml]
### The error may involve net.kintex.epsi.inventory.dao.InventoryDao.updateBatch
### The error occurred while executing an update
### SQL: update `epsi_inventory`                    where sku_id in
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/InventoryMapper.xml]
### The error may involve net.kintex.epsi.inventory.dao.InventoryDao.updateBatch
### The error occurred while executing an update
### SQL: update `epsi_inventory`                    where sku_id in
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy163.updateBatch(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getBill(GoodsServiceImpl.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getBill(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getBill(GoodsController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at jdk.internal.reflect.GeneratedMethodAccessor145.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy214.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 114 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:558)
	at com.alibaba.druid.sql.parser.SQLParser.accept(SQLParser.java:566)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseUpdateStatment(MySqlSelectParser.java:569)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseUpdateStatement(MySqlStatementParser.java:134)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:243)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 142 common frames omitted
17:48:52.897 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:48:52.898 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:48:52.907 [http-nio-34571-exec-3] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:48:52.989 [http-nio-34571-exec-3] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==>  Preparing: INSERT INTO `epsi_sale_order` ( `client_id`, `salesman`, `count_price`, `handling_charge`, `deposit`, `other_price`, `date`, `disabled`, `exchange_rate`, created_by, updated_by ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
17:48:52.990 [http-nio-34571-exec-3] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==> Parameters: 1(Integer), test(String), 246.0(Double), 0.03(Double), 1.0(Double), 1.0(Double), 2020-11-20 08:00:00.0(Timestamp), false(Boolean), 10.1872(Double), 0(Integer), 0(Integer)
17:48:53.008 [http-nio-34571-exec-3] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - <==    Updates: 1
17:48:53.009 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==>  Preparing: SELECT sku_id, inventory_quantity FROM `epsi_inventory` WHERE `sku_id` IN ( ? )
17:48:53.009 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==> Parameters: 8(String)
17:48:53.018 [http-nio-34571-exec-3] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - <==      Total: 0
17:48:53.018 [http-nio-34571-exec-3] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - ==>  Preparing: update `epsi_inventory` where sku_id in
17:48:53.039 [http-nio-34571-exec-3] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/InventoryMapper.xml]
### The error may involve net.kintex.epsi.inventory.dao.InventoryDao.updateBatch
### The error occurred while executing an update
### SQL: update `epsi_inventory`                    where sku_id in
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/InventoryMapper.xml]
### The error may involve net.kintex.epsi.inventory.dao.InventoryDao.updateBatch
### The error occurred while executing an update
### SQL: update `epsi_inventory`                    where sku_id in
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy163.updateBatch(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getBill(GoodsServiceImpl.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getBill(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getBill(GoodsController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at jdk.internal.reflect.GeneratedMethodAccessor145.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy214.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 114 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:558)
	at com.alibaba.druid.sql.parser.SQLParser.accept(SQLParser.java:566)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseUpdateStatment(MySqlSelectParser.java:569)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseUpdateStatement(MySqlStatementParser.java:134)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:243)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 142 common frames omitted
17:48:53.102 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:48:53.102 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:48:53.111 [http-nio-34571-exec-4] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:48:53.196 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==>  Preparing: INSERT INTO `epsi_sale_order` ( `client_id`, `salesman`, `count_price`, `handling_charge`, `deposit`, `other_price`, `date`, `disabled`, `exchange_rate`, created_by, updated_by ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
17:48:53.197 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==> Parameters: 1(Integer), test(String), 246.0(Double), 0.03(Double), 1.0(Double), 1.0(Double), 2020-11-20 08:00:00.0(Timestamp), false(Boolean), 10.1872(Double), 0(Integer), 0(Integer)
17:48:53.215 [http-nio-34571-exec-4] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - <==    Updates: 1
17:48:53.216 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==>  Preparing: SELECT sku_id, inventory_quantity FROM `epsi_inventory` WHERE `sku_id` IN ( ? )
17:48:53.216 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==> Parameters: 8(String)
17:48:53.225 [http-nio-34571-exec-4] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - <==      Total: 0
17:48:53.225 [http-nio-34571-exec-4] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - ==>  Preparing: update `epsi_inventory` where sku_id in
17:48:53.245 [http-nio-34571-exec-4] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/InventoryMapper.xml]
### The error may involve net.kintex.epsi.inventory.dao.InventoryDao.updateBatch
### The error occurred while executing an update
### SQL: update `epsi_inventory`                    where sku_id in
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/InventoryMapper.xml]
### The error may involve net.kintex.epsi.inventory.dao.InventoryDao.updateBatch
### The error occurred while executing an update
### SQL: update `epsi_inventory`                    where sku_id in
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy163.updateBatch(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getBill(GoodsServiceImpl.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getBill(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getBill(GoodsController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at jdk.internal.reflect.GeneratedMethodAccessor145.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy214.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 114 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:558)
	at com.alibaba.druid.sql.parser.SQLParser.accept(SQLParser.java:566)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseUpdateStatment(MySqlSelectParser.java:569)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseUpdateStatement(MySqlStatementParser.java:134)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:243)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 142 common frames omitted
17:48:53.283 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:48:53.283 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:48:53.293 [http-nio-34571-exec-5] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:48:53.378 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==>  Preparing: INSERT INTO `epsi_sale_order` ( `client_id`, `salesman`, `count_price`, `handling_charge`, `deposit`, `other_price`, `date`, `disabled`, `exchange_rate`, created_by, updated_by ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
17:48:53.379 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==> Parameters: 1(Integer), test(String), 246.0(Double), 0.03(Double), 1.0(Double), 1.0(Double), 2020-11-20 08:00:00.0(Timestamp), false(Boolean), 10.1872(Double), 0(Integer), 0(Integer)
17:48:53.399 [http-nio-34571-exec-5] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - <==    Updates: 1
17:48:53.399 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==>  Preparing: SELECT sku_id, inventory_quantity FROM `epsi_inventory` WHERE `sku_id` IN ( ? )
17:48:53.399 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==> Parameters: 8(String)
17:48:53.410 [http-nio-34571-exec-5] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - <==      Total: 0
17:48:53.410 [http-nio-34571-exec-5] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - ==>  Preparing: update `epsi_inventory` where sku_id in
17:48:53.433 [http-nio-34571-exec-5] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/InventoryMapper.xml]
### The error may involve net.kintex.epsi.inventory.dao.InventoryDao.updateBatch
### The error occurred while executing an update
### SQL: update `epsi_inventory`                    where sku_id in
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/InventoryMapper.xml]
### The error may involve net.kintex.epsi.inventory.dao.InventoryDao.updateBatch
### The error occurred while executing an update
### SQL: update `epsi_inventory`                    where sku_id in
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy163.updateBatch(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getBill(GoodsServiceImpl.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getBill(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getBill(GoodsController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at jdk.internal.reflect.GeneratedMethodAccessor145.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy214.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 114 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:558)
	at com.alibaba.druid.sql.parser.SQLParser.accept(SQLParser.java:566)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseUpdateStatment(MySqlSelectParser.java:569)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseUpdateStatement(MySqlStatementParser.java:134)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:243)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 142 common frames omitted
17:48:53.456 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:48:53.457 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:48:53.466 [http-nio-34571-exec-6] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:48:53.556 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==>  Preparing: INSERT INTO `epsi_sale_order` ( `client_id`, `salesman`, `count_price`, `handling_charge`, `deposit`, `other_price`, `date`, `disabled`, `exchange_rate`, created_by, updated_by ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
17:48:53.557 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==> Parameters: 1(Integer), test(String), 246.0(Double), 0.03(Double), 1.0(Double), 1.0(Double), 2020-11-20 08:00:00.0(Timestamp), false(Boolean), 10.1872(Double), 0(Integer), 0(Integer)
17:48:53.595 [http-nio-34571-exec-6] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - <==    Updates: 1
17:48:53.595 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==>  Preparing: SELECT sku_id, inventory_quantity FROM `epsi_inventory` WHERE `sku_id` IN ( ? )
17:48:53.596 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==> Parameters: 8(String)
17:48:53.618 [http-nio-34571-exec-6] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - <==      Total: 0
17:48:53.618 [http-nio-34571-exec-6] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - ==>  Preparing: update `epsi_inventory` where sku_id in
17:48:53.645 [http-nio-34571-exec-6] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/InventoryMapper.xml]
### The error may involve net.kintex.epsi.inventory.dao.InventoryDao.updateBatch
### The error occurred while executing an update
### SQL: update `epsi_inventory`                    where sku_id in
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/InventoryMapper.xml]
### The error may involve net.kintex.epsi.inventory.dao.InventoryDao.updateBatch
### The error occurred while executing an update
### SQL: update `epsi_inventory`                    where sku_id in
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy163.updateBatch(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getBill(GoodsServiceImpl.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getBill(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getBill(GoodsController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at jdk.internal.reflect.GeneratedMethodAccessor145.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy214.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 114 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:558)
	at com.alibaba.druid.sql.parser.SQLParser.accept(SQLParser.java:566)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseUpdateStatment(MySqlSelectParser.java:569)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseUpdateStatement(MySqlStatementParser.java:134)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:243)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 142 common frames omitted
17:48:53.697 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:48:53.697 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:48:53.706 [http-nio-34571-exec-8] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:48:53.791 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==>  Preparing: INSERT INTO `epsi_sale_order` ( `client_id`, `salesman`, `count_price`, `handling_charge`, `deposit`, `other_price`, `date`, `disabled`, `exchange_rate`, created_by, updated_by ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
17:48:53.792 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - ==> Parameters: 1(Integer), test(String), 246.0(Double), 0.03(Double), 1.0(Double), 1.0(Double), 2020-11-20 08:00:00.0(Timestamp), false(Boolean), 10.1872(Double), 0(Integer), 0(Integer)
17:48:53.809 [http-nio-34571-exec-8] DEBUG n.k.e.sales.dao.SaleOrderDao.creat - <==    Updates: 1
17:48:53.809 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==>  Preparing: SELECT sku_id, inventory_quantity FROM `epsi_inventory` WHERE `sku_id` IN ( ? )
17:48:53.809 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - ==> Parameters: 8(String)
17:48:53.818 [http-nio-34571-exec-8] DEBUG n.k.e.i.d.I.selectBatchInventoryQuantity - <==      Total: 0
17:48:53.818 [http-nio-34571-exec-8] DEBUG n.k.e.i.dao.InventoryDao.updateBatch - ==>  Preparing: update `epsi_inventory` where sku_id in
17:48:53.837 [http-nio-34571-exec-8] ERROR n.k.e.c.h.ExceptionHandlerAdvice - 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/InventoryMapper.xml]
### The error may involve net.kintex.epsi.inventory.dao.InventoryDao.updateBatch
### The error occurred while executing an update
### SQL: update `epsi_inventory`                    where sku_id in
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
### The error may exist in file [/Users/developer01/Projects/epsi/build/resources/main/mappers/InventoryMapper.xml]
### The error may involve net.kintex.epsi.inventory.dao.InventoryDao.updateBatch
### The error occurred while executing an update
### SQL: update `epsi_inventory`                    where sku_id in
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy113.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy163.updateBatch(Unknown Source)
	at net.kintex.epsi.sales.service.impl.GoodsServiceImpl.getBill(GoodsServiceImpl.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy178.getBill(Unknown Source)
	at net.kintex.epsi.sales.controller.GoodsController.getBill(GoodsController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at net.kintex.epsi.user.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:122)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.1, syntax error: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE : update `epsi_inventory`
          
        where sku_id in
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:843)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:286)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at jdk.internal.reflect.GeneratedMethodAccessor145.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy215.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy214.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 114 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'     where sku_id in', expect SET, actual WHERE, pos 48, line 3, column 10, token WHERE
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:558)
	at com.alibaba.druid.sql.parser.SQLParser.accept(SQLParser.java:566)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseUpdateStatment(MySqlSelectParser.java:569)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseUpdateStatement(MySqlStatementParser.java:134)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:243)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:820)
	... 142 common frames omitted
17:54:00.570 [http-nio-34571-exec-9] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 306732
17:54:00.691 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:54:00.692 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:54:00.700 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:54:00.775 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:54:00.775 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:54:00.784 [http-nio-34571-exec-9] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:54:00.797 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
17:54:00.798 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
17:54:00.806 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
17:54:00.807 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
17:54:00.807 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
17:54:00.817 [http-nio-34571-exec-9] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 8
17:54:00.834 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
17:54:00.834 [http-nio-34571-exec-9] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:54:02.163 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:54:02.164 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:54:02.173 [http-nio-34571-exec-10] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:54:02.256 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==>  Preparing: SELECT sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity' as capacity, sku.phoneAttribute->>'$.model' as model, sku.`phoneAttribute`->>'$.grade' as grade, locked, price, device_out_time, saleOrder.remark, saleOrder.exchange_rate, count(sale_order) as quantity, exchangeRate.currency_symbol FROM `epsi_goods` AS goods LEFT JOIN epsi_sku sku ON goods.sku_id = sku.id LEFT JOIN epsi_spu spu ON sku.spu_id = spu.spu_id LEFT JOIN epsi_sale_order saleOrder ON saleOrder.id = goods.sale_order LEFT JOIN epsi_exchange_rate exchangeRate ON saleOrder.exchange_rate = exchangeRate.exchange_rate WHERE sale_order = ? group by sale_order, spu.spu_name, sku.phoneAttribute->>'$.capacity', sku.phoneAttribute->>'$.model', sku.`phoneAttribute`->>'$.grade', locked, price, device_out_time, saleOrder.remark,exchangeRate.currency_symbol
17:54:02.257 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - ==> Parameters: 3(String)
17:54:02.267 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectOneBySaleOrderId - <==      Total: 1
17:54:02.267 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectExchangeRate - ==>  Preparing: SELECT exchange_rate from epsi_sale_order where id= ?
17:54:02.267 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectExchangeRate - ==> Parameters: 3(String)
17:54:02.276 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectExchangeRate - <==      Total: 1
17:54:02.276 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==>  Preparing: SELECT convert(count_price*(handling_charge/100),decimal(8,2)) as handlingCharge from epsi_sale_order where id= ?
17:54:02.277 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - ==> Parameters: 3(String)
17:54:02.285 [http-nio-34571-exec-10] DEBUG n.k.e.s.d.G.selectCountHandlingCharge - <==      Total: 1
17:54:02.302 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getGoodsByOrder' parameter -1
17:54:02.302 [http-nio-34571-exec-10] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
17:55:41.948 [http-nio-34571-exec-7] ERROR c.a.d.pool.DruidAbstractDataSource - discard long time none received connection. , jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, jdbcUrl : jdbc:mysql://8.129.6.121:53307/sppsi_test, lastPacketReceivedIdleMillis : 99645
17:55:42.086 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:55:42.086 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:55:42.095 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:55:42.170 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==>  Preparing: SELECT `user_id`, `user_account`, `user_password`, `access`, `disabled`, `created_at`, `created_by`, `updated_at`, `updated_by` FROM `epsi_user` WHERE `disabled` = 0 AND `user_account` = ?;
17:55:42.170 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - ==> Parameters: test(String)
17:55:42.180 [http-nio-34571-exec-7] DEBUG n.k.e.u.dao.UserDao.selectOneByName - <==      Total: 1
17:55:42.192 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==>  Preparing: SELECT count(0) FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id
17:55:42.192 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - ==> Parameters: 
17:55:42.200 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.S.selectOneOrMany_COUNT - <==      Total: 1
17:55:42.201 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.S.selectOneOrMany - ==>  Preparing: SELECT eso.`id`, eso.`salesman`, eso.`date`, eso.`pay_money_date`, ec.`name`, ec.`contact` as `clientNumber`, eso.`count_price`, eso.`deposit`, eso.`handling_charge`, eso.`other_price`, eso.`remark` FROM `epsi_sale_order` AS eso LEFT JOIN epsi_client ec ON eso.client_id = ec.id LIMIT ?
17:55:42.201 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.S.selectOneOrMany - ==> Parameters: 20(Integer)
17:55:42.211 [http-nio-34571-exec-7] DEBUG n.k.e.s.d.S.selectOneOrMany - <==      Total: 8
17:55:42.228 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - returnType:method 'getOneOrManySaleOrder' parameter -1
17:55:42.228 [http-nio-34571-exec-7] INFO  n.k.e.c.h.ResponseResultHandlerAdvice - converterType:class org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
18:30:58.728 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
18:30:58.732 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
18:30:58.733 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
